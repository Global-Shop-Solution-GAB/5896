Program.Sub.ScreenSU.Start
Gui.F_WO_Dash..Create
Gui.F_WO_Dash..Caption("Work Orders")
Gui.F_WO_Dash..Size(11850,6330)
Gui.F_WO_Dash..MinX(5000)
Gui.F_WO_Dash..MinY(3000)
Gui.F_WO_Dash..Position(0,0)
Gui.F_WO_Dash..BackColor(-2147483633)
Gui.F_WO_Dash..MousePointer(0)
Gui.F_WO_Dash..Event(UnLoad,F_WO_Dash_UnLoad)
Gui.F_WO_Dash.gsgcWOs.Create(GsGridControl)
Gui.F_WO_Dash.gsgcWOs.Size(11730,5265)
Gui.F_WO_Dash.gsgcWOs.Position(0,780)
Gui.F_WO_Dash.gsgcWOs.Anchor(15)
Gui.F_WO_Dash.gsgcWOs.Event(RowCellClick,gsgcWOs_RowCellClick)
Gui.F_WO_Dash.gsgcWOs.Event(CellValueChanged,gsgcWOs_CellValueChanged)
Gui.F_WO_Dash.txtProject.Create(TextBox,"",True,1215,300,0,150,330,True,0,"Arial",8,-2147483643,1)
Gui.F_WO_Dash.txtProject.MaxLength(7)
Gui.F_WO_Dash.lblProject.Create(Label,"Project",True,915,255,0,135,120,True,0,"Arial",8,-2147483633,0)
Gui.F_WO_Dash.cmdRefresh.Create(Button)
Gui.F_WO_Dash.cmdRefresh.Size(390,390)
Gui.F_WO_Dash.cmdRefresh.Position(1530,285)
Gui.F_WO_Dash.cmdRefresh.Caption("Refresh")
Gui.F_WO_Dash.cmdRefresh.Event(Click,cmdRefresh_Click)
Gui.F_WO_Dash.cmdUpdate.Create(Button)
Gui.F_WO_Dash.cmdUpdate.Size(990,375)
Gui.F_WO_Dash.cmdUpdate.Position(10545,120)
Gui.F_WO_Dash.cmdUpdate.Anchor(9)
Gui.F_WO_Dash.cmdUpdate.Caption("Update")
Gui.F_WO_Dash.cmdUpdate.Event(Click,cmdUpdate_Click)
Gui.F_WO_Dash.cmdUpdate.Visible(False)
Gui.F_WO_Dash.frameSettings.Create(Frame)
Gui.F_WO_Dash.frameSettings.Size(1965,555)
Gui.F_WO_Dash.frameSettings.Position(2085,75)
Gui.F_WO_Dash.optOpen.Create(Option)
Gui.F_WO_Dash.optOpen.Size(765,255)
Gui.F_WO_Dash.optOpen.Position(180,150)
Gui.F_WO_Dash.optOpen.Parent("frameSettings")
Gui.F_WO_Dash.optOpen.Caption("Edit")
Gui.F_WO_Dash.optView.Create(Option)
Gui.F_WO_Dash.optView.Size(765,255)
Gui.F_WO_Dash.optView.Position(1050,150)
Gui.F_WO_Dash.optView.Parent("frameSettings")
Gui.F_WO_Dash.optView.Caption("View")
Gui.F_WO_Dash.cmdNotes.Create(Button)
Gui.F_WO_Dash.cmdNotes.Size(1095,375)
Gui.F_WO_Dash.cmdNotes.Position(4200,120)
Gui.F_WO_Dash.cmdNotes.Caption("View Notes")
Gui.F_WO_Dash.cmdNotes.Event(Click,cmdNotes_Click)
Gui.F_Ops_Dash..Create
Gui.F_Ops_Dash..Caption("WO Operations")
Gui.F_Ops_Dash..Size(6855,8670)
Gui.F_Ops_Dash..MinX(3000)
Gui.F_Ops_Dash..MinY(4000)
Gui.F_Ops_Dash..Position(0,0)
Gui.F_Ops_Dash..BackColor(-2147483633)
Gui.F_Ops_Dash..MousePointer(0)
Gui.F_Ops_Dash..Event(UnLoad,F_Ops_Dash_UnLoad)
Gui.F_Ops_Dash.gsgcOps.Create(GsGridControl)
Gui.F_Ops_Dash.gsgcOps.Size(6735,8385)
Gui.F_Ops_Dash.gsgcOps.Position(0,0)
Gui.F_Ops_Dash.gsgcOps.Anchor(15)
Gui.F_Ops_Dash.gsgcOps.Event(RowCellClick,gsgcOps_RowCellClick)
Gui.F_Ops_Dash.gsgcOps.Event(CellValueChanged,gsgcOps_CellValueChanged)
Gui.F_Ops_Dash.cmdAddNew.Create(Button)
Gui.F_Ops_Dash.cmdAddNew.Visible(False)
Gui.F_Ops_Dash.cmdAddNew.Size(990,375)
Gui.F_Ops_Dash.cmdAddNew.Position(165,210)
Gui.F_Ops_Dash.cmdAddNew.Caption("Add New")
Gui.F_Ops_Dash.cmdAddNew.Event(Click,cmdAddNew_Click)
Gui.F_New_Op..Create
Gui.F_New_Op..Caption("*NEW* Job Operation")
Gui.F_New_Op..Size(10440,3555)
Gui.F_New_Op..MinX(0)
Gui.F_New_Op..MinY(0)
Gui.F_New_Op..Position(0,0)
Gui.F_New_Op..BackColor(-2147483633)
Gui.F_New_Op..MousePointer(0)
Gui.F_New_Op..Event(UnLoad,F_New_Op_UnLoad)
Gui.F_New_Op..MaxButton(False)
Gui.F_New_Op..Sizeable(False)
Gui.F_New_Op.ddlOpType.Create(DropDownList)
Gui.F_New_Op.ddlOpType.Size(1575,330)
Gui.F_New_Op.ddlOpType.Position(315,300)
Gui.F_New_Op.ddlOpType.Event(Change,ddlOpType_Click)
Gui.F_New_Op.txtSeq.Create(TextBox,"000000",True,705,300,0,345,1245,True,0,"Arial",8,-2147483643,1)
Gui.F_New_Op.txtSeq.MaxLength(6)
Gui.F_New_Op.txtSeq.NumericOnly(2)
Gui.F_New_Op.txtSeq.Mask("000000")
Gui.F_New_Op.txtSeq.Event(LostFocus,txtSeq_LostFocus)
Gui.F_New_Op.lblSeq.Create(Label,"Sequence",True,870,255,0,330,1035,True,0,"Arial",8,-2147483633,0)
Gui.F_New_Op.lblSeq.DefaultValue("")
Gui.F_New_Op.txtPart.Create(TextBox,"",False,2145,300,0,1320,1245,True,0,"Arial",8,-2147483643,1)
Gui.F_New_Op.txtPart.MaxLength(20)
Gui.F_New_Op.txtPart.ControlGroup(1)
Gui.F_New_Op.txtPart.Event(LostFocus,txtPart_LostFocus)
Gui.F_New_Op.cmdPartBRW.Create(Button)
Gui.F_New_Op.cmdPartBRW.Size(330,330)
Gui.F_New_Op.cmdPartBRW.Position(3510,1230)
Gui.F_New_Op.cmdPartBRW.Caption("^")
Gui.F_New_Op.cmdPartBRW.Event(Click,cmdPartBRW_Click)
Gui.F_New_Op.cmdPartBRW.Visible(False)
Gui.F_New_Op.cmdOutsBRW.Create(Button)
Gui.F_New_Op.cmdOutsBRW.Visible(False)
Gui.F_New_Op.cmdOutsBRW.Size(330,330)
Gui.F_New_Op.cmdOutsBRW.Position(3510,1230)
Gui.F_New_Op.cmdOutsBRW.Caption("^")
Gui.F_New_Op.cmdOutsBRW.Event(Click,cmdOutsBRW_Click)
Gui.F_New_Op.lblPart.Create(Label,"Part Number",False,1095,255,0,1305,1035,True,0,"Arial",8,-2147483633,0)
Gui.F_New_Op.lblOuts.Create(Label,"Outside Code",False,1095,255,0,1305,1035,True,0,"Arial",8,-2147483633,0)
Gui.F_New_Op.txtLWC.Create(TextBox,"",False,765,300,0,1320,1245,True,0,"Arial",8,-2147483643,1)
Gui.F_New_Op.txtLWC.MaxLength(4)
Gui.F_New_Op.txtLWC.ControlGroup(1)
Gui.F_New_Op.txtLWC.Event(LostFocus,txtLWC_LostFocus)
Gui.F_New_Op.lblLWC.Create(Label,"Workcenter/Workgroup",False,2055,255,0,1320,1035,True,0,"Arial",8,-2147483633,0)
Gui.F_New_Op.cmdLWCBRW.Create(Button)
Gui.F_New_Op.cmdLWCBRW.Size(330,330)
Gui.F_New_Op.cmdLWCBRW.Position(2130,1230)
Gui.F_New_Op.cmdLWCBRW.Caption("^")
Gui.F_New_Op.cmdLWCBRW.Event(Click,cmdLWCBRW_Click)
Gui.F_New_Op.cmdLWCBRW.Visible(False)
Gui.F_New_Op.txtOper.Create(TextBox,"",False,945,300,0,3990,1245,True,0,"Arial",8,-2147483643,1)
Gui.F_New_Op.txtOper.MaxLength(6)
Gui.F_New_Op.txtOper.ControlGroup(1)
Gui.F_New_Op.cmdOperBRW.Create(Button)
Gui.F_New_Op.cmdOperBRW.Size(330,330)
Gui.F_New_Op.cmdOperBRW.Position(4980,1230)
Gui.F_New_Op.cmdOperBRW.Caption("^")
Gui.F_New_Op.cmdOperBRW.Event(Click,cmdOperBRW_Click)
Gui.F_New_Op.cmdOperBRW.Visible(False)
Gui.F_New_Op.lblOper.Create(Label,"Std Oper",False,750,255,0,3975,1035,True,0,"Arial",8,-2147483633,0)
Gui.F_New_Op.txtOVend.Create(TextBox,"",False,885,300,0,4005,1245,True,0,"Arial",8,-2147483643,1)
Gui.F_New_Op.txtOVend.MaxLength(6)
Gui.F_New_Op.txtOVend.ControlGroup(1)
Gui.F_New_Op.cmdOVendBRW.Create(Button)
Gui.F_New_Op.cmdOVendBRW.Visible(False)
Gui.F_New_Op.cmdOVendBRW.Size(330,330)
Gui.F_New_Op.cmdOVendBRW.Position(4950,1230)
Gui.F_New_Op.cmdOVendBRW.Caption("^")
Gui.F_New_Op.cmdOVendBRW.Event(Click,cmdOVendBRW_Click)
Gui.F_New_Op.lblOVend.Create(Label,"Vendor",False,690,255,0,3990,1035,True,0,"Arial",8,-2147483633,0)
Gui.F_New_Op.txtDescr.Create(TextBox,"",False,2895,300,0,5460,1245,True,0,"Arial",8,-2147483643,1)
Gui.F_New_Op.txtDescr.MaxLength(30)
Gui.F_New_Op.txtDescr.ControlGroup(1)
Gui.F_New_Op.lblDescr.Create(Label,"Description",False,1020,255,0,5445,1035,True,0,"Arial",8,-2147483633,0)
Gui.F_New_Op.txtMUM.Create(TextBox,"",False,495,300,0,405,1860,True,0,"Arial",8,-2147483643,1)
Gui.F_New_Op.txtMUM.MaxLength(2)
Gui.F_New_Op.txtMUM.ControlGroup(1)
Gui.F_New_Op.lblMUM.Create(Label,"UM",False,450,255,0,390,1650,True,0,"Arial",8,-2147483633,0)
Gui.F_New_Op.cmdMUMBRW.Create(Button)
Gui.F_New_Op.cmdMUMBRW.Size(330,330)
Gui.F_New_Op.cmdMUMBRW.Position(945,1845)
Gui.F_New_Op.cmdMUMBRW.Caption("^")
Gui.F_New_Op.cmdMUMBRW.Visible(False)
Gui.F_New_Op.cmdMUMBRW.Event(Click,cmdUMBRW_Click)
Gui.F_New_Op.txtMLead.Create(TextBox,"",False,495,300,0,1530,1860,True,1,"Arial",8,-2147483643,1)
Gui.F_New_Op.txtMLead.MaxLength(4)
Gui.F_New_Op.txtMLead.NumericOnly(2)
Gui.F_New_Op.txtMLead.ControlGroup(1)
Gui.F_New_Op.txtMLead.Mask("#")
Gui.F_New_Op.lblMLead.Create(Label,"Lead Time",False,870,255,0,1365,1650,True,0,"Arial",8,-2147483633,0)
Gui.F_New_Op.txtOUM.Create(TextBox,"",False,495,300,0,8940,1245,True,0,"Arial",8,-2147483643,1)
Gui.F_New_Op.txtOUM.MaxLength(2)
Gui.F_New_Op.txtOUM.ControlGroup(1)
Gui.F_New_Op.lblOUM.Create(Label,"UM",False,450,255,0,8925,1035,True,0,"Arial",8,-2147483633,0)
Gui.F_New_Op.cmdOUMBRW.Create(Button)
Gui.F_New_Op.cmdOUMBRW.Visible(False)
Gui.F_New_Op.cmdOUMBRW.Size(330,330)
Gui.F_New_Op.cmdOUMBRW.Position(9480,1230)
Gui.F_New_Op.cmdOUMBRW.Caption("^")
Gui.F_New_Op.cmdOUMBRW.Event(Click,cmdUMBRW_Click)
Gui.F_New_Op.txtOLead.Create(TextBox,"",False,495,300,0,405,1860,True,1,"Arial",8,-2147483643,1)
Gui.F_New_Op.txtOLead.MaxLength(4)
Gui.F_New_Op.txtOLead.NumericOnly(2)
Gui.F_New_Op.txtOLead.ControlGroup(1)
Gui.F_New_Op.txtOLead.Mask("#")
Gui.F_New_Op.lblOLead.Create(Label,"Lead (Hours)",False,1065,255,0,390,1650,True,0,"Arial",8,-2147483633,0)
Gui.F_New_Op.txtMinDol.Create(TextBox,"",False,1050,300,0,2370,1860,True,1,"Arial",8,-2147483643,1)
Gui.F_New_Op.txtMinDol.NumericOnly(1)
Gui.F_New_Op.txtMinDol.Mask("#.00")
Gui.F_New_Op.txtMinDol.Event(LostFocus,txtMinDol_LostFocus)
Gui.F_New_Op.txtMinDol.MaxLength(11)
Gui.F_New_Op.txtMinDol.ControlGroup(1)
Gui.F_New_Op.lblMinDol.Create(Label,"Minimum $",False,930,255,0,2355,1650,True,0,"Arial",8,-2147483633,0)
Gui.F_New_Op.txtLOver.Create(TextBox,"",False,360,300,0,9090,1245,True,1,"Arial",8,-2147483643,1)
Gui.F_New_Op.txtLOver.MaxLength(2)
Gui.F_New_Op.txtLOver.NumericOnly(2)
Gui.F_New_Op.txtLOver.Mask("#")
Gui.F_New_Op.txtLOver.ControlGroup(1)
Gui.F_New_Op.lblLOver.Create(Label,"Overlap",False,690,255,0,8940,1035,True,0,"Arial",8,-2147483633,0)
Gui.F_New_Op.txtLWCFact.Create(TextBox,"1",False,360,300,0,615,1860,True,1,"Arial",8,-2147483643,1)
Gui.F_New_Op.txtLWCFact.MaxLength(1)
Gui.F_New_Op.txtLWCFact.NumericOnly(2)
Gui.F_New_Op.txtLWCFact.ControlGroup(1)
Gui.F_New_Op.txtLWCFact.Mask("#")
Gui.F_New_Op.txtLWCFact.Event(LostFocus,txtLWCFact_LostFocus)
Gui.F_New_Op.lblLWCFact.Create(Label,"WC Factor",False,870,255,0,390,1650,True,0,"Arial",8,-2147483633,0)
Gui.F_New_Op.txtLRuntime.Create(TextBox,"",False,1155,300,0,1335,1860,True,1,"Arial",8,-2147483643,1)
Gui.F_New_Op.txtLRuntime.MaxLength(12)
Gui.F_New_Op.txtLRuntime.NumericOnly(1)
Gui.F_New_Op.txtLRuntime.Mask("#.0000")
Gui.F_New_Op.txtLRuntime.ControlGroup(1)
Gui.F_New_Op.txtLRuntime.Event(LostFocus,txt10milF_LostFocus)
Gui.F_New_Op.lblLRuntime.Create(Label,"Runtime",False,705,255,0,1320,1650,True,0,"Arial",8,-2147483633,0)
Gui.F_New_Op.txtLCrew.Create(TextBox,"",False,915,300,0,2610,1860,True,1,"Arial",8,-2147483643,1)
Gui.F_New_Op.txtLCrew.MaxLength(9)
Gui.F_New_Op.txtLCrew.Mask("#.0000")
Gui.F_New_Op.txtLCrew.ControlGroup(1)
Gui.F_New_Op.txtLCrew.Event(LostFocus,txtLCrew_LostFocus)
Gui.F_New_Op.lblLCrew.Create(Label,"Crew Size",False,885,255,0,2595,1650,True,0,"Arial",8,-2147483633,0)
Gui.F_New_Op.txtSetup.Create(TextBox,"",False,1155,300,0,3645,1860,True,1,"Arial",8,-2147483643,1)
Gui.F_New_Op.txtSetup.MaxLength(12)
Gui.F_New_Op.txtSetup.Mask("#.0000")
Gui.F_New_Op.txtSetup.Event(LostFocus,txt10milF_LostFocus)
Gui.F_New_Op.txtSetup.NumericOnly(1)
Gui.F_New_Op.txtSetup.ControlGroup(1)
Gui.F_New_Op.lblMSetup.Create(Label,"Setup Qty",False,870,255,0,3630,1650,True,0,"Arial",8,-2147483633,0)
Gui.F_New_Op.lblLSetup.Create(Label,"Setup Hours",False,1035,255,0,3630,1650,True,0,"Arial",8,-2147483633,0)
Gui.F_New_Op.lblOSetup.Create(Label,"Setup Units",False,960,255,0,3630,1650,True,0,"Arial",8,-2147483633,0)
Gui.F_New_Op.txtFreq.Create(TextBox,"",False,690,300,0,4965,1860,True,1,"Arial",8,-2147483643,1)
Gui.F_New_Op.txtFreq.MaxLength(6)
Gui.F_New_Op.txtFreq.NumericOnly(2)
Gui.F_New_Op.txtFreq.Mask("###,###")
Gui.F_New_Op.txtFreq.ControlGroup(1)
Gui.F_New_Op.lblFreq.Create(Label,"Frequency",False,915,255,0,4890,1650,True,0,"Arial",8,-2147483633,0)
Gui.F_New_Op.txtMQty2M.Create(TextBox,"",False,1125,300,0,5925,1860,True,1,"Arial",8,-2147483643,1)
Gui.F_New_Op.txtMQty2M.MaxLength(12)
Gui.F_New_Op.txtMQty2M.ControlGroup(1)
Gui.F_New_Op.txtMQty2M.Event(LostFocus,txt10milF_LostFocus)
Gui.F_New_Op.txtMQty2M.NumericOnly(1)
Gui.F_New_Op.txtMQty2M.Mask("#.0000")
Gui.F_New_Op.lblMQty2M.Create(Label,"Qty to Make 1",False,1140,255,0,5910,1650,True,0,"Arial",8,-2147483633,0)
Gui.F_New_Op.txtLType.Create(TextBox,"Parts per Hour",False,1215,300,0,5865,1860,True,0,"Arial",8,-2147483643,1)
Gui.F_New_Op.txtLType.Locked(True)
Gui.F_New_Op.txtLType.ControlGroup(1)
Gui.F_New_Op.txtLType.DefaultValue("Parts per Hour")
Gui.F_New_Op.lblLType.Create(Label,"Type",False,540,255,0,5850,1650,True,0,"Arial",8,-2147483633,0)
Gui.F_New_Op.txtOUnits.Create(TextBox,"",False,1290,300,0,5805,1860,True,1,"Arial",8,-2147483643,1)
Gui.F_New_Op.txtOUnits.MaxLength(13)
Gui.F_New_Op.txtOUnits.ControlGroup(1)
Gui.F_New_Op.txtOUnits.Event(LostFocus,txtOUnits_LostFocus)
Gui.F_New_Op.txtOUnits.Mask("#.0000")
Gui.F_New_Op.txtOUnits.NumericOnly(1)
Gui.F_New_Op.lblOUnits.Create(Label,"Units",False,480,255,0,5790,1650,True,0,"Arial",8,-2147483633,0)
Gui.F_New_Op.txtRate.Create(TextBox,"",False,1155,300,0,7215,1860,True,1,"Arial",8,-2147483643,1)
Gui.F_New_Op.txtRate.Event(LostFocus,txt10milF_LostFocus)
Gui.F_New_Op.txtRate.MaxLength(12)
Gui.F_New_Op.txtRate.ControlGroup(1)
Gui.F_New_Op.txtRate.Mask("#.0000")
Gui.F_New_Op.lblRate.Create(Label,"Rate",False,495,255,0,7200,1650,True,0,"Arial",8,-2147483633,0)
Gui.F_New_Op.dtpStart.Create(DatePicker)
Gui.F_New_Op.dtpStart.Size(1425,285)
Gui.F_New_Op.dtpStart.Position(8535,1860)
Gui.F_New_Op.dtpStart.ControlGroup(1)
Gui.F_New_Op.dtpStart.Visible(False)
Gui.F_New_Op.lblStart.Create(Label,"Start Date",False,855,255,0,8520,1650,True,0,"Arial",8,-2147483633,0)
Gui.F_New_Op.txtProjGrp.Create(TextBox,"",False,795,300,0,405,2475,True,0,"Arial",8,-2147483643,1)
Gui.F_New_Op.txtProjGrp.MaxLength(6)
Gui.F_New_Op.txtProjGrp.ControlGroup(1)
Gui.F_New_Op.lblProjGrp.Create(Label,"Project Group",False,1155,255,0,390,2265,True,0,"Arial",8,-2147483633,0)
Gui.F_New_Op.cmdProjGrpBRW.Create(Button)
Gui.F_New_Op.cmdProjGrpBRW.Size(330,330)
Gui.F_New_Op.cmdProjGrpBRW.Position(1245,2460)
Gui.F_New_Op.cmdProjGrpBRW.Caption("^")
Gui.F_New_Op.cmdProjGrpBRW.Event(Click,cmdProjGrpBRW_Click)
Gui.F_New_Op.cmdProjGrpBRW.Visible(False)
Gui.F_New_Op.txtSort.Create(TextBox,"",False,3165,300,0,1725,2475,True,0,"Arial",8,-2147483643,1)
Gui.F_New_Op.txtSort.MaxLength(20)
Gui.F_New_Op.txtSort.ControlGroup(1)
Gui.F_New_Op.lblSort.Create(Label,"Sort Code",False,915,255,0,1710,2265,True,0,"Arial",8,-2147483633,0)
Gui.F_New_Op.chkMTooling.Create(CheckBox)
Gui.F_New_Op.chkMTooling.Size(930,360)
Gui.F_New_Op.chkMTooling.Position(5175,2445)
Gui.F_New_Op.chkMTooling.Caption("Tooling")
Gui.F_New_Op.chkMTooling.Visible(False)
Gui.F_New_Op.chkMNoPO.Create(CheckBox)
Gui.F_New_Op.chkMNoPO.Size(1260,360)
Gui.F_New_Op.chkMNoPO.Position(6195,2445)
Gui.F_New_Op.chkMNoPO.Caption("Hold, No PO")
Gui.F_New_Op.chkMNoPO.Visible(False)
Gui.F_New_Op.lblComments.Create(Label,"Comments",False,885,255,0,5445,1035,True,0,"Arial",8,-2147483633,0)
Gui.F_New_Op.cmdAddOp.Create(Button)
Gui.F_New_Op.cmdAddOp.Size(990,375)
Gui.F_New_Op.cmdAddOp.Position(9105,315)
Gui.F_New_Op.cmdAddOp.Caption("Add")
Gui.F_New_Op.cmdAddOp.Event(Click,cmdAddOp_Click)
Gui.F_New_Op.cmdRouterBRW.Create(Button)
Gui.F_New_Op.cmdRouterBRW.Visible(False)
Gui.F_New_Op.cmdRouterBRW.Size(330,330)
Gui.F_New_Op.cmdRouterBRW.Position(3510,1230)
Gui.F_New_Op.cmdRouterBRW.Caption("^")
Gui.F_New_Op.cmdRouterBRW.Event(Click,cmdRouterBRW_Click)
Gui.F_New_Op.lblRouter.Create(Label,"Router",False,630,255,0,1320,1035,True,0,"Arial",8,-2147483633,0)
Gui.F_New_Op.txtRouterBeg.Create(TextBox,"000000",False,705,300,0,2220,1860,True,1,"Arial",8,-2147483643,1)
Gui.F_New_Op.txtRouterBeg.Mask("000000")
Gui.F_New_Op.txtRouterBeg.DefaultValue("000000")
Gui.F_New_Op.txtRouterBeg.ControlGroup(1)
Gui.F_New_Op.txtRouterBeg.Event(LostFocus,txtRouterSeq_LostFocus)
Gui.F_New_Op.txtRouterEnd.Create(TextBox,"999999",False,705,300,0,3780,1860,True,1,"Arial",8,-2147483643,1)
Gui.F_New_Op.txtRouterEnd.Mask("000000")
Gui.F_New_Op.txtRouterEnd.DefaultValue("999999")
Gui.F_New_Op.txtRouterEnd.ControlGroup(1)
Gui.F_New_Op.txtRouterEnd.Event(LostFocus,txtRouterSeq_LostFocus)
Gui.F_New_Op.lblThru.Create(Label,"thru",False,420,255,0,3345,1935,True,0,"Arial",8,-2147483633,0)
Gui.F_New_Op.cmdRouterBegBRW.Create(Button)
Gui.F_New_Op.cmdRouterBegBRW.Visible(False)
Gui.F_New_Op.cmdRouterBegBRW.Size(330,330)
Gui.F_New_Op.cmdRouterBegBRW.Position(2985,1845)
Gui.F_New_Op.cmdRouterBegBRW.Caption("^")
Gui.F_New_Op.cmdRouterBegBRW.Event(Click,cmdRouterSeqBRW_Click)
Gui.F_New_Op.cmdRouterEndBRW.Create(Button)
Gui.F_New_Op.cmdRouterEndBRW.Visible(False)
Gui.F_New_Op.cmdRouterEndBRW.Size(330,330)
Gui.F_New_Op.cmdRouterEndBRW.Position(4545,1845)
Gui.F_New_Op.cmdRouterEndBRW.Caption("^")
Gui.F_New_Op.cmdRouterEndBRW.Event(Click,cmdRouterSeqBRW_Click)
Gui.F_New_Op.lblFrom.Create(Label,"From Seq",False,795,255,0,1380,1935,True,0,"Arial",8,-2147483633,0)
Gui.F_New_Op.gsgcRouterSeq.Create(GsGridControl)
Gui.F_New_Op.gsgcRouterSeq.Size(10320,4515)
Gui.F_New_Op.gsgcRouterSeq.Position(0,2295)
Gui.F_New_Op.gsgcRouterSeq.Visible(False)
Gui.F_New_Op.gsgcRouterSeq.Event(CellValueChanged,gsgcRouterSeq_CellValueChanged)
Gui.F_New_Op.lblTask.Create(Label,"Task List",False,765,255,0,3975,1035,True,0,"Arial",8,-2147483633,0)
Gui.F_New_Op.txtTSignoff.Create(TextBox,"",False,1035,300,0,1320,1245,True,0,"Arial",8,-2147483643,1)
Gui.F_New_Op.txtTSignoff.Locked(True)
Gui.F_New_Op.txtTSignoff.ControlGroup(1)
Gui.F_New_Op.cmdTSignoffBRW.Create(Button)
Gui.F_New_Op.cmdTSignoffBRW.Visible(False)
Gui.F_New_Op.cmdTSignoffBRW.Size(330,330)
Gui.F_New_Op.cmdTSignoffBRW.Position(2400,1230)
Gui.F_New_Op.cmdTSignoffBRW.Caption("^")
Gui.F_New_Op.cmdTSignoffBRW.Event(Click,cmdTSignoffBRW_Click)
Gui.F_New_Op.lblTSignoff.Create(Label,"Signoff Group/User",False,1590,255,0,1320,1035,True,0,"Arial",8,-2147483633,0)
Gui.F_New_Op.lblTSignoff.DefaultValue("")
Gui.F_New_Op.lblDuration.Create(Label,"Duration (Hrs)",False,1275,255,0,1320,1650,True,0,"Arial",8,-2147483633,0)
Gui.F_New_Op.chkCompletion.Create(CheckBox)
Gui.F_New_Op.chkCompletion.Visible(False)
Gui.F_New_Op.chkCompletion.Size(3675,360)
Gui.F_New_Op.chkCompletion.Position(5175,2445)
Gui.F_New_Op.chkCompletion.Caption("Completion Required for Next Sequence")
Gui.F_New_Op.chkCompletion.ControlGroup(1)
Gui.F_New_Op.txtDuration.Create(TextBox,"",False,1155,300,0,1335,1860,True,1,"Arial",8,-2147483643,1)
Gui.F_New_Op.txtDuration.MaxLength(12)
Gui.F_New_Op.txtDuration.NumericOnly(1)
Gui.F_New_Op.txtDuration.Mask("#.0000")
Gui.F_New_Op.txtDuration.ControlGroup(1)
Gui.F_New_Op.txtDuration.Event(LostFocus,txt10milF_LostFocus)
Gui.F_Sched_Type..Create
Gui.F_Sched_Type..Caption("Schedule Type")
Gui.F_Sched_Type..Size(5595,1305)
Gui.F_Sched_Type..MinX(0)
Gui.F_Sched_Type..MinY(0)
Gui.F_Sched_Type..Position(0,0)
Gui.F_Sched_Type..AlwaysOnTop(True)
Gui.F_Sched_Type..BackColor(-2147483633)
Gui.F_Sched_Type..ControlBox(False)
Gui.F_Sched_Type..MaxButton(False)
Gui.F_Sched_Type..MousePointer(0)
Gui.F_Sched_Type..Sizeable(False)
Gui.F_Sched_Type.lblSelect.Create(Label,"Select which type of scheduling to use when rescheduling work orders.",True,5430,255,0,120,165,True,0,"Arial",8,-2147483633,0)
Gui.F_Sched_Type.cmdBack.Create(Button)
Gui.F_Sched_Type.cmdBack.Size(1335,375)
Gui.F_Sched_Type.cmdBack.Position(2040,540)
Gui.F_Sched_Type.cmdBack.Caption("Backward (40)")
Gui.F_Sched_Type.cmdBack.Event(Click,cmdSched_Click)
Gui.F_Sched_Type.cmdForw.Create(Button)
Gui.F_Sched_Type.cmdForw.Size(1335,375)
Gui.F_Sched_Type.cmdForw.Position(150,540)
Gui.F_Sched_Type.cmdForw.Caption("Forward (0)")
Gui.F_Sched_Type.cmdForw.Event(Click,cmdSched_Click)
Gui.F_Sched_Type.cmdHybr.Create(Button)
Gui.F_Sched_Type.cmdHybr.Size(1335,375)
Gui.F_Sched_Type.cmdHybr.Position(3930,540)
Gui.F_Sched_Type.cmdHybr.Caption("Hybrid (83)")
Gui.F_Sched_Type.cmdHybr.Event(Click,cmdSched_Click)
Gui.F_Notes..Create
Gui.F_Notes..Caption("Part Notes")
Gui.F_Notes..Size(6330,4005)
Gui.F_Notes..MinX(0)
Gui.F_Notes..MinY(0)
Gui.F_Notes..Position(0,0)
Gui.F_Notes..BackColor(-2147483633)
Gui.F_Notes..MousePointer(0)
Gui.F_Notes..Event(UnLoad,F_Notes_UnLoad)
Gui.F_Notes.gsgcNotes.Create(GsGridControl)
Gui.F_Notes.gsgcNotes.Size(6240,3735)
Gui.F_Notes.gsgcNotes.Position(0,0)
Gui.F_Notes.gsgcNotes.Anchor(15)
Program.Sub.ScreenSU.End

Program.Sub.Preflight.Start
Program.External.Include.Library("GCG_5896_Try_Catch.lib")
Program.External.Include.Library("GCG_5896_UPLJOBST.lib")
Program.External.Include.Library("450000.lib")
Program.External.Include.Library("300011.lib")
Program.External.Include.Library("2009.lib")
V.Global.sWait.Declare
V.Global.iRouterInc.Declare
V.Global.bPerms.Declare
V.Global.sTaskWC.Declare
V.Global.sSchedType.Declare
Program.Sub.Preflight.End

Program.Sub.Main.Start
'Author: BixRB
'Work Order Edit Dashboard
'absolute BEAST of a dashboard. reach out to me with questions: bbaker@gssmail.com
V.Local.sIcon.Declare
F.Intrinsic.Control.Try

F.Global.Security.CheckUserAccessIPM(527,1,V.Global.bPerms)
'V.Global.bPerms.Set(False)
F.Intrinsic.Control.If(V.Global.bPerms)
	Gui.F_WO_Dash.cmdUpdate.Visible(True)
	Gui.F_Ops_Dash.cmdAddNew.Visible(True)
	Gui.F_Ops_Dash.gsgcOps.Size(6735,7605)
	Gui.F_Ops_Dash.gsgcOps.Position(0,780)
	
	Gui.F_WO_Dash..ContextMenuCreate("ctxWODash")
	Gui.F_WO_Dash..ContextMenuAddItem("ctxWODash","ExportJobs",0,"Export")
	Gui.F_WO_Dash..ContextMenuAddItem("ctxWODash","ResetChange",0,"Reset Selected Change(s)")
	Gui.F_WO_Dash..ContextMenuAddItem("ctxWODash","ResetChanges",0,"Reset All Changes")
	Gui.F_WO_Dash..ContextMenuSetItemEventHandler("ctxWODash","ExportJobs",gsgcWOs_ExportJobs)
	Gui.F_WO_Dash..ContextMenuSetItemEventHandler("ctxWODash","ResetChange",gsgcWOs_ResetChange)
	Gui.F_WO_Dash..ContextMenuSetItemEventHandler("ctxWODash","ResetChanges",gsgcWOs_ResetChanges)
	Gui.F_WO_Dash.gsgcWOs.ContextMenuAttach("ctxWODash")
	
	Gui.F_Ops_Dash..ContextMenuCreate("ctxOpsDash")
	Gui.F_Ops_Dash..ContextMenuAddItem("ctxOpsDash","ExportOps",0,"Export")
	Gui.F_Ops_Dash..ContextMenuAddItem("ctxOpsDash","ResetChange",0,"Reset Selected Change(s)")
	Gui.F_Ops_Dash..ContextMenuAddItem("ctxOpsDash","ResetChanges",0,"Reset All Changes")
	Gui.F_Ops_Dash..ContextMenuSetItemEventHandler("ctxOpsDash","ExportOps",gsgcOps_ExportOps)
	Gui.F_Ops_Dash..ContextMenuSetItemEventHandler("ctxOpsDash","ResetChange",gsgcOps_ResetChange)
	Gui.F_Ops_Dash..ContextMenuSetItemEventHandler("ctxOpsDash","ResetChanges",gsgcOps_ResetChanges)
	Gui.F_Ops_Dash.gsgcOps.ContextMenuAttach("ctxOpsDash")
	Gui.F_WO_Dash.optOpen.Value(1)
F.Intrinsic.Control.Else
	Gui.F_WO_Dash..ContextMenuCreate("ctxWODash")
	Gui.F_WO_Dash..ContextMenuAddItem("ctxWODash","ExportJobs",0,"Export")
	Gui.F_WO_Dash..ContextMenuSetItemEventHandler("ctxWODash","ExportJobs",gsgcWOs_ExportJobs)
	Gui.F_WO_Dash.gsgcWOs.ContextMenuAttach("ctxWODash")
	
	Gui.F_Ops_Dash..ContextMenuCreate("ctxOpsDash")
	Gui.F_Ops_Dash..ContextMenuAddItem("ctxOpsDash","ExportOps",0,"Export")
	Gui.F_Ops_Dash..ContextMenuSetItemEventHandler("ctxOpsDash","ExportOps",gsgcOps_ExportOps)
	Gui.F_Ops_Dash.gsgcOps.ContextMenuAttach("ctxOpsDash")
	Gui.F_WO_Dash.frameSettings.Visible(False)
	Gui.F_WO_Dash.cmdNotes.Position(2085,120)
	Gui.F_WO_Dash.optView.Value(1)
F.Intrinsic.Control.EndIf

Gui.F_New_Op.ddlOpType.AddItem("Material")
Gui.F_New_Op.ddlOpType.AddItem("Labor")
Gui.F_New_Op.ddlOpType.AddItem("Outside")
Gui.F_New_Op.ddlOpType.AddItem("Comment")
Gui.F_New_Op.ddlOpType.AddItem("Task")
Gui.F_New_Op.ddlOpType.AddItem("Router Seq")
F.Intrinsic.Control.CallSub(SetNewOpDefaultValues)

F.ODBC.Connection!con.OpenCompanyConnection
F.Data.Dictionary.CreateFromSQL("dictProjects","con","select distinct PROJECT, PROJECT from V_PROJECT_MASTER order by PROJECT;")
F.ODBC.Connection!con.Close

Gui.F_WO_Dash.txtProject.AddAutoCompleteItem("dictProjects","Dictionary")

F.Intrinsic.String.Build("{0}\gss2.ico",V.Caller.GASDir,V.Local.sIcon)
Gui.F_WO_Dash..Icon(V.Local.sIcon)
Gui.F_Ops_Dash..Icon(V.Local.sIcon)

F.Global.General.ReadOption(401113,3,-1,0,V.Global.iRouterInc)
F.Global.General.ReadOption(401238,1,"",0,V.Global.sTaskWC)

Gui.F_New_Op.gsgcRouterSeq.AddGridview("gvBlank")
Gui.F_New_Op.gsgcRouterSeq.MainView("gvBlank")

F.Intrinsic.Control.CallSub(LoadScreenSettings)

Gui.F_WO_Dash..Show
Gui.F_WO_Dash.txtProject.SetFocus

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage,"ScriptFile",V.Caller.ScriptFile,"CurrentSubroutine",V.Ambient.CurrentSubroutine)
	F.Intrinsic.Control.CallSub(F_WO_Dash_UnLoad)
F.Intrinsic.Control.EndTry
Program.Sub.Main.End

Program.Sub.F_WO_Dash_UnLoad.Start
V.Local.sMsg.Declare
V.Local.sSQL.Declare
V.Local.iJobs.Declare
V.Local.iRet.Declare
V.Local.iCheck.Declare
F.Intrinsic.Control.Try

F.Intrinsic.Control.If(V.DataTable.dtTopLevel.Exists)
	F.Data.DataView.Create("dtTopLevel","dvTopCheckChanges")
	F.Data.DataView.Create("dtTopLevel","dvTopCheckDeletes")
	F.Data.DataView.Create("dtTopLevel$dtSubLevel","dvSubCheckChanges")
	F.Data.DataView.Create("dtTopLevel$dtSubLevel","dvSubCheckDeletes")
	F.Data.DataView.Create("dtWOOpsChild","dvOpsCheckChanges")
	F.Data.DataView.Create("dtWOOpsChild","dvOpsCheckDeletes")
	F.Data.DataView.Create("dtWOOpsChild","dvOpsCheckAdds")
	F.Data.DataView.SetFilter("dtTopLevel","dvTopCheckChanges","([PRI_CHANGED] = True or [QTY_CHANGED] = True) and [DELETED] = False")
	F.Data.DataView.SetFilter("dtTopLevel","dvTopCheckDeletes","[DELETED] = True")
	F.Data.DataView.SetFilter("dtTopLevel","dvSubCheckChanges","([PRI_CHANGED] = True or [QTY_CHANGED] = True) and [DELETED] = False")
	F.Data.DataView.SetFilter("dtTopLevel","dvSubCheckDeletes","[DELETED] = True")
	F.Data.DataView.SetFilter("dtWOOpsChild","dvOpsCheckChanges","([DESCR_CHANGED] = True or [QTY_CHANGED] = True) and [DELETED] = False and [JOB_DELETED] = False and [ADDED] = False")
	F.Data.DataView.SetFilter("dtWOOpsChild","dvOpsCheckDeletes","([DELETED] = True or [JOB_DELETED] = True) and [ADDED] = False")
	F.Data.DataView.SetFilter("dtWOOpsChild","dvOpsCheckAdds","[ADDED] = True and [JOB_DELETED] = False")
	
	F.Intrinsic.Math.Evaluate("[V.DataView.dtTopLevel!dvTopCheckChanges.RowCount]+[V.DataView.dtTopLevel!dvTopCheckDeletes.RowCount]+[V.DataView.dtTopLevel!dvSubCheckChanges.RowCount]+[V.DataView.dtTopLevel!dvSubCheckDeletes.RowCount]+[V.DataView.dtWOOpsChild!dvOpsCheckChanges.RowCount]+[V.DataView.dtWOOpsChild!dvOpsCheckDeletes.RowCount]+[V.DataView.dtWOOpsChild!dvOpsCheckAdds.RowCount]",V.Local.iCheck)
	
	F.Intrinsic.Control.If(V.Local.iCheck,>,0,and,V.Ambient.ErrorNumber,=,0)
		'there are changes/deletes/adds, report them to the user
		F.Intrinsic.String.Build("You have unsaved changes: {0}",V.Ambient.NewLine,V.Local.sMsg)
		F.Intrinsic.Control.If(V.DataView.dtTopLevel!dvTopCheckChanges.RowCount,>,0,or,V.DataView.dtTopLevel!dvSubCheckChanges.RowCount,>,0)
			F.Intrinsic.Math.Add(V.DataView.dtTopLevel!dvTopCheckChanges.RowCount,V.DataView.dtTopLevel!dvSubCheckChanges.RowCount,V.Local.iJobs)
			F.Intrinsic.String.Build("{0}{1}Changed Jobs: {2}",V.Local.sMsg,V.Ambient.NewLine,V.Local.iJobs.String,V.Local.sMsg)
		F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.If(V.DataView.dtTopLevel!dvTopCheckDeletes.RowCount,>,0,or,V.DataView.dtTopLevel!dvSubCheckDeletes.RowCount,>,0)
			F.Intrinsic.Math.Add(V.DataView.dtTopLevel!dvTopCheckDeletes.RowCount,V.DataView.dtTopLevel!dvSubCheckDeletes.RowCount,V.Local.iJobs)
			F.Intrinsic.String.Build("{0}{1}Deleted Jobs: {2}",V.Local.sMsg,V.Ambient.NewLine,V.Local.iJobs.String,V.Local.sMsg)
		F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.If(V.DataView.dtWOOpsChild!dvOpsCheckAdds.RowCount,>,0)
			F.Intrinsic.String.Build("{0}{1}Added Operations: {2}",V.Local.sMsg,V.Ambient.NewLine,V.DataView.dtWOOpsChild!dvOpsCheckAdds.RowCount,V.Local.sMsg)
		F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.If(V.DataView.dtWOOpsChild!dvOpsCheckChanges.RowCount,>,0)
			F.Intrinsic.String.Build("{0}{1}Changed Operations: {2}",V.Local.sMsg,V.Ambient.NewLine,V.DataView.dtWOOpsChild!dvOpsCheckChanges.RowCount,V.Local.sMsg)
		F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.If(V.DataView.dtWOOpsChild!dvOpsCheckDeletes.RowCount,>,0)
			F.Intrinsic.String.Build("{0}{1}Deleted Operations: {2}",V.Local.sMsg,V.Ambient.NewLine,V.DataView.dtWOOpsChild!dvOpsCheckDeletes.RowCount,V.Local.sMsg)
		F.Intrinsic.Control.EndIf
		F.Intrinsic.String.Build("{0}{1}{1}Would you like to continue?",V.Local.sMsg,V.Ambient.NewLine,V.Local.sMsg)
		F.Intrinsic.UI.Msgbox(V.Local.sMsg,"EXITING",4,V.Local.iRet)
		F.Intrinsic.Control.If(V.Local.iRet,=,7)
			'No - return to screen
			F.Data.DataView.Close("dtTopLevel","dvTopCheckChanges")
			F.Data.DataView.Close("dtTopLevel","dvTopCheckDeletes")
			F.Data.DataView.Close("dtTopLevel","dvSubCheckChanges")
			F.Data.DataView.Close("dtTopLevel","dvSubCheckDeletes")
			F.Data.DataView.Close("dtWOOpsChild","dvOpsCheckChanges")
			F.Data.DataView.Close("dtWOOpsChild","dvOpsCheckDeletes")
			F.Data.DataView.Close("dtWOOpsChild","dvOpsCheckAdds")
			
			F.Intrinsic.Control.ExitSub
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.EndIf
	'Destroy all session's locks
	F.Intrinsic.String.Build("delete from X_LOCK_FILE where LOCK_TYPE = 'WO' and COMPANY = '{0}' and USER_ID = '{1}' and PGM like 'octsrs.net.exe' and REF like 'GCG_5896_WorkOrder_Dashboard.g2u';",V.Caller.CompanyCode,V.Caller.User,V.Local.sSQL)
	F.ODBC.Connection!conUnload.OpenCompanyConnection
	F.ODBC.Connection!conUnload.Execute(V.Local.sSQL)
	F.ODBC.Connection!conUnload.Close
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.CallSub(SaveScreenSettings)
F.Intrinsic.Control.End

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage,"ScriptFile",V.Caller.ScriptFile,"CurrentSubroutine",V.Ambient.CurrentSubroutine)
	'Destroy all session's locks
	F.Intrinsic.String.Build("delete from X_LOCK_FILE where LOCK_TYPE = 'WO' and COMPANY = '{0}' and USER_ID = '{1}' and PGM like 'octsrs.net.exe' and REF like 'GCG_5896_WorkOrder_Dashboard.g2u';",V.Caller.CompanyCode,V.Caller.User,V.Local.sSQL)
	F.ODBC.Connection!conUnloadTryCatch.OpenCompanyConnection
	F.ODBC.Connection!conUnloadTryCatch.Execute(V.Local.sSQL)
	F.ODBC.Connection!conUnloadTryCatch.Close
	F.Intrinsic.Control.End
F.Intrinsic.Control.EndTry
Program.Sub.F_WO_Dash_UnLoad.End

Program.Sub.LoadWODTs.Start
V.Local.sSQL.Declare
V.Local.sJobList.Declare
V.Local.sMaterial.Declare
V.Local.bWONotes.Declare
F.Intrinsic.Control.Try

'OPENCONNECTION
F.ODBC.Connection!con.OpenCompanyConnection
F.Data.DataTable.CreateFromSQL("dtWOHead","con","select JOB, SUFFIX, JOB + '-' + SUFFIX as 'WO', PROJECT, PARENT_WO as PARENT_JOB, PARENT_SUFFIX_PARENT as PARENT_SUFFIX, PRIORITY, PRIORITY as PRI_ORIG, DATE_CLOSED, PART, rtrim(left(PART, 17)) as PART_NUM, rtrim(right(PART, 3)) as REV, LOCATION as LOC, PRODUCT_LINE as PL, rtrim(DESCRIPTION) as DESCR, QTY_ORDER, QTY_ORDER as QTY_ORDER_ORIG, QTY_COMPLETED, AMT_MATERIAL, AMT_LABOR, AMT_OVERHEAD, OUTS as AMT_OUTSIDE, FREIGHT as AMT_FREIGHT, OTHER as AMT_OTHER, PARTIAL_MATERIAL, PARTIAL_LABOR, PARTIAL_OVERHEAD, PARTIAL_OUTSIDE, PARTIAL_FREIGHT, PARTIAL_OTHER, DATE_START, DATE_DUE from V_JOB_HEADER where DATE_CLOSED = '1900-01-01' or PARENT_WO <> '' order by JOB, SUFFIX;")
F.Data.DataTable.AddExpressionColumn("dtWOHead","HAS_COST","Boolean","IIF(AMT_MATERIAL <> 0 or AMT_LABOR <> 0 or AMT_OVERHEAD <> 0 or AMT_OUTSIDE <> 0 or AMT_FREIGHT <> 0 or AMT_OTHER <> 0 or PARTIAL_MATERIAL <> 0 or PARTIAL_LABOR <> 0 or PARTIAL_OVERHEAD <> 0 or PARTIAL_OUTSIDE <> 0 or PARTIAL_FREIGHT <> 0 or PARTIAL_OTHER <> 0, True, False)")
F.ODBC.Connection!con.TableExists("GAB_4169_WO_NOTES",V.Local.bWONotes)
F.Intrinsic.Variable.AddRV("WONotes",V.Local.bWONotes)
F.Intrinsic.Control.If(V.Screen.F_WO_Dash!txtProject.Text.Trim,=,"")
	V.Global.sWait.Set("Loading all open Top Level WOs")
	F.Intrinsic.UI.InvokeWaitDialog(V.Global.sWait,"Loading...")
	F.Data.DataTable.CreateFromSQL("dtWOOps","con","select JOB, SUFFIX, SEQ, LMO, PART as PART_WC, rtrim(left(PART, 17)) as PART_NUM_WC, rtrim(right(PART, 3)) as REV, LOCN as LOC, rtrim(DESCRIPTION) as DESCR, rtrim(DESCRIPTION) as DESCR_ORIG, UM, if(LMO <> 'O', HOURS_ESTIMATED, UNITS_OPEN) as QTY_HR_EST, if(LMO <> 'O', HOURS_ESTIMATED, UNITS_OPEN) as QTY_HR_EST_ORIG, HOURS_ACTUAL as QTY_HR_ACT from JOB_OPERATIONS;")
	F.Data.DataTable.CreateFromSQL("dtWODetail","con","select JOB, SUFFIX, SEQ from JOB_DETAIL;")
	F.Data.DataView.Create("dtWODetail","dvDistinctList")
	F.Data.DataView.ToDataTableDistinct("dtWODetail","dvDistinctList","dtDetailJobList","JOB*!*SUFFIX")
	F.Data.DataView.ToDataTableDistinct("dtWODetail","dvDistinctList","dtDetailSeqList","JOB*!*SUFFIX*!*SEQ")
	F.Data.DataTable.Close("dtWODetail")
	F.Data.DataView.Create("dtWOHead","dvMaterial")
	F.Data.DataView.ToDataTableDistinct("dtWOHead","dvMaterial","dtHeadDistinct","PART_NUM*!*LOC")
	F.Data.DataView.Close("dtWOHead","dvMaterial")
	
	'DEBUGGING
	'V.Local.bWONotes.Set(False)
	'DEBUGGING
	F.Intrinsic.Control.If(V.Local.bWONotes)
		'optional notes table exists, let's get it
		F.Data.DataTable.CreateFromSQL("dtWONotes","con","select JOB, SUFFIX, rtrim(NOTES) as WO_NOTES from GAB_4169_WO_NOTES;")
	F.Intrinsic.Control.Else
		F.Data.DataTable.Create("dtWONotes",False)
		F.Data.DataTable.AddColumn("dtWONotes","JOB","String")
		F.Data.DataTable.AddColumn("dtWONotes","SUFFIX","String")
		F.Data.DataTable.AddColumn("dtWONotes","WO_NOTES","String")
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.Else
	F.Intrinsic.String.Build("Loading all open Top Level WOs in Project {0}",V.Screen.F_WO_Dash!txtProject.Text.Trim,V.Global.sWait)
	F.Intrinsic.UI.InvokeWaitDialog(V.Global.sWait,"Loading...")
	F.Intrinsic.String.Build("PROJECT = '{0}'",V.Screen.F_WO_Dash!txtProject.Text,V.Local.sSQL)
	F.Data.DataView.Create("dtWOHead","dvProject")
	F.Data.DataView.SetFilter("dtWOHead","dvProject",V.Local.sSQL)
	F.Data.DataView.ToDataTableDistinct("dtWOHead","dvProject","dtProjectJobs","JOB")
	F.Data.DataView.Create("dtProjectJobs","dvProjectJobs")
	F.Data.DataView.ToString("dtProjectJobs","dvProjectJobs","JOB","","', '",V.Local.sJobList)
	F.Intrinsic.String.Build("select JOB, SUFFIX, SEQ, LMO, PART as PART_WC, rtrim(left(PART, 17)) as PART_NUM_WC, rtrim(right(PART, 3)) as REV, LOCN as LOC, rtrim(DESCRIPTION) as DESCR, rtrim(DESCRIPTION) as DESCR_ORIG, UM, if(LMO <> 'O', HOURS_ESTIMATED, UNITS_OPEN) as QTY_HR_EST, if(LMO <> 'O', HOURS_ESTIMATED, UNITS_OPEN) as QTY_HR_EST_ORIG, HOURS_ACTUAL as QTY_HR_ACT from JOB_OPERATIONS where JOB in ('{0}');",V.Local.sJobList,V.Local.sSQL)
	F.Data.DataTable.CreateFromSQL("dtWOOps","con",V.Local.sSQL)
	F.Intrinsic.String.Build("select JOB, SUFFIX, SEQ from JOB_DETAIL where JOB in ('{0}');",V.Local.sJobList,V.Local.sSQL)
	F.Data.DataTable.CreateFromSQL("dtWODetail","con",V.Local.sSQL)
	F.Data.DataView.Create("dtWODetail","dvDistinctList")
	F.Data.DataView.ToDataTableDistinct("dtWODetail","dvDistinctList","dtDetailJobList","JOB*!*SUFFIX")
	F.Data.DataView.ToDataTableDistinct("dtWODetail","dvDistinctList","dtDetailSeqList","JOB*!*SUFFIX*!*SEQ")
	F.Data.DataTable.Close("dtWODetail")
	F.Data.DataTable.Close("dtProjectJobs")
	F.Data.DataView.ToDataTableDistinct("dtWOHead","dvProject","dtHeadDistinct","PART_NUM*!*LOC")
	F.Data.DataView.Close("dtWOHead","dvProject")
	
	F.Intrinsic.Control.If(V.Local.bWONotes)
		'optional notes table exists, let's get it
		F.Intrinsic.String.Build("select JOB, SUFFIX, rtrim(NOTES) as WO_NOTES from GAB_4169_WO_NOTES where JOB in ('{0}');",V.Local.sJobList,V.Local.sSQL)
		F.Data.DataTable.CreateFromSQL("dtWONotes","con",V.Local.sSQL)
	F.Intrinsic.Control.Else
		F.Data.DataTable.Create("dtWONotes",False)
		F.Data.DataTable.AddColumn("dtWONotes","JOB","String")
		F.Data.DataTable.AddColumn("dtWONotes","SUFFIX","String")
		F.Data.DataTable.AddColumn("dtWONotes","WO_NOTES","String")
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.EndIf

F.Data.DataTable.AddExpressionColumn("dtHeadDistinct","PART_NUM_WC","String","[PART_NUM]")

F.Data.DataView.Create("dtWOOps","dvMaterial")
F.Data.DataView.SetFilter("dtWOOps","dvMaterial","[LMO] = 'M'")
F.Data.DataView.ToDataTableDistinct("dtWOOps","dvMaterial","dtMaterialDistinct","PART_NUM_WC*!*LOC")
F.Data.DataView.Close("dtWOOps","dvMaterial")

F.Data.DataTable.Merge("dtHeadDistinct","dtMaterialDistinct",True,2)
F.Data.DataTable.Close("dtHeadDistinct")

F.Data.DataView.Create("dtMaterialDistinct","dvAllNotes")
F.Data.DataView.ToDataTableDistinct("dtMaterialDistinct","dvAllNotes","dtAllNotes","PART_NUM_WC*!*LOC")
F.Data.DataTable.Close("dtMaterialDistinct")

F.Data.DataView.Create("dtAllNotes","dv")
F.Data.DataView.ToString("dtAllNotes","dv","PART_NUM_WC*!*LOC","*!*","#$#",V.Local.sMaterial)
F.Data.DataTable.Close("dtAllNotes")
F.Intrinsic.Control.If(V.Local.sMaterial,<>,"")
	F.Intrinsic.String.Replace(V.Local.sMaterial.PSQLFriendly,"*!*","",V.Local.sMaterial)
	F.Intrinsic.String.Replace(V.Local.sMaterial,"#$#","', '",V.Local.sMaterial)
F.Intrinsic.Control.EndIf
F.Intrinsic.String.Build("select A.PART, rtrim(left(A.PART, 17)) as PART_NUM, rtrim(right(A.PART, 3)) as REV, A.LOCN as LOCATION, B.QTY_ONHAND, A.DATE as DATE_STR, A.TIME as TIME_STR, A.USERID, rtrim(A.TEXT) as PART_NOTES from V_PART_NOTES A left join V_INVENTORY_MSTR B on A.PART = B.PART and A.LOCN = B.LOCATION where left(A.PART, 17) + A.LOCN in ('{0}');",V.Local.sMaterial,V.Local.sMaterial)
F.Data.DataTable.CreateFromSQL("dtNotes","con",V.Local.sMaterial,True)

F.ODBC.Connection!con.Close
'CLOSECONNECTION

'create header dictionaries for start date and due date
F.Data.Dictionary.CreateFromDataTable("dictStartDates","dtWOHead","WO","DATE_START")
F.Data.Dictionary.SetDefaultReturn("dictStartDates",V.Ambient.MinDate)
F.Data.Dictionary.CreateFromDataTable("dictDueDates","dtWOHead","WO","DATE_DUE")
F.Data.Dictionary.SetDefaultReturn("dictDueDates",V.Ambient.MinDate)

F.Data.DataTable.AddColumn("dtDetailJobList","HAS_DETAIL","Boolean",False)
F.Data.DataTable.SetValue("dtDetailJobList",-1,"HAS_DETAIL",True)
F.Data.DataTable.AddColumn("dtDetailSeqList","HAS_DETAIL","Boolean",False)
F.Data.DataTable.SetValue("dtDetailSeqList",-1,"HAS_DETAIL",True)

F.Data.DataView.Create("dtWOHead","dvTopLevel")
F.Intrinsic.Control.If(V.Screen.F_WO_Dash!txtProject.Text.Trim,=,"")
	F.Data.DataView.SetFilter("dtWOHead","dvTopLevel","PARENT_JOB = ''")
F.Intrinsic.Control.Else
	F.Intrinsic.String.Build("PARENT_JOB = '' and PROJECT = '{0}'",V.Screen.F_WO_Dash!txtProject.Text.Trim,V.Local.sSQL)
	F.Data.DataView.SetFilter("dtWOHead","dvTopLevel",V.Local.sSQL)
F.Intrinsic.Control.EndIf
F.Data.DataView.Create("dtWOHead","dvSubLevel")
F.Data.DataView.SetFilter("dtWOHead","dvSubLevel","PARENT_JOB <> ''")

'Send top level WOs to its own DataTable
F.Data.Linq.Join("LeftJoin","DataView","dtWOHead","dvTopLevel*!*HEAD","DataTable","dtDetailJobList*!*DETAIL","HEAD.JOB = DETAIL.JOB and HEAD.SUFFIX = DETAIL.SUFFIX","DataTable","dtWONotes*!*NOTES","HEAD.JOB = NOTES.JOB and HEAD.SUFFIX = NOTES.SUFFIX","*",,,,"dtTopLevel",True)
F.Data.DataTable.RemoveColumn("dtTopLevel","JOB1")
F.Data.DataTable.RemoveColumn("dtTopLevel","SUFFIX1")
F.Data.DataTable.RemoveColumn("dtTopLevel","JOB2")
F.Data.DataTable.RemoveColumn("dtTopLevel","SUFFIX2")
F.Data.DataView.Create("dtTopLevel","dvNullCheck")
F.Data.DataView.SetFilter("dtTopLevel","dvNullCheck","isnull(HAS_DETAIL, False) = False")
F.Data.DataView.SetValue("dtTopLevel","dvNullCheck",-1,"HAS_DETAIL",False)
F.Data.DataView.Close("dtTopLevel","dvNullCheck")

F.Data.DataView.Close("dtWOHead","dvTopLevel")
F.Data.DataView.Create("dtTopLevel","dvParents")
F.Data.DataView.SetFilter("dtTopLevel","dvParents","PARENT_SUFFIX <> '' and SUFFIX = '000'")

'Join sub level DataView to top level DataTable to get top level close dates
F.Data.Linq.Join("LeftJoin","DataView","dtWOHead","dvSubLevel*!*SUB","DataView","dtTopLevel","dvParents*!*TOP","SUB.PARENT_JOB = TOP.JOB","DataTable","dtDetailJobList*!*DETAIL","SUB.JOB = DETAIL.JOB and SUB.SUFFIX = DETAIL.SUFFIX","DataTable","dtWONotes*!*NOTES","SUB.JOB = NOTES.JOB and SUB.SUFFIX = NOTES.SUFFIX","SUB.JOB*!*SUB.SUFFIX*!*SUB.WO*!*SUB.PARENT_JOB*!*SUB.PARENT_SUFFIX*!*SUB.PRIORITY*!*SUB.PRI_ORIG*!*SUB.DATE_CLOSED*!*SUB.PART*!*SUB.PART_NUM*!*SUB.REV*!*SUB.LOC*!*SUB.PL*!*SUB.DESCR*!*SUB.QTY_ORDER*!*SUB.QTY_ORDER_ORIG*!*SUB.QTY_COMPLETED*!*SUB.HAS_COST*!*TOP.DATE_CLOSED as TOP_CLOSED*!*TOP.SUFFIX as TOP_SUFFIX*!*DETAIL.HAS_DETAIL*!*SUB.DATE_START*!*SUB.DATE_DUE*!*NOTES.WO_NOTES",,,,"dtSubLevel",False)
F.Data.DataView.Create("dtSubLevel","dvNullCheck")
F.Data.DataView.SetFilter("dtSubLevel","dvNullCheck","isnull(HAS_DETAIL, False) = False")
F.Data.DataView.SetValue("dtSubLevel","dvNullCheck",-1,"HAS_DETAIL",False)
F.Data.DataView.Close("dtSubLevel","dvNullCheck")

F.Data.DataView.Close("dtTopLevel","dvParents")
F.Data.DataView.Create("dtSubLevel","dvOpenTop")
F.Data.DataView.SetFilter("dtSubLevel","dvOpenTop","isnull(TOP_CLOSED, #1/1/1899#) = #1/1/1900#")
F.Data.DataView.ToDataTable("dtSubLevel","dvOpenTop","dtTopLevel$dtSubLevel",True)
F.Data.DataTable.RemoveColumn("dtTopLevel$dtSubLevel","TOP_CLOSED")

'I want to steal the information from the child table here to merge into the Parent table so that I can display unlinked child WOs
F.Data.DataView.SetFilter("dtSubLevel","dvOpenTop","isnull(TOP_CLOSED, #1/1/1899#) <> #1/1/1900#")
F.Data.DataView.ToDataTable("dtSubLevel","dvOpenTop","dtNullRefChildWOs",True)
F.Data.DataTable.Merge("dtNullRefChildWOs","dtTopLevel",True,2)
F.Data.DataTable.Close("dtNullRefChildWOs")

F.Data.DataTable.AddExpressionColumn("dtTopLevel$dtSubLevel","PARENT_WO","String","PARENT_JOB + '-' + PARENT_SUFFIX")
F.Data.DataTable.AddExpressionColumn("dtTopLevel$dtSubLevel","DATE_CLOSED_V","Date","iif(DATE_CLOSED = #1/1/1900#, null, DATE_CLOSED)")

F.Data.DataTable.AddColumn("dtTopLevel","BLANK","String","")
F.Data.DataTable.AddColumn("dtTopLevel","PRI_CHANGED","Boolean",False)
F.Data.DataTable.AddColumn("dtTopLevel","QTY_CHANGED","Boolean",False)
F.Data.DataTable.AddColumn("dtTopLevel","DELETED","Boolean",False)
F.Data.DataTable.AddColumn("dtTopLevel","VIEW_OPS","String","")
F.Data.DataTable.AddColumn("dtTopLevel","DELETE_CMD","String","")
F.Data.DataTable.AddColumn("dtTopLevel$dtSubLevel","PRI_CHANGED","Boolean",False)
F.Data.DataTable.AddColumn("dtTopLevel$dtSubLevel","QTY_CHANGED","Boolean",False)
F.Data.DataTable.AddColumn("dtTopLevel$dtSubLevel","DELETED","Boolean",False)
F.Data.DataTable.AddColumn("dtTopLevel$dtSubLevel","VIEW_OPS","String","")
F.Data.DataTable.AddColumn("dtTopLevel$dtSubLevel","DELETE_CMD","String","")

F.Data.DataTable.AddRelation("dtTopLevel","JOB*!*SUFFIX","dtTopLevel$dtSubLevel","PARENT_JOB*!*TOP_SUFFIX","Child Work Orders")

F.Data.DataView.Create("dtTopLevel$dtSubLevel","dvSubLevel")

'Combine operations table with Sub level table to attach child work orders to their respective operations
F.Data.Linq.Join("LeftJoin","DataTable","dtWOOps*!*OPS","DataView","dtTopLevel","dvSubLevel*!*HEAD","OPS.JOB = HEAD.PARENT_JOB and OPS.SUFFIX = HEAD.PARENT_SUFFIX and OPS.PART_WC = HEAD.PART","DataTable","dtDetailSeqList*!*DETAIL","OPS.JOB = DETAIL.JOB and OPS.SUFFIX = DETAIL.SUFFIX and OPS.SEQ = DETAIL.SEQ","OPS.JOB*!*OPS.SUFFIX*!*OPS.SEQ*!*OPS.LMO*!*OPS.PART_WC*!*OPS.PART_NUM_WC*!*OPS.REV*!*OPS.LOC*!*OPS.DESCR*!*OPS.DESCR_ORIG*!*OPS.UM*!*OPS.QTY_HR_EST*!*OPS.QTY_HR_EST_ORIG*!*OPS.QTY_HR_ACT*!*HEAD.JOB as CHILD_JOB*!*HEAD.SUFFIX as CHILD_SUFFIX*!*HEAD.WO as CHILD_WO*!*HEAD.DATE_CLOSED as CHILD_CLOSED*!*DETAIL.HAS_DETAIL",,,"OPS.JOB asc, OPS.SUFFIX asc, OPS.SEQ asc","dtWOOpsChild",True)
F.Data.DataView.Create("dtWOOpsChild","dvNullCheck")
F.Data.DataView.SetFilter("dtWOOpsChild","dvNullCheck","isnull(HAS_DETAIL, False) = False")
F.Data.DataView.SetValue("dtWOOpsChild","dvNullCheck",-1,"HAS_DETAIL",False)
F.Data.DataView.SetFilter("dtWOOpsChild","dvNullCheck","isnull(CHILD_CLOSED, #1/1/1900#) = #1/1/1900#")
F.Data.DataView.SetValue("dtWOOpsChild","dvNullCheck",-1,"CHILD_CLOSED",V.Ambient.MinDate)
F.Data.DataView.Close("dtWOOpsChild","dvNullCheck")

F.Data.DataView.Create("dtWOOpsChild","dvCommNull")
F.Data.DataView.SetFilter("dtWOOpsChild","dvCommNull","LMO = 'C'")
F.Data.DataView.SetValue("dtWOOpsChild","dvCommNull",-1,"QTY_HR_EST",V.Ambient.DBNull,"QTY_HR_ACT",V.Ambient.DBNull,"QTY_HR_EST_ORIG",V.Ambient.DBNull)
F.Data.DataView.Close("dtWOOpsChild","dvCommNull")

'add start date and due dates to Ops table
F.Data.DataTable.AddExpressionColumn("dtWOOpsChild","WO","String","[JOB] + '-' + [SUFFIX]")
F.Data.DataTable.AddColumn("dtWOOpsChild","DATE_START","Date")
F.Data.DataTable.FillFromDictionary("dtWOOpsChild","dictStartDates","WO","DATE_START")
F.Data.DataTable.AddColumn("dtWOOpsChild","DATE_DUE","Date")
F.Data.DataTable.FillFromDictionary("dtWOOpsChild","dictDueDates","WO","DATE_DUE")
F.Data.DataTable.RemoveColumn("dtWOOpsChild","WO")

F.Data.DataView.Create("dtWOOpsChild","dvWO")
F.Data.DataView.SetSort("dtWOOpsChild","dvWO","SEQ asc")

F.Data.DataTable.AddColumn("dtWOOpsChild","DESCR_CHANGED","Boolean",False)
F.Data.DataTable.AddColumn("dtWOOpsChild","QTY_CHANGED","Boolean",False)
F.Data.DataTable.AddColumn("dtWOOpsChild","DELETED","Boolean",False)
F.Data.DataTable.AddColumn("dtWOOpsChild","JOB_DELETED","Boolean",False)
F.Data.DataTable.AddColumn("dtWOOpsChild","ADDED","Boolean",False)
F.Data.DataTable.AddColumn("dtWOOpsChild","DELETE_CMD","String","")

F.Data.DataTable.AddExpressionColumn("dtTopLevel","DELTA","Boolean","iif([PRI_CHANGED] = True or [QTY_CHANGED] = True or [DELETED] = True, True, False)")
F.Data.DataTable.AddExpressionColumn("dtTopLevel$dtSubLevel","DELTA","Boolean","iif([PRI_CHANGED] = True or [QTY_CHANGED] = True or [DELETED] = True, True, False)")
F.Data.DataTable.AddExpressionColumn("dtWOOpsChild","DELTA","Boolean","iif([DESCR_CHANGED] = True or [QTY_CHANGED] = True or [DELETED] = True or [JOB_DELETED] = True, True, False)")

F.Data.DataTable.Create("dtAddOpsM",True)
F.Data.DataTable.AddColumn("dtAddOpsM","JOB","String")
F.Data.DataTable.AddColumn("dtAddOpsM","SUFFIX","String")
F.Data.DataTable.AddColumn("dtAddOpsM","SEQ","String")
F.Data.DataTable.AddColumn("dtAddOpsM","PART","String")
F.Data.DataTable.AddColumn("dtAddOpsM","OPERATION","String")
F.Data.DataTable.AddColumn("dtAddOpsM","DESCRIPTION","String")
F.Data.DataTable.AddColumn("dtAddOpsM","UM","String")
F.Data.DataTable.AddColumn("dtAddOpsM","LEAD","Long")
F.Data.DataTable.AddColumn("dtAddOpsM","MIN_DOL","Float")
F.Data.DataTable.AddColumn("dtAddOpsM","SETUP","Float")
F.Data.DataTable.AddColumn("dtAddOpsM","FREQ","Long")
F.Data.DataTable.AddColumn("dtAddOpsM","QTY","Float")
F.Data.DataTable.AddColumn("dtAddOpsM","RATE","Float")
F.Data.DataTable.AddColumn("dtAddOpsM","START","Date")
F.Data.DataTable.AddColumn("dtAddOpsM","PROJ_GRP","String")
F.Data.DataTable.AddColumn("dtAddOpsM","SORT","String")
F.Data.DataTable.AddColumn("dtAddOpsM","TOOLING","Boolean")
F.Data.DataTable.AddColumn("dtAddOpsM","HOLD","Boolean")
F.Data.DataTable.AddColumn("dtAddOpsM","ROUTER","String")
F.Data.DataTable.AddColumn("dtAddOpsM","ROUTER_SEQ","String")

F.Data.DataTable.Create("dtAddOpsL",True)
F.Data.DataTable.AddColumn("dtAddOpsL","JOB","String")
F.Data.DataTable.AddColumn("dtAddOpsL","SUFFIX","String")
F.Data.DataTable.AddColumn("dtAddOpsL","SEQ","String")
F.Data.DataTable.AddColumn("dtAddOpsL","WORKCENTER","String")
F.Data.DataTable.AddColumn("dtAddOpsL","OPERATION","String")
F.Data.DataTable.AddColumn("dtAddOpsL","DESCRIPTION","String")
F.Data.DataTable.AddColumn("dtAddOpsL","OVERLAP","Long")
F.Data.DataTable.AddColumn("dtAddOpsL","WC_FACT","Long")
F.Data.DataTable.AddColumn("dtAddOpsL","RUNTIME","Float")
F.Data.DataTable.AddColumn("dtAddOpsL","CREW_SIZE","Float")
F.Data.DataTable.AddColumn("dtAddOpsL","SETUP","Float")
F.Data.DataTable.AddColumn("dtAddOpsL","FREQ","Long")
F.Data.DataTable.AddColumn("dtAddOpsL","TYPE","String")
F.Data.DataTable.AddColumn("dtAddOpsL","RATE","Float")
F.Data.DataTable.AddColumn("dtAddOpsL","START","Date")
F.Data.DataTable.AddColumn("dtAddOpsL","PROJ_GRP","String")
F.Data.DataTable.AddColumn("dtAddOpsL","SORT","String")
F.Data.DataTable.AddColumn("dtAddOpsL","APPROVAL","String")
F.Data.DataTable.AddColumn("dtAddOpsL","COMPL_CHK","Boolean")
F.Data.DataTable.AddColumn("dtAddOpsL","ROUTER","String")
F.Data.DataTable.AddColumn("dtAddOpsL","ROUTER_SEQ","String")

F.Data.DataTable.Create("dtAddOpsO",True)
F.Data.DataTable.AddColumn("dtAddOpsO","JOB","String")
F.Data.DataTable.AddColumn("dtAddOpsO","SUFFIX","String")
F.Data.DataTable.AddColumn("dtAddOpsO","SEQ","String")
F.Data.DataTable.AddColumn("dtAddOpsO","OUTSIDE_CODE","String")
F.Data.DataTable.AddColumn("dtAddOpsO","VENDOR","String")
F.Data.DataTable.AddColumn("dtAddOpsO","DESCRIPTION","String")
F.Data.DataTable.AddColumn("dtAddOpsO","UM","String")
F.Data.DataTable.AddColumn("dtAddOpsO","LEAD","Long")
F.Data.DataTable.AddColumn("dtAddOpsO","MIN_DOL","Float")
F.Data.DataTable.AddColumn("dtAddOpsO","SETUP","Float")
F.Data.DataTable.AddColumn("dtAddOpsO","FREQ","Long")
F.Data.DataTable.AddColumn("dtAddOpsO","UNITS","Float")
F.Data.DataTable.AddColumn("dtAddOpsO","RATE","Float")
F.Data.DataTable.AddColumn("dtAddOpsO","START","Date")
F.Data.DataTable.AddColumn("dtAddOpsO","PROJ_GRP","String")
F.Data.DataTable.AddColumn("dtAddOpsO","SORT","String")
F.Data.DataTable.AddColumn("dtAddOpsO","ROUTER","String")
F.Data.DataTable.AddColumn("dtAddOpsO","ROUTER_SEQ","String")

F.Data.DataTable.Create("dtAddOpsC",True)
F.Data.DataTable.AddColumn("dtAddOpsC","JOB","String")
F.Data.DataTable.AddColumn("dtAddOpsC","SUFFIX","String")
F.Data.DataTable.AddColumn("dtAddOpsC","SEQ","String")
F.Data.DataTable.AddColumn("dtAddOpsC","OPERATION","String")
F.Data.DataTable.AddColumn("dtAddOpsC","DESCRIPTION","String")
F.Data.DataTable.AddColumn("dtAddOpsC","ROUTER","String")
F.Data.DataTable.AddColumn("dtAddOpsC","ROUTER_SEQ","String")

'manipulate material notes
F.Data.DataTable.AddExpressionColumn("dtNotes","DATE_NOTES","DateTime","convert(substring([DATE_STR], 5, 2) + '/' + substring([DATE_STR], 7, 2) + '/' + substring([DATE_STR], 1, 4) + ' ' + substring([TIME_STR], 1, 2) + ':' + substring([TIME_STR], 3, 2) + ':' + substring([TIME_STR], 5, 2), System.DateTime)")

'Top Level Notes
'F.Data.Linq.Join("InnerJoin","DataTable","dtTopLevel*!*MAIN","DataTable","dtNotes*!*NOTES","MAIN.PART_NUM = NOTES.PART_NUM","MAIN.JOB*!*MAIN.SUFFIX*!*MAIN.PART_NUM*!*NOTES.REV*!*NOTES.QTY_ONHAND*!*NOTES.DATE_NOTES*!*NOTES.USERID*!*NOTES.PART_NOTES","NOTES.QTY_ONHAND > 0","","MAIN.PART_NUM asc, NOTES.REV asc, NOTES.DATE_NOTES asc, NOTES.USERID asc","dtTopLevel$dtNotes",True)
'F.Data.DataTable.AddRelation("dtTopLevel","JOB*!*SUFFIX","dtTopLevel$dtNotes","JOB*!*SUFFIX","Notes")
'F.Data.DataView.Create("dtTopLevel$dtNotes","dvTopNotes")
F.Data.Linq.Join("InnerJoin","DataTable","dtTopLevel*!*MAIN","DataTable","dtNotes*!*NOTES","MAIN.PART_NUM = NOTES.PART_NUM","MAIN.JOB*!*MAIN.SUFFIX*!*MAIN.PART_NUM*!*NOTES.REV*!*NOTES.DATE_STR*!*NOTES.TIME_STR*!*NOTES.USERID","NOTES.QTY_ONHAND > 0","","MAIN.JOB asc, MAIN.SUFFIX asc","dtNotes$dtJobList",True)

'Sub Level Notes
'F.Data.Linq.Join("InnerJoin","DataTable","dtTopLevel$dtSubLevel*!*MAIN","DataTable","dtNotes*!*NOTES","MAIN.PART_NUM = NOTES.PART_NUM","MAIN.JOB*!*MAIN.SUFFIX*!*MAIN.PART_NUM*!*NOTES.REV*!*NOTES.QTY_ONHAND*!*NOTES.DATE_NOTES*!*NOTES.USERID*!*NOTES.PART_NOTES","NOTES.QTY_ONHAND","","MAIN.PART_NUM asc, NOTES.REV asc, NOTES.DATE_NOTES asc, NOTES.USERID asc","dtTopLevel$dtSubLevel$dtNotes",True)
'F.Data.DataTable.AddRelation("dtTopLevel$dtSubLevel","JOB*!*SUFFIX","dtTopLevel$dtSubLevel$dtNotes","JOB*!*SUFFIX","Child Notes")
'F.Data.DataView.Create("dtTopLevel$dtSubLevel$dtNotes","dvSubNotes")
F.Data.Linq.Join("InnerJoin","DataTable","dtTopLevel$dtSubLevel*!*MAIN","DataTable","dtNotes*!*NOTES","MAIN.PART_NUM = NOTES.PART_NUM","MAIN.JOB*!*MAIN.SUFFIX*!*MAIN.PART_NUM*!*NOTES.REV*!*NOTES.DATE_STR*!*NOTES.TIME_STR*!*NOTES.USERID","NOTES.QTY_ONHAND > 0","","MAIN.JOB asc, MAIN.SUFFIX asc","dtNotesSubLevel",True)
F.Data.DataTable.Merge("dtNotesSubLevel","dtNotes$dtJobList",True,2)
F.Data.DataTable.Close("dtNotesSubLevel")
F.Data.DataTable.AddColumn("dtNotes$dtJobList","SEQ","String","------")

'Operation Notes
'F.Data.Linq.Join("InnerJoin","DataTable","dtWOOpsChild*!*MAIN","DataTable","dtNotes*!*NOTES","MAIN.PART_NUM_WC = NOTES.PART_NUM","MAIN.JOB*!*MAIN.SUFFIX*!*MAIN.SEQ*!*NOTES.PART_NUM*!*NOTES.REV*!*NOTES.QTY_ONHAND*!*NOTES.DATE_NOTES*!*NOTES.USERID*!*NOTES.PART_NOTES","MAIN.LMO = 'M' and MAIN.SEQ < '995000' and NOTES.QTY_ONHAND > 0","","MAIN.PART_NUM_WC asc, NOTES.REV asc, NOTES.DATE_NOTES asc, NOTES.USERID asc","dtWOOpsChild$dtNotes",True)
'F.Data.DataTable.AddRelation("dtWOOpsChild","JOB*!*SUFFIX*!*SEQ","dtWOOpsChild$dtNotes","JOB*!*SUFFIX*!*SEQ","Notes")
'F.Data.DataView.Create("dtWOOpsChild$dtNotes","dvNotes")
F.Data.Linq.Join("InnerJoin","DataTable","dtWOOpsChild*!*MAIN","DataTable","dtNotes*!*NOTES","MAIN.PART_NUM_WC = NOTES.PART_NUM","MAIN.JOB*!*MAIN.SUFFIX*!*MAIN.SEQ*!*NOTES.PART_NUM*!*NOTES.REV*!*NOTES.DATE_STR*!*NOTES.TIME_STR*!*NOTES.USERID","MAIN.LMO = 'M' and MAIN.SEQ < '995000' and NOTES.QTY_ONHAND > 0","","MAIN.JOB asc, MAIN.SUFFIX asc, MAIN.SEQ asc","dtNotesOp",True)
F.Data.DataTable.Merge("dtNotesOp","dtNotes$dtJobList",True,2)
F.Data.DataTable.Close("dtNotesOp")

'Create master list of Jobs and Suffixes
F.Data.DataTable.AddRelation("dtNotes","PART_NUM*!*REV*!*DATE_STR*!*TIME_STR*!*USERID","dtNotes$dtJobList","PART_NUM*!*REV*!*DATE_STR*!*TIME_STR*!*USERID","Job List")
F.Data.DataView.Create("dtNotes$dtJobList","dvJobList")

F.Data.DataTable.Close("dtWOHead")
F.Data.DataTable.Close("dtWOOps")
F.Data.DataTable.Close("dtSubLevel")
F.Data.DataTable.Close("dtDetailJobList")
F.Data.DataTable.Close("dtDetailSeqList")
F.Data.DataTable.Close("dtWONotes")
F.Data.Dictionary.Close("dictStartDates")
F.Data.Dictionary.Close("dictDueDates")

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage,"ScriptFile",V.Caller.ScriptFile,"CurrentSubroutine",V.Ambient.CurrentSubroutine)
	F.Intrinsic.Control.CallSub(F_WO_Dash_UnLoad)
F.Intrinsic.Control.EndTry
Program.Sub.LoadWODTs.End

Program.Sub.SetupGridView.Start
V.Local.iVisibleIndex.Declare
'V.Local.iPartWcIndex.Declare
V.Local.iOpDescIndex.Declare
V.Local.iOpQtyHrEstIndex.Declare
V.Local.iCnt.Declare
F.Intrinsic.Control.Try

Gui.F_WO_Dash.gsgcWOs.AddGridviewFromDataTable("gvTopLevel","dtTopLevel")
Gui.F_WO_Dash.gsgcWOs.AddGridviewFromDataView("gvSubLevel","dtTopLevel","dvSubLevel")
'Gui.F_WO_Dash.gsgcWOs.AddGridviewFromDataView("gvTopNotes","dtTopLevel","dvTopNotes")
'Gui.F_WO_Dash.gsgcWOs.AddGridviewFromDataView("gvSubNotes","dtTopLevel","dvSubNotes")
Gui.F_Ops_Dash.gsgcOps.AddGridviewFromDataView("gvOps","dtWOOpsChild","dvWO")
'Gui.F_Ops_Dash.gsgcOps.AddGridviewFromDataView("gvNotes","dtWOOpsChild","dvNotes")
Gui.F_Notes.gsgcNotes.AddGridviewFromDataTable("gvNotes","dtNotes")
Gui.F_Notes.gsgcNotes.AddGridviewFromDataView("gvJobList","dtNotes","dvJobList")

Gui.F_WO_Dash.gsgcWOs.SetGridviewProperty("gvTopLevel","MultiSelectMode",1)
Gui.F_WO_Dash.gsgcWOs.SetGridviewProperty("gvTopLevel","EnterKeyNavigation","Vertical")
Gui.F_WO_Dash.gsgcWOs.SetGridviewProperty("gvTopLevel","OptionsViewColumnAutoWidth",False)
Gui.F_WO_Dash.gsgcWOs.SetGridviewProperty("gvTopLevel","ShowDetailTabs",True)
Gui.F_WO_Dash.gsgcWOs.SetGridviewProperty("gvSubLevel","MultiSelectMode",1)
Gui.F_WO_Dash.gsgcWOs.SetGridviewProperty("gvSubLevel","EnterKeyNavigation","Vertical")
Gui.F_WO_Dash.gsgcWOs.SetGridviewProperty("gvSubLevel","OptionsViewColumnAutoWidth",False)
Gui.F_WO_Dash.gsgcWOs.SetGridviewProperty("gvSubLevel","ShowDetailTabs",True)
'Gui.F_WO_Dash.gsgcWOs.SetGridviewProperty("gvTopNotes","OptionsViewColumnAutoWidth",False)
'Gui.F_WO_Dash.gsgcWOs.SetGridviewProperty("gvTopNotes","Editable",False)
'Gui.F_WO_Dash.gsgcWOs.SetGridviewProperty("gvTopNotes","OptionsViewRowAutoHeight",True)
'Gui.F_WO_Dash.gsgcWOs.SetGridviewProperty("gvSubNotes","OptionsViewColumnAutoWidth",False)
'Gui.F_WO_Dash.gsgcWOs.SetGridviewProperty("gvSubNotes","Editable",False)
'Gui.F_WO_Dash.gsgcWOs.SetGridviewProperty("gvSubNotes","OptionsViewRowAutoHeight",True)
Gui.F_Ops_Dash.gsgcOps.SetGridviewProperty("gvOps","MultiSelectMode",1)
Gui.F_Ops_Dash.gsgcOps.SetGridviewProperty("gvOps","EnterKeyNavigation","Vertical")
Gui.F_Ops_Dash.gsgcOps.SetGridviewProperty("gvOps","OptionsViewColumnAutoWidth",False)
Gui.F_Ops_Dash.gsgcOps.SetGridviewProperty("gvOps","ShowDetailTabs",True)
'Gui.F_Ops_Dash.gsgcOps.SetGridviewProperty("gvNotes","OptionsViewColumnAutoWidth",False)
'Gui.F_Ops_Dash.gsgcOps.SetGridviewProperty("gvNotes","Editable",False)
'Gui.F_Ops_Dash.gsgcOps.SetGridviewProperty("gvNotes","OptionsViewRowAutoHeight",True)
Gui.F_Notes.gsgcNotes.SetGridviewProperty("gvNotes","OptionsViewColumnAutoWidth",False)
Gui.F_Notes.gsgcNotes.SetGridviewProperty("gvNotes","Editable",False)
Gui.F_Notes.gsgcNotes.SetGridviewProperty("gvNotes","OptionsViewRowAutoHeight",True)
Gui.F_Notes.gsgcNotes.SetGridviewProperty("gvNotes","ActiveFilterString","[QTY_ONHAND] > 0")
Gui.F_Notes.gsgcNotes.SetGridviewProperty("gvNotes","ShowDetailTabs",True)
Gui.F_Notes.gsgcNotes.SetGridviewProperty("gvJobList","OptionsViewColumnAutoWidth",False)
Gui.F_Notes.gsgcNotes.SetGridviewProperty("gvJobList","Editable",False)

Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","BLANK","AllowShowHide",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","JOB","Visible",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","JOB","AllowShowHide",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","SUFFIX","Visible",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","SUFFIX","AllowShowHide",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","PARENT_JOB","Visible",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","PARENT_JOB","AllowShowHide",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","PARENT_SUFFIX","Visible",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","PARENT_SUFFIX","AllowShowHide",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","PRI_ORIG","Visible",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","PRI_ORIG","AllowShowHide",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","DATE_CLOSED","Visible",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","DATE_CLOSED","AllowShowHide",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","PART","Visible",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","PART","AllowShowHide",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","QTY_ORDER_ORIG","Visible",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","QTY_ORDER_ORIG","AllowShowHide",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","AMT_MATERIAL","Visible",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","AMT_MATERIAL","AllowShowHide",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","AMT_LABOR","Visible",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","AMT_LABOR","AllowShowHide",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","AMT_OVERHEAD","Visible",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","AMT_OVERHEAD","AllowShowHide",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","AMT_OUTSIDE","Visible",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","AMT_OUTSIDE","AllowShowHide",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","AMT_FREIGHT","Visible",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","AMT_FREIGHT","AllowShowHide",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","AMT_OTHER","Visible",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","AMT_OTHER","AllowShowHide",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","PARTIAL_MATERIAL","Visible",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","PARTIAL_MATERIAL","AllowShowHide",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","PARTIAL_LABOR","Visible",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","PARTIAL_LABOR","AllowShowHide",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","PARTIAL_OVERHEAD","Visible",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","PARTIAL_OVERHEAD","AllowShowHide",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","PARTIAL_OUTSIDE","Visible",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","PARTIAL_OUTSIDE","AllowShowHide",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","PARTIAL_FREIGHT","Visible",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","PARTIAL_FREIGHT","AllowShowHide",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","PARTIAL_OTHER","Visible",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","PARTIAL_OTHER","AllowShowHide",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","DATE_START","Visible",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","DATE_START","AllowShowHide",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","DATE_DUE","Visible",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","DATE_DUE","AllowShowHide",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","PRI_CHANGED","Visible",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","PRI_CHANGED","AllowShowHide",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","QTY_CHANGED","Visible",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","QTY_CHANGED","AllowShowHide",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","DELETED","Visible",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","DELETED","AllowShowHide",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","DELTA","Visible",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","DELTA","AllowShowHide",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","VIEW_OPS","AllowShowHide",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","DELETE_CMD","AllowShowHide",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","HAS_COST","AllowShowHide",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","HAS_DETAIL","AllowShowHide",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","JOB","Visible",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","JOB","AllowShowHide",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","SUFFIX","Visible",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","SUFFIX","AllowShowHide",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","PARENT_JOB","Visible",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","PARENT_JOB","AllowShowHide",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","PARENT_SUFFIX","Visible",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","PARENT_SUFFIX","AllowShowHide",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","PRI_ORIG","Visible",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","PRI_ORIG","AllowShowHide",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","DATE_CLOSED","Visible",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","DATE_CLOSED","AllowShowHide",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","PART","Visible",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","PART","AllowShowHide",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","QTY_ORDER_ORIG","Visible",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","QTY_ORDER_ORIG","AllowShowHide",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","TOP_SUFFIX","Visible",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","TOP_SUFFIX","AllowShowHide",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","DATE_START","Visible",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","DATE_START","AllowShowHide",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","DATE_DUE","Visible",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","DATE_DUE","AllowShowHide",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","PRI_CHANGED","Visible",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","PRI_CHANGED","AllowShowHide",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","QTY_CHANGED","Visible",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","QTY_CHANGED","AllowShowHide",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","DELETED","Visible",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","DELETED","AllowShowHide",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","DELTA","Visible",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","DELTA","AllowShowHide",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","VIEW_OPS","AllowShowHide",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","DELETE_CMD","AllowShowHide",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","HAS_COST","AllowShowHide",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","HAS_DETAIL","AllowShowHide",False)
'Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopNotes","JOB","Visible",False)
'Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopNotes","JOB","AllowShowHide",False)
'Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopNotes","SUFFIX","Visible",False)
'Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopNotes","SUFFIX","AllowShowHide",False)
'Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopNotes","PART_NUM","Visible",False)
'Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopNotes","PART_NUM","AllowShowHide",False)
'Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubNotes","JOB","Visible",False)
'Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubNotes","JOB","AllowShowHide",False)
'Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubNotes","SUFFIX","Visible",False)
'Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubNotes","SUFFIX","AllowShowHide",False)
'Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubNotes","PART_NUM","Visible",False)
'Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubNotes","PART_NUM","AllowShowHide",False)
Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","JOB","Visible",False)
Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","JOB","AllowShowHide",False)
Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","SUFFIX","Visible",False)
Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","SUFFIX","AllowShowHide",False)
Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","PART_WC","Visible",False)
Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","PART_WC","AllowShowHide",False)
Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","LOC","Visible",False)
Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","LOC","AllowShowHide",False)
Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","DESCR_ORIG","Visible",False)
Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","DESCR_ORIG","AllowShowHide",False)
Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","QTY_HR_EST_ORIG","Visible",False)
Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","QTY_HR_EST_ORIG","AllowShowHide",False)
Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","CHILD_JOB","Visible",False)
Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","CHILD_JOB","AllowShowHide",False)
Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","CHILD_SUFFIX","Visible",False)
Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","CHILD_SUFFIX","AllowShowHide",False)
Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","CHILD_CLOSED","Visible",False)
Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","CHILD_CLOSED","AllowShowHide",False)
Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","DATE_START","Visible",False)
Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","DATE_START","AllowShowHide",False)
Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","DATE_DUE","Visible",False)
Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","DATE_DUE","AllowShowHide",False)
Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","DESCR_CHANGED","Visible",False)
Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","DESCR_CHANGED","AllowShowHide",False)
Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","QTY_CHANGED","Visible",False)
Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","QTY_CHANGED","AllowShowHide",False)
Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","DELETED","Visible",False)
Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","DELETED","AllowShowHide",False)
Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","JOB_DELETED","Visible",False)
Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","JOB_DELETED","AllowShowHide",False)
Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","DELTA","Visible",False)
Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","DELTA","AllowShowHide",False)
Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","ADDED","Visible",False)
Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","ADDED","AllowShowHide",False)
Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","DELETE_CMD","AllowShowHide",False)
Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","HAS_DETAIL","AllowShowHide",False)
'Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvNotes","JOB","Visible",False)
'Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvNotes","JOB","AllowShowHide",False)
'Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvNotes","SUFFIX","Visible",False)
'Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvNotes","SUFFIX","AllowShowHide",False)
'Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvNotes","SEQ","Visible",False)
'Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvNotes","SEQ","AllowShowHide",False)
'Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvNotes","PART_NUM","Visible",False)
'Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvNotes","PART_NUM","AllowShowHide",False)
Gui.F_Notes.gsgcNotes.SetColumnProperty("gvNotes","PART","Visible",False)
Gui.F_Notes.gsgcNotes.SetColumnProperty("gvNotes","PART","AllowShowHide",False)
Gui.F_Notes.gsgcNotes.SetColumnProperty("gvNotes","LOCATION","Visible",False)
Gui.F_Notes.gsgcNotes.SetColumnProperty("gvNotes","LOCATION","AllowShowHide",False)
Gui.F_Notes.gsgcNotes.SetColumnProperty("gvNotes","DATE_STR","Visible",False)
Gui.F_Notes.gsgcNotes.SetColumnProperty("gvNotes","DATE_STR","AllowShowHide",False)
Gui.F_Notes.gsgcNotes.SetColumnProperty("gvNotes","TIME_STR","Visible",False)
Gui.F_Notes.gsgcNotes.SetColumnProperty("gvNotes","TIME_STR","AllowShowHide",False)
Gui.F_Notes.gsgcNotes.SetColumnProperty("gvJobList","PART_NUM","Visible",False)
Gui.F_Notes.gsgcNotes.SetColumnProperty("gvJobList","PART_NUM","AllowShowHide",False)
Gui.F_Notes.gsgcNotes.SetColumnProperty("gvJobList","REV","Visible",False)
Gui.F_Notes.gsgcNotes.SetColumnProperty("gvJobList","REV","AllowShowHide",False)
Gui.F_Notes.gsgcNotes.SetColumnProperty("gvJobList","DATE_STR","Visible",False)
Gui.F_Notes.gsgcNotes.SetColumnProperty("gvJobList","DATE_STR","AllowShowHide",False)
Gui.F_Notes.gsgcNotes.SetColumnProperty("gvJobList","TIME_STR","Visible",False)
Gui.F_Notes.gsgcNotes.SetColumnProperty("gvJobList","TIME_STR","AllowShowHide",False)
Gui.F_Notes.gsgcNotes.SetColumnProperty("gvJobList","USERID","Visible",False)
Gui.F_Notes.gsgcNotes.SetColumnProperty("gvJobList","USERID","AllowShowHide",False)
F.Intrinsic.Control.If(V.Global.bPerms.Not)
	Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","DELETE_CMD","Visible",False)
	Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","HAS_COST","Visible",False)
	Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","HAS_DETAIL","Visible",False)
	Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","DELETE_CMD","Visible",False)
	Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","HAS_COST","Visible",False)
	Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","HAS_DETAIL","Visible",False)
	Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","DELETE_CMD","Visible",False)
	Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","HAS_DETAIL","Visible",False)
F.Intrinsic.Control.EndIf

V.Local.iVisibleIndex.Set(-1)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","BLANK","VisibleIndex",V.Local.iVisibleIndex.++)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","BLANK","Fixed","Left")
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","WO","VisibleIndex",V.Local.iVisibleIndex.++)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","PROJECT","VisibleIndex",V.Local.iVisibleIndex.++)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","PRIORITY","VisibleIndex",V.Local.iVisibleIndex.++)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","PART_NUM","VisibleIndex",V.Local.iVisibleIndex.++)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","REV","VisibleIndex",V.Local.iVisibleIndex.++)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","LOC","VisibleIndex",V.Local.iVisibleIndex.++)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","PL","VisibleIndex",V.Local.iVisibleIndex.++)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","DESCR","VisibleIndex",V.Local.iVisibleIndex.++)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","QTY_ORDER","VisibleIndex",V.Local.iVisibleIndex.++)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","QTY_COMPLETED","VisibleIndex",V.Local.iVisibleIndex.++)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","WO_NOTES","VisibleIndex",V.Local.iVisibleIndex.++)
F.Intrinsic.Control.If(V.Global.bPerms)
	Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","HAS_DETAIL","VisibleIndex",V.Local.iVisibleIndex.++)
	Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","HAS_DETAIL","Fixed","Right")
	Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","HAS_COST","VisibleIndex",V.Local.iVisibleIndex.++)
	Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","HAS_COST","Fixed","Right")
	Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","DELETE_CMD","VisibleIndex",V.Local.iVisibleIndex.++)
	Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","DELETE_CMD","Fixed","Right")
F.Intrinsic.Control.EndIf
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","VIEW_OPS","VisibleIndex",V.Local.iVisibleIndex.++)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","VIEW_OPS","Fixed","Right")
V.Local.iVisibleIndex.Set(-1)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","WO","VisibleIndex",V.Local.iVisibleIndex.++)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","PARENT_WO","VisibleIndex",V.Local.iVisibleIndex.++)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","PRIORITY","VisibleIndex",V.Local.iVisibleIndex.++)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","DATE_CLOSED_V","VisibleIndex",V.Local.iVisibleIndex.++)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","PART_NUM","VisibleIndex",V.Local.iVisibleIndex.++)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","REV","VisibleIndex",V.Local.iVisibleIndex.++)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","LOC","VisibleIndex",V.Local.iVisibleIndex.++)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","PL","VisibleIndex",V.Local.iVisibleIndex.++)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","DESCR","VisibleIndex",V.Local.iVisibleIndex.++)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","QTY_ORDER","VisibleIndex",V.Local.iVisibleIndex.++)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","QTY_COMPLETED","VisibleIndex",V.Local.iVisibleIndex.++)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","WO_NOTES","VisibleIndex",V.Local.iVisibleIndex.++)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","VIEW_OPS","VisibleIndex",V.Local.iVisibleIndex.++)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","VIEW_OPS","Fixed","Right")
F.Intrinsic.Control.If(V.Global.bPerms)
	Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","DELETE_CMD","VisibleIndex",V.Local.iVisibleIndex.++)
	Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","DELETE_CMD","Fixed","Right")
	Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","HAS_COST","VisibleIndex",V.Local.iVisibleIndex.++)
	Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","HAS_COST","Fixed","Right")
	Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","HAS_DETAIL","VisibleIndex",V.Local.iVisibleIndex.++)
	Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","HAS_DETAIL","Fixed","Right")
F.Intrinsic.Control.EndIf
'V.Local.iVisibleIndex.Set(-1)
'Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopNotes","REV","VisibleIndex",V.Local.iVisibleIndex.++)
'Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopNotes","QTY_ONHAND","VisibleIndex",V.Local.iVisibleIndex.++)
'Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopNotes","DATE_NOTES","VisibleIndex",V.Local.iVisibleIndex.++)
'Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopNotes","USERID","VisibleIndex",V.Local.iVisibleIndex.++)
'Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopNotes","PART_NOTES","VisibleIndex",V.Local.iVisibleIndex.++)
'V.Local.iVisibleIndex.Set(-1)
'Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubNotes","REV","VisibleIndex",V.Local.iVisibleIndex.++)
'Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubNotes","QTY_ONHAND","VisibleIndex",V.Local.iVisibleIndex.++)
'Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubNotes","DATE_NOTES","VisibleIndex",V.Local.iVisibleIndex.++)
'Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubNotes","USERID","VisibleIndex",V.Local.iVisibleIndex.++)
'Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubNotes","PART_NOTES","VisibleIndex",V.Local.iVisibleIndex.++)
V.Local.iVisibleIndex.Set(-1)
Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","SEQ","VisibleIndex",V.Local.iVisibleIndex.++)
Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","LMO","VisibleIndex",V.Local.iVisibleIndex.++)
Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","PART_NUM_WC","VisibleIndex",V.Local.iVisibleIndex.++)
Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","REV","VisibleIndex",V.Local.iVisibleIndex.++)
Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","DESCR","VisibleIndex",V.Local.iVisibleIndex.++)
Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","UM","VisibleIndex",V.Local.iVisibleIndex.++)
Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","QTY_HR_EST","VisibleIndex",V.Local.iVisibleIndex.++)
Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","QTY_HR_ACT","VisibleIndex",V.Local.iVisibleIndex.++)
Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","CHILD_WO","VisibleIndex",V.Local.iVisibleIndex.++)
F.Intrinsic.Control.If(V.Global.bPerms)
	Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","DELETE_CMD","VisibleIndex",V.Local.iVisibleIndex.++)
	Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","DELETE_CMD","Fixed","Right")
	Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","HAS_DETAIL","VisibleIndex",V.Local.iVisibleIndex.++)
	Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","HAS_DETAIL","Fixed","Right")
F.Intrinsic.Control.EndIf
'V.Local.iVisibleIndex.Set(-1)
'Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvNotes","REV","VisibleIndex",V.Local.iVisibleIndex.++)
'Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvNotes","QTY_ONHAND","VisibleIndex",V.Local.iVisibleIndex.++)
'Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvNotes","DATE_NOTES","VisibleIndex",V.Local.iVisibleIndex.++)
'Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvNotes","USERID","VisibleIndex",V.Local.iVisibleIndex.++)
'Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvNotes","PART_NOTES","VisibleIndex",V.Local.iVisibleIndex.++)
V.Local.iVisibleIndex.Set(-1)
Gui.F_Notes.gsgcNotes.SetColumnProperty("gvNotes","PART_NUM","VisibleIndex",V.Local.iVisibleIndex.++)
Gui.F_Notes.gsgcNotes.SetColumnProperty("gvNotes","REV","VisibleIndex",V.Local.iVisibleIndex.++)
Gui.F_Notes.gsgcNotes.SetColumnProperty("gvNotes","QTY_ONHAND","VisibleIndex",V.Local.iVisibleIndex.++)
Gui.F_Notes.gsgcNotes.SetColumnProperty("gvNotes","DATE_NOTES","VisibleIndex",V.Local.iVisibleIndex.++)
Gui.F_Notes.gsgcNotes.SetColumnProperty("gvNotes","USERID","VisibleIndex",V.Local.iVisibleIndex.++)
Gui.F_Notes.gsgcNotes.SetColumnProperty("gvNotes","PART_NOTES","VisibleIndex",V.Local.iVisibleIndex.++)
V.Local.iVisibleIndex.Set(-1)
Gui.F_Notes.gsgcNotes.SetColumnProperty("gvJobList","JOB","VisibleIndex",V.Local.iVisibleIndex.++)
Gui.F_Notes.gsgcNotes.SetColumnProperty("gvJobList","SUFFIX","VisibleIndex",V.Local.iVisibleIndex.++)
Gui.F_Notes.gsgcNotes.SetColumnProperty("gvJobList","SEQ","VisibleIndex",V.Local.iVisibleIndex.++)

Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","BLANK","AllowEdit",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","WO","AllowEdit",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","PROJECT","AllowEdit",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","PART_NUM","AllowEdit",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","REV","AllowEdit",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","LOC","AllowEdit",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","PL","AllowEdit",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","DESCR","AllowEdit",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","QTY_COMPLETED","AllowEdit",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","WO_NOTES","AllowEdit",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","VIEW_OPS","AllowEdit",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","WO","AllowEdit",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","PARENT_WO","AllowEdit",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","DATE_CLOSED_V","AllowEdit",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","PART_NUM","AllowEdit",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","REV","AllowEdit",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","LOC","AllowEdit",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","PL","AllowEdit",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","DESCR","AllowEdit",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","QTY_COMPLETED","AllowEdit",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","WO_NOTES","AllowEdit",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","VIEW_OPS","AllowEdit",False)
Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","SEQ","AllowEdit",False)
Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","LMO","AllowEdit",False)
Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","PART_NUM_WC","AllowEdit",False)
Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","REV","AllowEdit",False)
Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","UM","AllowEdit",False)
Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","QTY_HR_ACT","AllowEdit",False)
Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","CHILD_WO","AllowEdit",False)
F.Intrinsic.Control.If(V.Global.bPerms)
	Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","PRIORITY","ReadOnly",False)
	Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","QTY_ORDER","ReadOnly",False)
	Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","DELETE_CMD","AllowEdit",False)
	Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","HAS_COST","AllowEdit",False)
	Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","HAS_DETAIL","AllowEdit",False)
	Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","PRIORITY","ReadOnly",False)
	Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","QTY_ORDER","ReadOnly",False)
	Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","DELETE_CMD","AllowEdit",False)
	Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","HAS_COST","AllowEdit",False)
	Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","HAS_DETAIL","AllowEdit",False)
	Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","DESCR","ReadOnly",False)
	Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","QTY_HR_EST","ReadOnly",False)
	Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","DELETE_CMD","AllowEdit",False)
	Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","HAS_DETAIL","AllowEdit",False)
F.Intrinsic.Control.Else
	Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","PRIORITY","MaxLength",3)
	Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","PRIORITY","AllowEdit",False)
	Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","QTY_ORDER","AllowEdit",False)
	Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","PRIORITY","MaxLength",3)
	Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","PRIORITY","AllowEdit",False)
	Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","QTY_ORDER","AllowEdit",False)
	Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","DESCR","AllowEdit",False)
	Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","QTY_HR_EST","AllowEdit",False)
F.Intrinsic.Control.EndIf

Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","BLANK","ShowCaption",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","WO","Caption","Top Level WO")
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","PROJECT","Caption","Project")
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","PRIORITY","Caption","Pri.")
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","PART_NUM","Caption","Part")
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","REV","Caption","Rev")
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","LOC","Caption","Loc")
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","PL","Caption","PL")
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","DESCR","Caption","Description")
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","QTY_ORDER","Caption","Run Qty")
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","QTY_COMPLETED","Caption","Completed Qty")
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","WO_NOTES","Caption","WO Notes")
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","VIEW_OPS","ShowCaption",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","WO","Caption","WO")
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","PARENT_WO","Caption","Parent WO")
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","PRIORITY","Caption","Pri.")
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","DATE_CLOSED_V","Caption","Date Closed")
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","PART_NUM","Caption","Part")
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","REV","Caption","Rev")
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","LOC","Caption","Loc")
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","PL","Caption","PL")
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","DESCR","Caption","Description")
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","QTY_ORDER","Caption","Run Qty")
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","QTY_COMPLETED","Caption","Completed Qty")
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","WO_NOTES","Caption","WO Notes")
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","VIEW_OPS","ShowCaption",False)
'Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopNotes","REV","Caption","Rev")
'Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopNotes","QTY_ONHAND","Caption","Qty On Hand")
'Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopNotes","DATE_NOTES","Caption","Created At")
'Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopNotes","USERID","Caption","Created By")
'Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopNotes","PART_NOTES","Caption","Notes")
'Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubNotes","REV","Caption","Rev")
'Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubNotes","QTY_ONHAND","Caption","Qty On Hand")
'Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubNotes","DATE_NOTES","Caption","Created At")
'Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubNotes","USERID","Caption","Created By")
'Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubNotes","PART_NOTES","Caption","Notes")
Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","SEQ","Caption","Seq")
Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","LMO","Caption","LMO")
Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","PART_NUM_WC","Caption","Part/WC")
Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","REV","Caption","Part Rev")
Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","DESCR","Caption","Description")
Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","UM","Caption","UM")
Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","QTY_HR_EST","Caption","Units/Hours Est.")
Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","QTY_HR_ACT","Caption","Units/Hours Act.")
Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","CHILD_WO","Caption","Child WO")
F.Intrinsic.Control.If(V.Global.bPerms)
	Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","DELETE_CMD","ShowCaption",False)
	Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","HAS_COST","Caption","Cost?")
	Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","HAS_DETAIL","Caption","Detail?")
	Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","DELETE_CMD","ShowCaption",False)
	Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","HAS_COST","Caption","Cost?")
	Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","HAS_DETAIL","Caption","Detail?")
	Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","DELETE_CMD","ShowCaption",False)
	Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","HAS_DETAIL","Caption","Detail?")
F.Intrinsic.Control.EndIf
'Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvNotes","REV","Caption","Rev")
'Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvNotes","QTY_ONHAND","Caption","Qty On Hand")
'Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvNotes","DATE_NOTES","Caption","Created At")
'Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvNotes","USERID","Caption","Created By")
'Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvNotes","PART_NOTES","Caption","Notes")
Gui.F_Notes.gsgcNotes.SetColumnProperty("gvNotes","PART_NUM","Caption","Part")
Gui.F_Notes.gsgcNotes.SetColumnProperty("gvNotes","REV","Caption","Rev")
Gui.F_Notes.gsgcNotes.SetColumnProperty("gvNotes","QTY_ONHAND","Caption","Qty On Hand")
Gui.F_Notes.gsgcNotes.SetColumnProperty("gvNotes","DATE_NOTES","Caption","Created At")
Gui.F_Notes.gsgcNotes.SetColumnProperty("gvNotes","USERID","Caption","Created By")
Gui.F_Notes.gsgcNotes.SetColumnProperty("gvNotes","PART_NOTES","Caption","Notes")
Gui.F_Notes.gsgcNotes.SetColumnProperty("gvJobList","JOB","Caption","Job")
Gui.F_Notes.gsgcNotes.SetColumnProperty("gvJobList","SUFFIX","Caption","Suffix")
Gui.F_Notes.gsgcNotes.SetColumnProperty("gvJobList","Seq","Caption","Seq")

Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","BLANK","Width",1)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","BLANK","AllowSize",False)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","WO","Width",100)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","PROJECT","Width",70)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","PRIORITY","Width",40)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","PART_NUM","Width",120)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","REV","Width",40)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","LOC","Width",40)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","PL","Width",40)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","DESCR","Width",200)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","QTY_ORDER","Width",65)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","QTY_COMPLETED","Width",105)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","WO_NOTES","Width",150)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","VIEW_OPS","Width",75)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","WO","Width",70)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","PARENT_WO","Width",80)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","PRIORITY","Width",40)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","DATE_CLOSED_V","Width",90)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","PART_NUM","Width",120)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","REV","Width",40)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","LOC","Width",40)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","PL","Width",40)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","DESCR","Width",200)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","QTY_ORDER","Width",65)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","QTY_COMPLETED","Width",105)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","WO_NOTES","Width",150)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","VIEW_OPS","Width",75)
'Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopNotes","REV","Width",40)
'Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopNotes","QTY_ONHAND","Width",105)
'Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopNotes","DATE_NOTES","Width",150)
'Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopNotes","USERID","Width",100)
'Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopNotes","PART_NOTES","Width",200)
'Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubNotes","REV","Width",40)
'Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubNotes","QTY_ONHAND","Width",105)
'Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubNotes","DATE_NOTES","Width",150)
'Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubNotes","USERID","Width",100)
'Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubNotes","PART_NOTES","Width",200)
Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","SEQ","Width",100)
Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","LMO","Width",50)
Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","PART_NUM_WC","Width",120)
Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","REV","Width",70)
Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","DESCR","Width",200)
Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","UM","Width",40)
Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","QTY_HR_EST","Width",110)
Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","QTY_HR_ACT","Width",115)
Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","CHILD_WO","Width",75)
F.Intrinsic.Control.If(V.Global.bPerms)
	Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","DELETE_CMD","Width",65)
	Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","HAS_COST","Width",50)
	Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","HAS_DETAIL","Width",60)
	Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","DELETE_CMD","Width",65)
	Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","HAS_COST","Width",50)
	Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","HAS_DETAIL","Width",60)
	Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","DELETE_CMD","Width",65)
	Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","HAS_DETAIL","Width",60)
F.Intrinsic.Control.EndIf
'Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvNotes","REV","Width",40)
'Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvNotes","QTY_ONHAND","Width",105)
'Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvNotes","DATE_NOTES","Width",150)
'Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvNotes","USERID","Width",100)
'Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvNotes","PART_NOTES","Width",200)
Gui.F_Notes.gsgcNotes.SetColumnProperty("gvNotes","PART_NUM","Width",140)
Gui.F_Notes.gsgcNotes.SetColumnProperty("gvNotes","REV","Width",40)
Gui.F_Notes.gsgcNotes.SetColumnProperty("gvNotes","QTY_ONHAND","Width",105)
Gui.F_Notes.gsgcNotes.SetColumnProperty("gvNotes","DATE_NOTES","Width",150)
Gui.F_Notes.gsgcNotes.SetColumnProperty("gvNotes","USERID","Width",100)
Gui.F_Notes.gsgcNotes.SetColumnProperty("gvNotes","PART_NOTES","Width",200)
Gui.F_Notes.gsgcNotes.SetColumnProperty("gvJobList","JOB","Width",60)
Gui.F_Notes.gsgcNotes.SetColumnProperty("gvJobList","SUFFIX","Width",60)
Gui.F_Notes.gsgcNotes.SetColumnProperty("gvJobList","SEQ","Width",60)

Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","WO","HeaderFontBold",True)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","PROJECT","HeaderFontBold",True)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","PRIORITY","HeaderFontBold",True)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","PART_NUM","HeaderFontBold",True)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","REV","HeaderFontBold",True)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","LOC","HeaderFontBold",True)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","PL","HeaderFontBold",True)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","DESCR","HeaderFontBold",True)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","QTY_ORDER","HeaderFontBold",True)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","QTY_COMPLETED","HeaderFontBold",True)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","WO_NOTES","HeaderFontBold",True)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","WO","HeaderFontBold",True)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","PARENT_WO","HeaderFontBold",True)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","PRIORITY","HeaderFontBold",True)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","DATE_CLOSED_V","HeaderFontBold",True)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","PART_NUM","HeaderFontBold",True)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","REV","HeaderFontBold",True)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","LOC","HeaderFontBold",True)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","PL","HeaderFontBold",True)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","DESCR","HeaderFontBold",True)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","QTY_ORDER","HeaderFontBold",True)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","QTY_COMPLETED","HeaderFontBold",True)
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","WO_NOTES","HeaderFontBold",True)
'Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopNotes","REV","HeaderFontBold",True)
'Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopNotes","QTY_ONHAND","HeaderFontBold",True)
'Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopNotes","DATE_NOTES","HeaderFontBold",True)
'Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopNotes","USERID","HeaderFontBold",True)
'Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopNotes","PART_NOTES","HeaderFontBold",True)
'Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubNotes","REV","HeaderFontBold",True)
'Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubNotes","QTY_ONHAND","HeaderFontBold",True)
'Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubNotes","DATE_NOTES","HeaderFontBold",True)
'Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubNotes","USERID","HeaderFontBold",True)
'Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubNotes","PART_NOTES","HeaderFontBold",True)
Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","SEQ","HeaderFontBold",True)
Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","LMO","HeaderFontBold",True)
Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","PART_NUM_WC","HeaderFontBold",True)
Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","REV","HeaderFontBold",True)
Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","DESCR","HeaderFontBold",True)
Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","UM","HeaderFontBold",True)
Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","QTY_HR_EST","HeaderFontBold",True)
Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","QTY_HR_ACT","HeaderFontBold",True)
Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","CHILD_WO","HeaderFontBold",True)
'Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvNotes","REV","HeaderFontBold",True)
'Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvNotes","QTY_ONHAND","HeaderFontBold",True)
'Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvNotes","DATE_NOTES","HeaderFontBold",True)
'Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvNotes","USERID","HeaderFontBold",True)
'Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvNotes","PART_NOTES","HeaderFontBold",True)
Gui.F_Notes.gsgcNotes.SetColumnProperty("gvNotes","PART_NUM","HeaderFontBold",True)
Gui.F_Notes.gsgcNotes.SetColumnProperty("gvNotes","REV","HeaderFontBold",True)
Gui.F_Notes.gsgcNotes.SetColumnProperty("gvNotes","QTY_ONHAND","HeaderFontBold",True)
Gui.F_Notes.gsgcNotes.SetColumnProperty("gvNotes","DATE_NOTES","HeaderFontBold",True)
Gui.F_Notes.gsgcNotes.SetColumnProperty("gvNotes","USERID","HeaderFontBold",True)
Gui.F_Notes.gsgcNotes.SetColumnProperty("gvNotes","PART_NOTES","HeaderFontBold",True)
Gui.F_Notes.gsgcNotes.SetColumnProperty("gvJobList","JOB","HeaderFontBold",True)
Gui.F_Notes.gsgcNotes.SetColumnProperty("gvJobList","SUFFIX","HeaderFontBold",True)
Gui.F_Notes.gsgcNotes.SetColumnProperty("gvJobList","SEQ","HeaderFontBold",True)

F.Intrinsic.Control.If(V.Global.bPerms)
	Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","PRIORITY","HeaderFontItalic",True)
	Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","QTY_ORDER","HeaderFontItalic",True)
	Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","HAS_COST","HeaderFontBold",True)
	Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","HAS_DETAIL","HeaderFontBold",True)
	Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","PRIORITY","HeaderFontItalic",True)
	Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","QTY_ORDER","HeaderFontItalic",True)
	Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","HAS_COST","HeaderFontBold",True)
	Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","HAS_DETAIL","HeaderFontBold",True)
	Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","DESCR","HeaderFontItalic",True)
	Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","QTY_HR_EST","HeaderFontItalic",True)
	Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","HAS_DETAIL","HeaderFontBold",True)
F.Intrinsic.Control.EndIf

Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","WO","HeaderHAlignment","Center")
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","PROJECT","HeaderHAlignment","Center")
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","PRIORITY","HeaderHAlignment","Center")
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","PART_NUM","HeaderHAlignment","Center")
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","REV","HeaderHAlignment","Center")
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","LOC","HeaderHAlignment","Center")
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","PL","HeaderHAlignment","Center")
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","DESCR","HeaderHAlignment","Near")
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","QTY_ORDER","HeaderHAlignment","Far")
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","QTY_COMPLETED","HeaderHAlignment","Far")
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","WO_NOTES","HeaderHAlignment","Near")
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","WO","HeaderHAlignment","Center")
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","PARENT_WO","HeaderHAlignment","Center")
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","PRIORITY","HeaderHAlignment","Center")
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","DATE_CLOSED_V","HeaderHAlignment","Center")
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","PART_NUM","HeaderHAlignment","Center")
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","REV","HeaderHAlignment","Center")
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","LOC","HeaderHAlignment","Center")
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","PL","HeaderHAlignment","Center")
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","DESCR","HeaderHAlignment","Near")
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","QTY_ORDER","HeaderHAlignment","Far")
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","QTY_COMPLETED","HeaderHAlignment","Far")
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","WO_NOTES","HeaderHAlignment","Near")
'Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopNotes","REV","HeaderHAlignment","Center")
'Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopNotes","QTY_ONHAND","HeaderHAlignment","Far")
'Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopNotes","DATE_NOTES","HeaderHAlignment","Center")
'Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopNotes","USERID","HeaderHAlignment","Center")
'Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopNotes","PART_NOTES","HeaderHAlignment","Near")
'Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubNotes","REV","HeaderHAlignment","Center")
'Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubNotes","QTY_ONHAND","HeaderHAlignment","Far")
'Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubNotes","DATE_NOTES","HeaderHAlignment","Center")
'Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubNotes","USERID","HeaderHAlignment","Center")
'Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubNotes","PART_NOTES","HeaderHAlignment","Near")
Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","SEQ","HeaderHAlignment","Center")
Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","LMO","HeaderHAlignment","Center")
Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","PART_NUM_WC","HeaderHAlignment","Center")
Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","REV","HeaderHAlignment","Center")
Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","DESCR","HeaderHAlignment","Near")
Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","UM","HeaderHAlignment","Center")
Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","QTY_HR_EST","HeaderHAlignment","Far")
Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","QTY_HR_ACT","HeaderHAlignment","Far")
Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","CHILD_WO","HeaderHAlignment","Center")
F.Intrinsic.Control.If(V.Global.bPerms)
	Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","HAS_COST","HeaderHAlignment","Center")
	Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","HAS_DETAIL","HeaderHAlignment","Center")
	Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","HAS_COST","HeaderHAlignment","Center")
	Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","HAS_DETAIL","HeaderHAlignment","Center")
	Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","HAS_DETAIL","HeaderHAlignment","Center")
F.Intrinsic.Control.EndIf
'Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvNotes","REV","HeaderHAlignment","Center")
'Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvNotes","QTY_ONHAND","HeaderHAlignment","Far")
'Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvNotes","DATE_NOTES","HeaderHAlignment","Center")
'Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvNotes","USERID","HeaderHAlignment","Center")
'Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvNotes","PART_NOTES","HeaderHAlignment","Near")
Gui.F_Notes.gsgcNotes.SetColumnProperty("gvNotes","PART_NUM","HeaderHAlignment","Center")
Gui.F_Notes.gsgcNotes.SetColumnProperty("gvNotes","REV","HeaderHAlignment","Center")
Gui.F_Notes.gsgcNotes.SetColumnProperty("gvNotes","QTY_ONHAND","HeaderHAlignment","Far")
Gui.F_Notes.gsgcNotes.SetColumnProperty("gvNotes","DATE_NOTES","HeaderHAlignment","Center")
Gui.F_Notes.gsgcNotes.SetColumnProperty("gvNotes","USERID","HeaderHAlignment","Center")
Gui.F_Notes.gsgcNotes.SetColumnProperty("gvNotes","PART_NOTES","HeaderHAlignment","Near")
Gui.F_Notes.gsgcNotes.SetColumnProperty("gvJobList","JOB","HeaderHAlignment","Center")
Gui.F_Notes.gsgcNotes.SetColumnProperty("gvJobList","SUFFIX","HeaderHAlignment","Center")
Gui.F_Notes.gsgcNotes.SetColumnProperty("gvJobList","SEQ","HeaderHAlignment","Center")

Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","WO","CellHAlignment","Center")
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","PROJECT","CellHAlignment","Center")
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","PRIORITY","CellHAlignment","Center")
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","PART_NUM","CellHAlignment","Center")
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","REV","CellHAlignment","Center")
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","LOC","CellHAlignment","Center")
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","PL","CellHAlignment","Center")
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","DESCR","CellHAlignment","Near")
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","QTY_ORDER","CellHAlignment","Far")
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","QTY_COMPLETED","CellHAlignment","Far")
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","WO_NOTES","CellHAlignment","Near")
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","WO","CellHAlignment","Center")
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","PARENT_WO","CellHAlignment","Center")
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","PRIORITY","CellHAlignment","Center")
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","DATE_CLOSED_V","CellHAlignment","Center")
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","PART_NUM","CellHAlignment","Center")
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","REV","CellHAlignment","Center")
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","LOC","CellHAlignment","Center")
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","PL","CellHAlignment","Center")
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","DESCR","CellHAlignment","Near")
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","QTY_ORDER","CellHAlignment","Far")
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","QTY_COMPLETED","CellHAlignment","Far")
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","WO_NOTES","CellHAlignment","Near")
'Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopNotes","REV","CellHAlignment","Center")
'Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopNotes","QTY_ONHAND","CellHAlignment","Far")
'Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopNotes","DATE_NOTES","CellHAlignment","Center")
'Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopNotes","USERID","CellHAlignment","Center")
'Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopNotes","PART_NOTES","CellHAlignment","Near")
'Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubNotes","REV","CellHAlignment","Center")
'Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubNotes","QTY_ONHAND","CellHAlignment","Far")
'Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubNotes","DATE_NOTES","CellHAlignment","Center")
'Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubNotes","USERID","CellHAlignment","Center")
'Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubNotes","PART_NOTES","CellHAlignment","Near")
Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","SEQ","CellHAlignment","Center")
Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","LMO","CellHAlignment","Center")
Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","PART_NUM_WC","CellHAlignment","Center")
Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","REV","CellHAlignment","Center")
Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","DESCR","CellHAlignment","Near")
Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","UM","CellHAlignment","Center")
Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","QTY_HR_EST","CellHAlignment","Far")
Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","QTY_HR_ACT","CellHAlignment","Far")
Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","CHILD_WO","CellHAlignment","Center")
'Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvNotes","REV","CellHAlignment","Center")
'Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvNotes","QTY_ONHAND","CellHAlignment","Far")
'Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvNotes","DATE_NOTES","CellHAlignment","Center")
'Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvNotes","USERID","CellHAlignment","Center")
'Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvNotes","PART_NOTES","CellHAlignment","Near")
Gui.F_Notes.gsgcNotes.SetColumnProperty("gvNotes","PART_NUM","CellHAlignment","Center")
Gui.F_Notes.gsgcNotes.SetColumnProperty("gvNotes","REV","CellHAlignment","Center")
Gui.F_Notes.gsgcNotes.SetColumnProperty("gvNotes","QTY_ONHAND","CellHAlignment","Far")
Gui.F_Notes.gsgcNotes.SetColumnProperty("gvNotes","DATE_NOTES","CellHAlignment","Center")
Gui.F_Notes.gsgcNotes.SetColumnProperty("gvNotes","USERID","CellHAlignment","Center")
Gui.F_Notes.gsgcNotes.SetColumnProperty("gvNotes","PART_NOTES","CellHAlignment","Near")
Gui.F_Notes.gsgcNotes.SetColumnProperty("gvJobList","JOB","CellHAlignment","Center")
Gui.F_Notes.gsgcNotes.SetColumnProperty("gvJobList","SUFFIX","CellHAlignment","Center")
Gui.F_Notes.gsgcNotes.SetColumnProperty("gvJobList","SEQ","CellHAlignment","Center")

'Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopNotes","PART_NOTES","CellWordWrap","Wrap")
'Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubNotes","PART_NOTES","CellWordWrap","Wrap")
'Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvNotes","PART_NOTES","CellWordWrap","Wrap")
Gui.F_Notes.gsgcNotes.SetColumnProperty("gvNotes","PART_NOTES","CellWordWrap","Wrap")

Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","QTY_ORDER","DisplayCustomNumeric","#,###,##0")
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","QTY_COMPLETED","DisplayCustomNumeric","#,###,##0")
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","DATE_CLOSED_V","DisplayCustomDateTime","d")
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","QTY_ORDER","DisplayCustomNumeric","#,###,##0")
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","QTY_COMPLETED","DisplayCustomNumeric","#,###,##0")
'Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopNotes","QTY_ONHAND","DisplayCustomNumeric","#,###,##0")
'Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubNotes","QTY_ONHAND","DisplayCustomNumeric","#,###,##0")
Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","QTY_HR_EST","DisplayCustomNumeric","#,###,##0.0000")
Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvOps","QTY_HR_ACT","DisplayCustomNumeric","#,###,##0.0000")
'Gui.F_Ops_Dash.gsgcOps.SetColumnProperty("gvNotes","QTY_ONHAND","DisplayCustomNumeric","#,###,##0")
Gui.F_Notes.gsgcNotes.SetColumnProperty("gvNotes","QTY_ONHAND","DisplayCustomNumeric","#,###,##0")

F.Intrinsic.Control.If(V.Args.WONotes.Not)
	Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","WO_NOTES","CellBackColor","Black")
	Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","WO_NOTES","CellBackColor","Black")
F.Intrinsic.Control.EndIf
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","WO","CellForeColor","Blue")
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","PART_NUM","CellForeColor","Blue")
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","WO","CellForeColor","Blue")
Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","PART_NUM","CellForeColor","Blue")
Gui.F_Ops_Dash.gsgcOps.AddStyleFormatCondition("gvOps","PART_NUM_WC","PartClickable","Expression","[LMO] = 'M'")
Gui.F_Ops_Dash.gsgcOps.SetStyleFormatConditionProperty("gvOps","PART_NUM_WC","PartClickable","ForeColor","Blue")
F.Intrinsic.Control.If(V.Global.bPerms)
	Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","PRIORITY","CellBackColor","LightYellow")
	Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvTopLevel","QTY_ORDER","CellBackColor","LightYellow")
	Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","PRIORITY","CellBackColor","LightYellow")
	Gui.F_WO_Dash.gsgcWOs.SetColumnProperty("gvSubLevel","QTY_ORDER","CellBackColor","LightYellow")
'	Gui.F_Ops_Dash.gsgcOps.GetColumnIndexByName("gvOps","PART_NUM_WC",V.Local.iPartWcIndex)
	Gui.F_Ops_Dash.gsgcOps.GetColumnIndexByName("gvOps","DESCR",V.Local.iOpDescIndex)
	Gui.F_Ops_Dash.gsgcOps.GetColumnIndexByName("gvOps","QTY_HR_EST",V.Local.iOpQtyHrEstIndex)
	Gui.F_Ops_Dash.gsgcOps.AddStyleFormatCondition("gvOps","DESCR","DescrEditable","Expression","[LMO] = 'C'")
	Gui.F_Ops_Dash.gsgcOps.SetStyleFormatConditionProperty("gvOps","DESCR","DescrEditable","BackColor","LightYellow")
	Gui.F_Ops_Dash.gsgcOps.AddStyleFormatCondition("gvOps","QTY_HR_EST","QtyHrEditable","Expression","[LMO] <> 'C' and [SEQ] < '995000'")
	Gui.F_Ops_Dash.gsgcOps.SetStyleFormatConditionProperty("gvOps","QTY_HR_EST","QtyHrEditable","BackColor","LightYellow")
	F.Intrinsic.Control.For(V.Local.iCnt,0,V.DataTable.dtWOOpsChild.RowCount--,1)
		F.Intrinsic.UI.ChangeWaitStatus(V.Global.sWait,V.Local.iCnt,0,V.DataTable.dtWOOpsChild.RowCount--)
'		F.Intrinsic.Control.If(V.DataTable.dtWOOpsChild(V.Local.iCnt).LMO!FieldVal,=,"M")
'			Gui.F_Ops_Dash.gsgcOps.SetCellAppearance("gvOps",V.Local.iPartWcIndex,V.Local.iCnt,"ForeColor","Blue")
'			Gui.F_Ops_Dash.gsgcOps.SetCellAppearance("gvOps",V.Local.iPartWcIndex,V.Local.iCnt,"HAlignment","Center")
'		F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.If(V.DataTable.dtWOOpsChild(V.Local.iCnt).LMO!FieldVal,=,"C")
'			Gui.F_Ops_Dash.gsgcOps.SetCellAppearance("gvOps",V.Local.iOpDescIndex,V.Local.iCnt,"BackColor","LightYellow")
			Gui.F_Ops_Dash.gsgcOps.SetCellProperty("gvOps",V.Local.iOpQtyHrEstIndex,V.Local.iCnt,"Locked",True)
		F.Intrinsic.Control.ElseIf(V.DataTable.dtWOOpsChild(V.Local.iCnt).SEQ!FieldValLong,>=,995000)
			Gui.F_Ops_Dash.gsgcOps.SetCellProperty("gvOps",V.Local.iOpDescIndex,V.Local.iCnt,"Locked",True)
			Gui.F_Ops_Dash.gsgcOps.SetCellProperty("gvOps",V.Local.iOpQtyHrEstIndex,V.Local.iCnt,"Locked",True)
		F.Intrinsic.Control.Else
			Gui.F_Ops_Dash.gsgcOps.SetCellProperty("gvOps",V.Local.iOpDescIndex,V.Local.iCnt,"Locked",True)
'			Gui.F_Ops_Dash.gsgcOps.SetCellAppearance("gvOps",V.Local.iOpQtyHrEstIndex,V.Local.iCnt,"BackColor","LightYellow")
'			Gui.F_Ops_Dash.gsgcOps.SetCellAppearance("gvOps",V.Local.iOpQtyHrEstIndex,V.Local.iCnt,"HAlignment","Far")
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.Next(V.Local.iCnt)
'F.Intrinsic.Control.Else
'	Gui.F_Ops_Dash.gsgcOps.GetColumnIndexByName("gvOps","PART_NUM_WC",V.Local.iPartWcIndex)
'	F.Intrinsic.Control.For(V.Local.iCnt,0,V.DataTable.dtWOOpsChild.RowCount--,1)
'		F.Intrinsic.UI.ChangeWaitStatus(V.Global.sWait,V.Local.iCnt,0,V.DataTable.dtWOOpsChild.RowCount--)
'		F.Intrinsic.Control.If(V.DataTable.dtWOOpsChild(V.Local.iCnt).LMO!FieldVal,=,"M")
'			Gui.F_Ops_Dash.gsgcOps.SetCellAppearance("gvOps",V.Local.iPartWcIndex,V.Local.iCnt,"ForeColor","Blue")
'			Gui.F_Ops_Dash.gsgcOps.SetCellAppearance("gvOps",V.Local.iPartWcIndex,V.Local.iCnt,"HAlignment","Center")
'		F.Intrinsic.Control.EndIf
'	F.Intrinsic.Control.Next(V.Local.iCnt)
F.Intrinsic.Control.EndIf

Gui.F_WO_Dash.gsgcWOs.ColumnEdit("gvTopLevel","VIEW_OPS","EditorButton","View Ops")
Gui.F_WO_Dash.gsgcWOs.ColumnEdit("gvSubLevel","VIEW_OPS","EditorButton","View Ops")
F.Intrinsic.Control.If(V.Global.bPerms)
	Gui.F_WO_Dash.gsgcWOs.ColumnEdit("gvTopLevel","DELETE_CMD","EditorButton","Delete")
	Gui.F_WO_Dash.gsgcWOs.ColumnEdit("gvSubLevel","DELETE_CMD","EditorButton","Delete")
	Gui.F_Ops_Dash.gsgcOps.ColumnEdit("gvOps","DELETE_CMD","EditorButton","Delete")
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.If(V.Global.bPerms)
	Gui.F_WO_Dash.gsgcWOs.AddStyleFormatCondition("gvTopLevel","DELETED","TopLevelDeleted","Equal",True)
	Gui.F_WO_Dash.gsgcWOs.SetStyleFormatConditionProperty("gvTopLevel","DELETED","TopLevelDeleted","BackColor","Pink")
	Gui.F_WO_Dash.gsgcWOs.SetStyleFormatConditionProperty("gvTopLevel","DELETED","TopLevelDeleted","ApplyToRow",True)
	Gui.F_WO_Dash.gsgcWOs.AddStyleFormatCondition("gvTopLevel","PRI_CHANGED","TopLevelPriChanged","Equal",True)
	Gui.F_WO_Dash.gsgcWOs.SetStyleFormatConditionProperty("gvTopLevel","PRI_CHANGED","TopLevelPriChanged","BackColor","LightGray")
	Gui.F_WO_Dash.gsgcWOs.SetStyleFormatConditionProperty("gvTopLevel","PRI_CHANGED","TopLevelPriChanged","ApplyToRow",True)
	Gui.F_WO_Dash.gsgcWOs.AddStyleFormatCondition("gvTopLevel","QTY_CHANGED","TopLevelQtyChanged","Equal",True)
	Gui.F_WO_Dash.gsgcWOs.SetStyleFormatConditionProperty("gvTopLevel","QTY_CHANGED","TopLevelQtyChanged","BackColor","LightGray")
	Gui.F_WO_Dash.gsgcWOs.SetStyleFormatConditionProperty("gvTopLevel","QTY_CHANGED","TopLevelQtyChanged","ApplyToRow",True)
	Gui.F_WO_Dash.gsgcWOs.AddStyleFormatCondition("gvSubLevel","DELETED","SubLevelDeleted","Equal",True)
	Gui.F_WO_Dash.gsgcWOs.SetStyleFormatConditionProperty("gvSubLevel","DELETED","SubLevelDeleted","BackColor","Pink")
	Gui.F_WO_Dash.gsgcWOs.SetStyleFormatConditionProperty("gvSubLevel","DELETED","SubLevelDeleted","ApplyToRow",True)
	Gui.F_WO_Dash.gsgcWOs.AddStyleFormatCondition("gvSubLevel","PRI_CHANGED","SubLevelPriChanged","Equal",True)
	Gui.F_WO_Dash.gsgcWOs.SetStyleFormatConditionProperty("gvSubLevel","PRI_CHANGED","SubLevelPriChanged","BackColor","LightGray")
	Gui.F_WO_Dash.gsgcWOs.SetStyleFormatConditionProperty("gvSubLevel","PRI_CHANGED","SubLevelPriChanged","ApplyToRow",True)
	Gui.F_WO_Dash.gsgcWOs.AddStyleFormatCondition("gvSubLevel","QTY_CHANGED","SubLevelQtyChanged","Equal",True)
	Gui.F_WO_Dash.gsgcWOs.SetStyleFormatConditionProperty("gvSubLevel","QTY_CHANGED","SubLevelQtyChanged","BackColor","LightGray")
	Gui.F_WO_Dash.gsgcWOs.SetStyleFormatConditionProperty("gvSubLevel","QTY_CHANGED","SubLevelQtyChanged","ApplyToRow",True)
	Gui.F_Ops_Dash.gsgcOps.AddStyleFormatCondition("gvOps","DELETED","OpsDeleted","Equal",True)
	Gui.F_Ops_Dash.gsgcOps.SetStyleFormatConditionProperty("gvOps","DELETED","OpsDeleted","BackColor","Pink")
	Gui.F_Ops_Dash.gsgcOps.SetStyleFormatConditionProperty("gvOps","DELETED","OpsDeleted","ApplyToRow",True)
	Gui.F_Ops_Dash.gsgcOps.AddStyleFormatCondition("gvOps","JOB_DELETED","JobDeleted","Equal",True)
	Gui.F_Ops_Dash.gsgcOps.SetStyleFormatConditionProperty("gvOps","JOB_DELETED","JobDeleted","BackColor","Pink")
	Gui.F_Ops_Dash.gsgcOps.SetStyleFormatConditionProperty("gvOps","JOB_DELETED","JobDeleted","ApplyToRow",True)
	Gui.F_Ops_Dash.gsgcOps.AddStyleFormatCondition("gvOps","ADDED","OpsAdded","Equal",True)
	Gui.F_Ops_Dash.gsgcOps.SetStyleFormatConditionProperty("gvOps","ADDED","OpsAdded","BackColor","LightGreen")
	Gui.F_Ops_Dash.gsgcOps.SetStyleFormatConditionProperty("gvOps","ADDED","OpsAdded","ApplyToRow",True)
	Gui.F_Ops_Dash.gsgcOps.AddStyleFormatCondition("gvOps","DESCR_CHANGED","OpsDescrChanged","Equal",True)
	Gui.F_Ops_Dash.gsgcOps.SetStyleFormatConditionProperty("gvOps","DESCR_CHANGED","OpsDescrChanged","BackColor","LightGray")
	Gui.F_Ops_Dash.gsgcOps.SetStyleFormatConditionProperty("gvOps","DESCR_CHANGED","OpsDescrChanged","ApplyToRow",True)
	Gui.F_Ops_Dash.gsgcOps.AddStyleFormatCondition("gvOps","QTY_CHANGED","OpsQtyChanged","Equal",True)
	Gui.F_Ops_Dash.gsgcOps.SetStyleFormatConditionProperty("gvOps","QTY_CHANGED","OpsQtyChanged","BackColor","LightGray")
	Gui.F_Ops_Dash.gsgcOps.SetStyleFormatConditionProperty("gvOps","QTY_CHANGED","OpsQtyChanged","ApplyToRow",True)
F.Intrinsic.Control.EndIf

Gui.F_WO_Dash.gsgcWOs.MainView("gvTopLevel")
Gui.F_Ops_Dash.gsgcOps.MainView("gvOps")
Gui.F_Notes.gsgcNotes.MainView("gvNotes")

F.Intrinsic.UI.CloseWaitDialog

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage,"ScriptFile",V.Caller.ScriptFile,"CurrentSubroutine",V.Ambient.CurrentSubroutine)
	F.Intrinsic.Control.CallSub(F_WO_Dash_UnLoad)
F.Intrinsic.Control.EndTry
Program.Sub.SetupGridView.End

Program.Sub.gsgcWOs_CellValueChanged.Start
V.Local.sDataTable.Declare
V.Local.sPriority.Declare
V.Local.iRet.Declare
V.Local.fRatio.Declare
V.Local.bTopLevel.Declare
F.Intrinsic.Control.Try

Gui.F_WO_Dash.gsgcWOs.GetFocusedGridview(V.Local.sDataTable)
F.Intrinsic.Control.If(V.Local.sDataTable.UCase,=,"DTSUBLEVEL")
	V.Local.sDataTable.Set("dtTopLevel$dtSubLevel")
	V.Local.bTopLevel.Set(False)
	F.Intrinsic.Control.If(V.DataTable.dtTopLevel$dtSubLevel(V.Args.RowIndex).DATE_CLOSED!FieldVal,!=,V.Ambient.MinDate)
		F.Data.DataTable.SetValue("dtTopLevel$dtSubLevel",V.Args.RowIndex,"PRIORITY",V.DataTable.dtTopLevel$dtSubLevel(V.Args.RowIndex).PRI_ORIG!FieldVal,"QTY_ORDER",V.DataTable.dtTopLevel$dtSubLevel(V.Args.RowIndex).QTY_ORDER_ORIG!FieldVal)
		F.Intrinsic.Control.ExitSub
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.Else
	V.Local.bTopLevel.Set(True)
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.SelectCase(V.Args.Column.UCase)
	F.Intrinsic.Control.Case("PRIORITY")
		F.Intrinsic.Control.CallSub(CreateLock,"Job",V.DataTable.[V.Local.sDataTable](V.Args.RowIndex).JOB!FieldVal,"Suffix",V.DataTable.[V.Local.sDataTable](V.Args.RowIndex).SUFFIX!FieldVal)
		F.Intrinsic.Control.If(V.Args.LockPresent)
			'Lock already created for WO, cancel change
			F.Data.DataTable.SetValue(V.Local.sDataTable,V.Args.RowIndex,"PRIORITY",V.DataTable.[V.Local.sDataTable](V.Args.RowIndex).PRI_ORIG!FieldVal,"PRI_CHANGED",False)
		F.Intrinsic.Control.Else
			F.Intrinsic.Control.If(V.Args.Value,=,V.Ambient.Null)
				F.Data.DataTable.SetValue(V.Local.sDataTable,V.Args.RowIndex,"PRIORITY",V.DataTable.[V.Local.sDataTable](V.Args.RowIndex).PRI_ORIG!FieldVal,"PRI_CHANGED",False)
				F.Intrinsic.Control.CallSub(DestroyLock,"Job",V.DataTable.[V.Local.sDataTable](V.Args.RowIndex).JOB!FieldVal,"Suffix",V.DataTable.[V.Local.sDataTable](V.Args.RowIndex).SUFFIX!FieldVal)
			F.Intrinsic.Control.Else
				F.Intrinsic.String.LPad(V.Args.Value,"0",3,V.Local.sPriority)
				F.Intrinsic.Control.If(V.Local.sPriority,!=,V.DataTable.[V.Local.sDataTable](V.Args.RowIndex).PRI_ORIG!FieldVal)
					F.Data.DataTable.SetValue(V.Local.sDataTable,V.Args.RowIndex,"PRIORITY",V.Local.sPriority,"PRI_CHANGED",True)
				F.Intrinsic.Control.Else
					F.Data.DataTable.SetValue(V.Local.sDataTable,V.Args.RowIndex,"PRIORITY",V.Local.sPriority,"PRI_CHANGED",False)
					F.Intrinsic.Control.CallSub(DestroyLock,"Job",V.DataTable.[V.Local.sDataTable](V.Args.RowIndex).JOB!FieldVal,"Suffix",V.DataTable.[V.Local.sDataTable](V.Args.RowIndex).SUFFIX!FieldVal)
				F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.Case("QTY_ORDER")
		F.Intrinsic.Control.CallSub(CreateLock,"Job",V.DataTable.[V.Local.sDataTable](V.Args.RowIndex).JOB!FieldVal,"Suffix",V.DataTable.[V.Local.sDataTable](V.Args.RowIndex).SUFFIX!FieldVal)
		F.Intrinsic.Control.If(V.Args.LockPresent)
			'Lock already created for WO, cancel change
			F.Data.DataTable.SetValue(V.Local.sDataTable,V.Args.RowIndex,"QTY_ORDER",V.DataTable.[V.Local.sDataTable](V.Args.RowIndex).QTY_ORDER_ORIG!FieldVal,"QTY_CHANGED",False)
		F.Intrinsic.Control.Else
			F.Intrinsic.Control.If(V.Args.Value,=,V.Ambient.Null)
				F.Data.DataTable.SetValue(V.Local.sDataTable,V.Args.RowIndex,"QTY_ORDER",V.DataTable.[V.Local.sDataTable](V.Args.RowIndex).QTY_ORDER_ORIG!FieldVal,"QTY_CHANGED",False)
				F.Intrinsic.Control.CallSub(DestroyLock,"Job",V.DataTable.[V.Local.sDataTable](V.Args.RowIndex).JOB!FieldVal,"Suffix",V.DataTable.[V.Local.sDataTable](V.Args.RowIndex).SUFFIX!FieldVal)
			F.Intrinsic.Control.Else
				F.Intrinsic.Control.If(V.Args.Value,<,V.DataTable.[V.Local.sDataTable](V.Args.RowIndex).QTY_COMPLETED!FieldVal)
					F.Data.DataTable.SetValue(V.Local.sDataTable,V.Args.RowIndex,"QTY_ORDER",V.DataTable.[V.Local.sDataTable](V.Args.RowIndex).QTY_ORDER_ORIG!FieldVal,"QTY_CHANGED",False)
					F.Intrinsic.Control.CallSub(DestroyLock,"Job",V.DataTable.[V.Local.sDataTable](V.Args.RowIndex).JOB!FieldVal,"Suffix",V.DataTable.[V.Local.sDataTable](V.Args.RowIndex).SUFFIX!FieldVal)
				F.Intrinsic.Control.ElseIf(V.Args.Value,!=,V.DataTable.[V.Local.sDataTable](V.Args.RowIndex).QTY_ORDER_ORIG!FieldVal)
					F.Data.DataTable.SetValue(V.Local.sDataTable,V.Args.RowIndex,"QTY_CHANGED",True)
				F.Intrinsic.Control.Else
					F.Data.DataTable.SetValue(V.Local.sDataTable,V.Args.RowIndex,"QTY_CHANGED",False)
					F.Intrinsic.Control.CallSub(DestroyLock,"Job",V.DataTable.[V.Local.sDataTable](V.Args.RowIndex).JOB!FieldVal,"Suffix",V.DataTable.[V.Local.sDataTable](V.Args.RowIndex).SUFFIX!FieldVal)
				F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.If(V.Args.LockPresent.Not)
			F.Intrinsic.UI.Msgbox("Would you like to rectify this change to all child Work Orders and their Operations?","Cascade Changes",4,V.Local.iRet)
			F.Intrinsic.Control.If(V.Local.iRet,=,V.Ambient.MsgBoxYes)
				'Calculate the delta ratio
				F.Intrinsic.Math.Div(V.DataTable.[V.Local.sDataTable](V.Args.RowIndex).QTY_ORDER_ORIG!FieldVal,V.DataTable.[V.Local.sDataTable](V.Args.RowIndex).QTY_ORDER!FieldVal,V.Local.fRatio)
				
				F.Data.DataView.Create("dtTopLevel","dvLadder")
				F.Data.DataView.Create("dtTopLevel$dtSubLevel","dvLadderChild")
				F.Data.DataView.Create("dtWOOpsChild","dvLadder")
				Gui.F_WO_Dash..Enabled(False)
				F.Intrinsic.UI.InvokeWaitDialog("Cascading changes, please wait.")
				F.Intrinsic.Control.CallSub(LadderUpdates,"Job",V.DataTable.[V.Local.sDataTable](V.Args.RowIndex).JOB!FieldVal,"Suffix",V.DataTable.[V.Local.sDataTable](V.Args.RowIndex).SUFFIX!FieldVal,"Ratio",V.Local.fRatio,"TopLevel",V.Local.bTopLevel)
				F.Intrinsic.UI.CloseWaitDialog
				Gui.F_WO_Dash..Enabled(True)
				Gui.F_WO_Dash..SetFocus
				F.Data.DataView.Close("dtTopLevel","dvLadder")
				F.Data.DataView.Close("dtTopLevel","dvLadderChild")
				F.Data.DataView.Close("dtWOOpsChild","dvLadder")
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.EndIf
F.Intrinsic.Control.EndSelect

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage,"ScriptFile",V.Caller.ScriptFile,"CurrentSubroutine",V.Ambient.CurrentSubroutine)
	F.Intrinsic.Control.CallSub(F_WO_Dash_UnLoad)
F.Intrinsic.Control.EndTry
Program.Sub.gsgcWOs_CellValueChanged.End

Program.Sub.gsgcWOs_RowCellClick.Start
V.Local.sDataTable.Declare
V.Local.sFilter.Declare
V.Local.sCaption.Declare
V.Local.sPartInfo.Declare
V.Local.sPath.Declare
V.Local.bExists.Declare
F.Intrinsic.Control.Try

F.Intrinsic.Control.If(V.Args.Button.UCase,!=,"LEFT")
	F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.EndIf

Gui.F_WO_Dash.gsgcWOs.GetFocusedGridview(V.Local.sDataTable)
F.Intrinsic.Control.If(V.Local.sDataTable.UCase,=,"DTSUBLEVEL")
	V.Local.sDataTable.Set("dtTopLevel$dtSubLevel")
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.SelectCase(V.Args.Column.UCase)
	F.Intrinsic.Control.Case("WO")
		'Open/View WO Screen
		F.Intrinsic.Control.BlockEvents
		Gui.F_WO_Dash..Enabled(False)
		F.Intrinsic.Control.If(V.Screen.F_WO_Dash!optView.Value)
			F.Data.DataTable.AddRow("450000","Mode","7","WONum",V.DataTable.[V.Local.sDataTable](V.Args.RowIndex).JOB!FieldVal,"WOSuffix",V.DataTable.[V.Local.sDataTable](V.Args.RowIndex).SUFFIX!FieldVal,"ActOrHist","A")
			F.Intrinsic.Control.CallSub(450000Sync)
		F.Intrinsic.Control.Else
			F.Data.DataTable.AddRow("2009","WONum",V.DataTable.[V.Local.sDataTable](V.Args.RowIndex).JOB!FieldVal,"WOSuffix",V.DataTable.[V.Local.sDataTable](V.Args.RowIndex).SUFFIX!FieldVal,"Switch","O")
			F.Intrinsic.Control.CallSub(2009Sync)
		F.Intrinsic.Control.EndIf
		Gui.F_WO_Dash..Enabled(True)
		Gui.F_WO_Dash..SetFocus
		F.Intrinsic.Control.UnBlockEvents
	F.Intrinsic.Control.Case("PART_NUM")
		F.Global.Inventory.GetPartInfo(V.DataTable.[V.Local.sDataTable](V.Args.RowIndex).PART!FieldVal,V.DataTable.[V.Local.sDataTable](V.Args.RowIndex).LOC!FieldVal,V.Local.sPartInfo)
		F.Intrinsic.Control.If(V.Local.sPartInfo,!=,"***NOPARTFOUND***")
			'Open Supply and Demand
			F.Intrinsic.Control.BlockEvents
			Gui.F_WO_Dash..Enabled(False)
			F.Intrinsic.Control.If(V.Screen.F_WO_Dash!optView.Value)
				F.Intrinsic.String.Build("{0}bin\SupplyAndDemand.exe",V.Caller.LocalGSSTempDir,V.Local.sPath)
				F.Intrinsic.File.Exists(V.Local.sPath,V.Local.bExists)
				F.Intrinsic.Control.If(V.Local.bExists)
					F.Intrinsic.Task.SetEnvironmentVariable("PARTNUMBER",V.DataTable.[V.Local.sDataTable](V.Args.RowIndex).PART!FieldVal)
					F.Intrinsic.Task.SetEnvironmentVariable("LOCATIONCODE",V.DataTable.[V.Local.sDataTable](V.Args.RowIndex).LOC!FieldVal)
					F.Intrinsic.Task.LaunchAsync(V.Local.sPath,1,V.Local.sPath)
				F.Intrinsic.Control.Else
					F.Data.DataTable.AddRow("300011","Part",V.DataTable.[V.Local.sDataTable](V.Args.RowIndex).PART!FieldVal,"Location",V.DataTable.[V.Local.sDataTable](V.Args.RowIndex).LOC!FieldVal,"Switch","")
					F.Intrinsic.Control.CallSub(300011Sync)	
				F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.Else
				F.Data.DataTable.AddRow("300011","Part",V.DataTable.[V.Local.sDataTable](V.Args.RowIndex).PART!FieldVal,"Location",V.DataTable.[V.Local.sDataTable](V.Args.RowIndex).LOC!FieldVal,"Switch","M")
				F.Intrinsic.Control.CallSub(300011Sync)
			F.Intrinsic.Control.EndIf
			Gui.F_WO_Dash..Enabled(True)
			Gui.F_WO_Dash..SetFocus
			F.Intrinsic.Control.UnBlockEvents
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.Case("VIEW_OPS")
		F.Intrinsic.Control.BlockEvents
		Gui.F_WO_Dash..Enabled(False)
		F.Intrinsic.String.Build("JOB = '{0}' and SUFFIX = '{1}'",V.DataTable.[V.Local.sDataTable](V.Args.RowIndex).JOB!FieldVal,V.DataTable.[V.Local.sDataTable](V.Args.RowIndex).SUFFIX!FieldVal,V.Local.sFilter)
		F.Data.DataView.SetFilter("dtWOOpsChild","dvWO",V.Local.sFilter)
		F.Intrinsic.String.Build("WO Operations ({0})",V.DataTable.[V.Local.sDataTable](V.Args.RowIndex).WO!FieldVal,V.Local.sCaption)
		Gui.F_Ops_Dash..Caption(V.Local.sCaption)
		F.Intrinsic.Control.UnBlockEvents
		Gui.F_Ops_Dash..Show
	F.Intrinsic.Control.Case("DELETE_CMD")
		F.Intrinsic.Control.If(V.DataTable.[V.Local.sDataTable](V.Args.RowIndex).HAS_COST!FieldValNot,=,True,and,V.DataTable.[V.Local.sDataTable](V.Args.RowIndex).HAS_DETAIL!FieldValNot,=,True)
			F.Intrinsic.Control.CallSub(CreateLock,"Job",V.DataTable.[V.Local.sDataTable](V.Args.RowIndex).JOB!FieldVal,"Suffix",V.DataTable.[V.Local.sDataTable](V.Args.RowIndex).SUFFIX!FieldVal)
			F.Intrinsic.Control.If(V.Args.LockPresent.Not)
				F.Intrinsic.Control.BlockEvents
				F.Data.DataTable.SetValue(V.Local.sDataTable,V.Args.RowIndex,"DELETED",True)
				'need to delete operations as well
				F.Data.DataView.Create("dtWOOpsChild","dvOperationsToDelete")
				F.Intrinsic.String.Build("[JOB] = '{0}' and [SUFFIX] = '{1}'",V.DataTable.[V.Local.sDataTable](V.Args.RowIndex).JOB!FieldVal,V.DataTable.[V.Local.sDataTable](V.Args.RowIndex).SUFFIX!FieldVal,V.Local.sFilter)
				F.Data.DataView.SetFilter("dtWOOpsChild","dvOperationsToDelete",V.Local.sFilter)
				F.Data.DataView.SetValue("dtWOOpsChild","dvOperationsToDelete",-1,"JOB_DELETED",True)
				F.Data.DataView.Close("dtWOOpsChild","dvOperationsToDelete")
				F.Intrinsic.Control.UnBlockEvents
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.EndIf
F.Intrinsic.Control.EndSelect

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage,"ScriptFile",V.Caller.ScriptFile,"CurrentSubroutine",V.Ambient.CurrentSubroutine)
	F.Intrinsic.Control.CallSub(F_WO_Dash_UnLoad)
F.Intrinsic.Control.EndTry
Program.Sub.gsgcWOs_RowCellClick.End

Program.Sub.F_Ops_Dash_UnLoad.Start
F.Intrinsic.Control.Try

Gui.F_Ops_Dash..Visible(False)

Gui.F_WO_Dash..Enabled(True)
Gui.F_WO_Dash..SetFocus

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage,"ScriptFile",V.Caller.ScriptFile,"CurrentSubroutine",V.Ambient.CurrentSubroutine)
	F.Intrinsic.Control.CallSub(F_WO_Dash_UnLoad)
F.Intrinsic.Control.EndTry
Program.Sub.F_Ops_Dash_UnLoad.End

Program.Sub.cmdRefresh_Click.Start
V.Local.sMsg.Declare
V.Local.sSQL.Declare
V.Local.iJobs.Declare
V.Local.iRet.Declare
V.Local.iCheck.Declare
F.Intrinsic.Control.Try
F.Intrinsic.Control.If(V.DataTable.dtTopLevel.Exists)
	F.Data.DataView.Create("dtTopLevel","dvTopCheckChanges")
	F.Data.DataView.Create("dtTopLevel","dvTopCheckDeletes")
	F.Data.DataView.Create("dtTopLevel$dtSubLevel","dvSubCheckChanges")
	F.Data.DataView.Create("dtTopLevel$dtSubLevel","dvSubCheckDeletes")
	F.Data.DataView.Create("dtWOOpsChild","dvOpsCheckChanges")
	F.Data.DataView.Create("dtWOOpsChild","dvOpsCheckDeletes")
	F.Data.DataView.Create("dtWOOpsChild","dvOpsCheckAdds")
	F.Data.DataView.SetFilter("dtTopLevel","dvTopCheckChanges","([PRI_CHANGED] = True or [QTY_CHANGED] = True) and [DELETED] = False")
	F.Data.DataView.SetFilter("dtTopLevel","dvTopCheckDeletes","[DELETED] = True")
	F.Data.DataView.SetFilter("dtTopLevel","dvSubCheckChanges","([PRI_CHANGED] = True or [QTY_CHANGED] = True) and [DELETED] = False")
	F.Data.DataView.SetFilter("dtTopLevel","dvSubCheckDeletes","[DELETED] = True")
	F.Data.DataView.SetFilter("dtWOOpsChild","dvOpsCheckChanges","([DESCR_CHANGED] = True or [QTY_CHANGED] = True) and [DELETED] = False and [JOB_DELETED] = False and [ADDED] = False")
	F.Data.DataView.SetFilter("dtWOOpsChild","dvOpsCheckDeletes","([DELETED] = True or [JOB_DELETED] = True) and [ADDED] = False")
	F.Data.DataView.SetFilter("dtWOOpsChild","dvOpsCheckAdds","[ADDED] = True and [JOB_DELETED] = False")
	
	F.Intrinsic.Math.Evaluate("[V.DataView.dtTopLevel!dvTopCheckChanges.RowCount]+[V.DataView.dtTopLevel!dvTopCheckDeletes.RowCount]+[V.DataView.dtTopLevel!dvSubCheckChanges.RowCount]+[V.DataView.dtTopLevel!dvSubCheckDeletes.RowCount]+[V.DataView.dtWOOpsChild!dvOpsCheckChanges.RowCount]+[V.DataView.dtWOOpsChild!dvOpsCheckDeletes.RowCount]+[V.DataView.dtWOOpsChild!dvOpsCheckAdds.RowCount]",V.Local.iCheck)
	
	F.Intrinsic.Control.If(V.Local.iCheck,>,0)
		'there are changes/deletes/adds, report them to the user
		F.Intrinsic.String.Build("You have unsaved changes: {0}",V.Ambient.NewLine,V.Local.sMsg)
		F.Intrinsic.Control.If(V.DataView.dtTopLevel!dvTopCheckChanges.RowCount,>,0,or,V.DataView.dtTopLevel!dvSubCheckChanges.RowCount,>,0)
			F.Intrinsic.Math.Add(V.DataView.dtTopLevel!dvTopCheckChanges.RowCount,V.DataView.dtTopLevel!dvSubCheckChanges.RowCount,V.Local.iJobs)
			F.Intrinsic.String.Build("{0}{1}Changed Jobs: {2}",V.Local.sMsg,V.Ambient.NewLine,V.Local.iJobs.String,V.Local.sMsg)
		F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.If(V.DataView.dtTopLevel!dvTopCheckDeletes.RowCount,>,0,or,V.DataView.dtTopLevel!dvSubCheckDeletes.RowCount,>,0)
			F.Intrinsic.Math.Add(V.DataView.dtTopLevel!dvTopCheckDeletes.RowCount,V.DataView.dtTopLevel!dvSubCheckDeletes.RowCount,V.Local.iJobs)
			F.Intrinsic.String.Build("{0}{1}Deleted Jobs: {2}",V.Local.sMsg,V.Ambient.NewLine,V.Local.iJobs.String,V.Local.sMsg)
		F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.If(V.DataView.dtWOOpsChild!dvOpsCheckAdds.RowCount,>,0)
			F.Intrinsic.String.Build("{0}{1}Added Operations: {2}",V.Local.sMsg,V.Ambient.NewLine,V.DataView.dtWOOpsChild!dvOpsCheckAdds.RowCount,V.Local.sMsg)
		F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.If(V.DataView.dtWOOpsChild!dvOpsCheckChanges.RowCount,>,0)
			F.Intrinsic.String.Build("{0}{1}Changed Operations: {2}",V.Local.sMsg,V.Ambient.NewLine,V.DataView.dtWOOpsChild!dvOpsCheckChanges.RowCount,V.Local.sMsg)
		F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.If(V.DataView.dtWOOpsChild!dvOpsCheckDeletes.RowCount,>,0)
			F.Intrinsic.String.Build("{0}{1}Deleted Operations: {2}",V.Local.sMsg,V.Ambient.NewLine,V.DataView.dtWOOpsChild!dvOpsCheckDeletes.RowCount,V.Local.sMsg)
		F.Intrinsic.Control.EndIf
		F.Intrinsic.String.Build("{0}{1}{1}Would you like to continue?",V.Local.sMsg,V.Ambient.NewLine,V.Local.sMsg)
		F.Intrinsic.UI.Msgbox(V.Local.sMsg,"REFRESHING",4,V.Local.iRet)
		F.Intrinsic.Control.If(V.Local.iRet,=,7)
			'No - return to screen
			F.Data.DataView.Close("dtTopLevel","dvTopCheckChanges")
			F.Data.DataView.Close("dtTopLevel","dvTopCheckDeletes")
			F.Data.DataView.Close("dtTopLevel","dvSubCheckChanges")
			F.Data.DataView.Close("dtTopLevel","dvSubCheckDeletes")
			F.Data.DataView.Close("dtWOOpsChild","dvOpsCheckChanges")
			F.Data.DataView.Close("dtWOOpsChild","dvOpsCheckDeletes")
			F.Data.DataView.Close("dtWOOpsChild","dvOpsCheckAdds")
			
			F.Intrinsic.Control.ExitSub
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.EndIf
	'Destroy all session's locks
	F.Intrinsic.String.Build("delete from X_LOCK_FILE where LOCK_TYPE = 'WO' and COMPANY = '{0}' and USER_ID = '{1}' and PID = {2};",V.Caller.CompanyCode,V.Caller.User,V.Caller.PID,V.Local.sSQL)
	F.ODBC.Connection!con.OpenCompanyConnection
	F.ODBC.Connection!con.Execute(V.Local.sSQL)
	F.ODBC.Connection!con.Close
	
	F.Data.DataTable.Close("dtTopLevel$dtSubLevel")
	F.Data.DataTable.Close("dtTopLevel")
	F.Data.DataTable.Close("dtWOOpsChild")
	F.Data.DataTable.Close("dtNotes$dtJobList")
	F.Data.DataTable.Close("dtNotes")
	F.Data.DataTable.Close("dtAddOpsM")
	F.Data.DataTable.Close("dtAddOpsL")
	F.Data.DataTable.Close("dtAddOpsO")
	F.Data.DataTable.Close("dtAddOpsC")
F.Intrinsic.Control.EndIf

Gui.F_WO_Dash..Visible(False)

F.Intrinsic.Control.CallSub(LoadWODTs)
'V.Args.WONotes

F.Intrinsic.Control.CallSub(SetupGridView,"WONotes",V.Args.WONotes)

Gui.F_WO_Dash..Visible(True)

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage,"ScriptFile",V.Caller.ScriptFile,"CurrentSubroutine",V.Ambient.CurrentSubroutine)
	F.Intrinsic.Control.CallSub(F_WO_Dash_UnLoad)
F.Intrinsic.Control.EndTry
Program.Sub.cmdRefresh_Click.End

Program.Sub.gsgcWOs_ResetChanges.Start
V.Local.sFilter.Declare
V.Local.iCnt.Declare
F.Intrinsic.Control.Try

F.Intrinsic.Control.If(V.DataTable.dtTopLevel.Exists,=,False)
	F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.If(V.DataView.dtWOOpsChild!dvWO.Exists,=,False)
	F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.BlockEvents
Gui.F_WO_Dash..Enabled(False)

F.Intrinsic.Control.For(V.Local.iCnt,0,V.DataTable.dtTopLevel.RowCount--,1)
	F.Intrinsic.Control.If(V.DataTable.dtTopLevel(V.Local.iCnt).DELETED!FieldVal)
		'reset operations to not be deleted
		F.Data.DataView.Create("dtWOOpsChild","dvOperationsToDelete")
		F.Intrinsic.String.Build("[JOB] = '{0}' and [SUFFIX] = '{1}'",V.DataTable.dtTopLevel(V.Local.iCnt).JOB!FieldVal,V.DataTable.dtTopLevel(V.Local.iCnt).SUFFIX!FieldVal,V.Local.sFilter)
		F.Data.DataView.SetFilter("dtWOOpsChild","dvOperationsToDelete",V.Local.sFilter)
		F.Data.DataView.SetValue("dtWOOpsChild","dvOperationsToDelete",-1,"JOB_DELETED",False)
		F.Data.DataView.Close("dtWOOpsChild","dvOperationsToDelete")
	F.Intrinsic.Control.EndIf
	F.Data.DataTable.SetValue("dtTopLevel",V.Local.iCnt,"PRIORITY",V.DataTable.dtTopLevel(V.Local.iCnt).PRI_ORIG!FieldVal,"QTY_ORDER",V.DataTable.dtTopLevel(V.Local.iCnt).QTY_ORDER_ORIG!FieldVal,"PRI_CHANGED",False,"QTY_CHANGED",False,"DELETED",False)
	F.Intrinsic.Control.CallSub(DestroyLock,"Job",V.DataTable.dtTopLevel(V.Local.iCnt).JOB!FieldVal,"Suffix",V.DataTable.dtTopLevel(V.Local.iCnt).SUFFIX!FieldVal)
F.Intrinsic.Control.Next(V.Local.iCnt)

F.Intrinsic.Control.For(V.Local.iCnt,0,V.DataTable.dtTopLevel$dtSubLevel.RowCount--,1)
	F.Intrinsic.Control.If(V.DataTable.dtTopLevel$dtSubLevel(V.Local.iCnt).DELETED!FieldVal)
		'reset operations to not be deleted
		F.Data.DataView.Create("dtWOOpsChild","dvOperationsToDelete")
		F.Intrinsic.String.Build("[JOB] = '{0}' and [SUFFIX] = '{1}'",V.DataTable.dtTopLevel$dtSubLevel(V.Local.iCnt).JOB!FieldVal,V.DataTable.dtTopLevel$dtSubLevel(V.Local.iCnt).SUFFIX!FieldVal,V.Local.sFilter)
		F.Data.DataView.SetFilter("dtWOOpsChild","dvOperationsToDelete",V.Local.sFilter)
		F.Data.DataView.SetValue("dtWOOpsChild","dvOperationsToDelete",-1,"JOB_DELETED",False)
		F.Data.DataView.Close("dtWOOpsChild","dvOperationsToDelete")
	F.Intrinsic.Control.EndIf
	F.Data.DataTable.SetValue("dtTopLevel$dtSubLevel",V.Local.iCnt,"PRIORITY",V.DataTable.dtTopLevel$dtSubLevel(V.Local.iCnt).PRI_ORIG!FieldVal,"QTY_ORDER",V.DataTable.dtTopLevel$dtSubLevel(V.Local.iCnt).QTY_ORDER_ORIG!FieldVal,"PRI_CHANGED",False,"QTY_CHANGED",False,"DELETED",False)
	F.Intrinsic.Control.CallSub(DestroyLock,"Job",V.DataTable.dtTopLevel$dtSubLevel(V.Local.iCnt).JOB!FieldVal,"Suffix",V.DataTable.dtTopLevel$dtSubLevel(V.Local.iCnt).SUFFIX!FieldVal)
F.Intrinsic.Control.Next(V.Local.iCnt)

F.Intrinsic.Control.For(V.Local.iCnt,0,V.DataTable.dtWOOpsChild.RowCount--,1)
	F.Intrinsic.Control.If(V.DataTable.dtWOOpsChild!dvWO(V.Local.iCnt).DELETED!FieldVal)
		F.Data.DataView.Create("dtWOOpsChild","dvSeqCheck")
		F.Intrinsic.String.Build("[JOB] = '{0}' and [SUFFIX] = '{1}' and [SEQ] = '{2}' and [DELETED] = False",V.DataTable.dtWOOpsChild!dvWO(V.Local.iCnt).JOB!FieldVal,V.DataTable.dtWOOpsChild!dvWO(V.Local.iCnt).SUFFIX!FieldVal,V.DataView.dtWOOpsChild!dvWO(V.Local.iCnt).SEQ!FieldVal,V.Local.sFilter)
		F.Data.DataView.SetFilter("dtWOOpsChild","dvSeqCheck",V.Local.sFilter)
		F.Intrinsic.Control.If(V.DataView.dtWOOpsChild!dvSeqCheck.RowCount,=,0)
			F.Data.DataTable.SetValue("dtWOOpsChild",V.DataView.dtWOOpsChild!dvWO(V.Local.iCnt).DataTableIndex,"DESCR",V.DataView.dtWOOpsChild!dvWO(V.Local.iCnt).DESCR_ORIG!FieldVal,"QTY_HR_EST",V.DataView.dtWOOpsChild!dvWO(V.Local.iCnt).QTY_HR_EST_ORIG!FieldVal,"DESCR_CHANGED",False,"QTY_CHANGED",False,"DELETED",False)
		F.Intrinsic.Control.EndIf
		F.Data.DataView.Close("dtWOOpsChild","dvSeqCheck")
	F.Intrinsic.Control.Else
		F.Data.DataTable.SetValue("dtWOOpsChild",V.DataView.dtWOOpsChild!dvWO(V.Local.iCnt).DataTableIndex,"DESCR",V.DataView.dtWOOpsChild!dvWO(V.Local.iCnt).DESCR_ORIG!FieldVal,"QTY_HR_EST",V.DataView.dtWOOpsChild!dvWO(V.Local.iCnt).QTY_HR_EST_ORIG!FieldVal,"DESCR_CHANGED",False,"QTY_CHANGED",False,"DELETED",False)
	F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.CallSub(DestroyLock,"Job",V.DataView.dtWOOpsChild!dvWO(V.Local.iCnt).JOB!FieldVal,"Suffix",V.DataView.dtWOOpsChild!dvWO(V.Local.iCnt).SUFFIX!FieldVal)
F.Intrinsic.Control.Next(V.Local.iCnt)

F.Intrinsic.Control.UnBlockEvents
Gui.F_WO_Dash..Enabled(True)
Gui.F_WO_Dash..SetFocus

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage,"ScriptFile",V.Caller.ScriptFile,"CurrentSubroutine",V.Ambient.CurrentSubroutine)
	F.Intrinsic.Control.CallSub(F_WO_Dash_UnLoad)
F.Intrinsic.Control.EndTry
Program.Sub.gsgcWOs_ResetChanges.End

Program.Sub.gsgcWOs_ResetChange.Start
V.Local.sDataTable.Declare
V.Local.sRows.Declare
V.Local.sFilter.Declare
V.Local.iRow.Declare
F.Intrinsic.Control.Try

F.Intrinsic.Control.If(V.DataTable.dtTopLevel.Exists,=,False)
	F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.BlockEvents

Gui.F_WO_Dash.gsgcWOs.GetFocusedGridview(V.Local.sDataTable)
F.Intrinsic.Control.If(V.Local.sDataTable.UCase,=,"DTSUBLEVEL")
	V.Local.sDataTable.Set("dtTopLevel$dtSubLevel")
F.Intrinsic.Control.EndIf
Gui.F_WO_Dash.gsgcWOs.GetSelectedRowsInFocus(V.Local.sRows)

F.Intrinsic.Control.If(V.Local.sRows,!=,"")
	F.Intrinsic.String.Split(V.Local.sRows,"*!*",V.Local.sRows)
	
	F.Intrinsic.Control.For(V.Local.iRow,0,V.Local.sRows.UBound,1)
		F.Intrinsic.Control.If(V.DataTable.[V.Local.sDataTable](V.Local.sRows(V.Local.iRow).Long).DELETED!FieldVal)
			'reset operations to not be deleted
			F.Data.DataView.Create("dtWOOpsChild","dvOperationsToDelete")
			F.Intrinsic.String.Build("[JOB] = '{0}' and [SUFFIX] = '{1}'",V.DataTable.[V.Local.sDataTable](V.Local.sRows(V.Local.iRow).Long).JOB!FieldVal,V.DataTable.[V.Local.sDataTable](V.Local.sRows(V.Local.iRow).Long).SUFFIX!FieldVal,V.Local.sFilter)
			F.Data.DataView.SetFilter("dtWOOpsChild","dvOperationsToDelete",V.Local.sFilter)
			F.Data.DataView.SetValue("dtWOOpsChild","dvOperationsToDelete",-1,"JOB_DELETED",False)
			F.Data.DataView.Close("dtWOOpsChild","dvOperationsToDelete")
		F.Intrinsic.Control.EndIf
		F.Data.DataTable.SetValue(V.Local.sDataTable,V.Local.sRows(V.Local.iRow).Long,"PRIORITY",V.DataTable.[V.Local.sDataTable](V.Local.sRows(V.Local.iRow).Long).PRI_ORIG!FieldVal,"QTY_ORDER",V.DataTable.[V.Local.sDataTable](V.Local.sRows(V.Local.iRow).Long).QTY_ORDER_ORIG!FieldVal,"PRI_CHANGED",False,"QTY_CHANGED",False,"DELETED",False)
		F.Intrinsic.Control.CallSub(DestroyLock,"Job",V.DataTable.[V.Local.sDataTable](V.Local.sRows(V.Local.iRow).Long).JOB!FieldVal,"Suffix",V.DataTable.[V.Local.sDataTable](V.Local.sRows(V.Local.iRow).Long).SUFFIX!FieldVal)
	F.Intrinsic.Control.Next(V.Local.iRow)
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.UnBlockEvents

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage,"ScriptFile",V.Caller.ScriptFile,"CurrentSubroutine",V.Ambient.CurrentSubroutine)
	F.Intrinsic.Control.CallSub(F_WO_Dash_UnLoad)
F.Intrinsic.Control.EndTry
Program.Sub.gsgcWOs_ResetChange.End

Program.Sub.gsgcOps_CellValueChanged.Start
F.Intrinsic.Control.Try

F.Intrinsic.Control.If(V.DataTable.dtWOOpsChild(V.Args.RowIndex).CHILD_CLOSED!FieldVal,!=,V.Ambient.MinDate,and,V.DataTable.dtWOOpsChild(V.Args.RowIndex).CHILD_WO!FieldVal,!=,"")
	F.Data.DataTable.SetValue("dtWOOpsChild",V.Args.RowIndex,"DESCR",V.DataTable.dtWOOpsChild(V.Args.RowIndex).DESCR_ORIG!FieldVal,"QTY_HR_EST",V.DataTable.dtWOOpsChild(V.Args.RowIndex).QTY_HR_EST_ORIG!FieldVal)
	F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.SelectCase(V.Args.Column.UCase)
	F.Intrinsic.Control.Case("DESCR")
		F.Intrinsic.Control.CallSub(CreateLock,"Job",V.DataTable.dtWOOpsChild(V.Args.RowIndex).JOB!FieldVal,"Suffix",V.DataTable.dtWOOpsChild(V.Args.RowIndex).SUFFIX!FieldVal)
		F.Intrinsic.Control.If(V.Args.LockPresent)
			F.Data.DataTable.SetValue("dtWOOpsChild","DESCR",V.DataTable.dtWOOpsChild(V.Args.RowIndex).DESCR_ORIG!FieldVal,V.Args.RowIndex,"DESCR_CHANGED",False)
		F.Intrinsic.Control.Else
			F.Intrinsic.Control.If(V.Args.Value.Trim,!=,V.DataTable.dtWOOpsChild(V.Args.RowIndex).DESCR_ORIG!FieldValTrim)
				F.Data.DataTable.SetValue("dtWOOpsChild",V.Args.RowIndex,"DESCR_CHANGED",True)
			F.Intrinsic.Control.Else
				F.Data.DataTable.SetValue("dtWOOpsChild",V.Args.RowIndex,"DESCR_CHANGED",False)
				F.Intrinsic.Control.CallSub(DestroyLock,"Job",V.DataTable.dtWOOpsChild(V.Args.RowIndex).JOB!FieldVal,"Suffix",V.DataTable.dtWOOpsChild(V.Args.RowIndex).SUFFIX!FieldVal)
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.Case("QTY_HR_EST")
		F.Intrinsic.Control.CallSub(CreateLock,"Job",V.DataTable.dtWOOpsChild(V.Args.RowIndex).JOB!FieldVal,"Suffix",V.DataTable.dtWOOpsChild(V.Args.RowIndex).SUFFIX!FieldVal)
		F.Intrinsic.Control.If(V.Args.LockPresent)
			F.Data.DataTable.SetValue("dtWOOpsChild",V.Args.RowIndex,"QTY_HR_EST",V.DataTable.dtWOOpsChild(V.Args.RowIndex).QTY_HR_EST_ORIG!FieldVal,"QTY_CHANGED",False)
		F.Intrinsic.Control.Else
			F.Intrinsic.Control.If(V.Args.Value,=,V.Ambient.Null)
				F.Data.DataTable.SetValue("dtWOOpsChild",V.Args.RowIndex,"QTY_HR_EST",V.DataTable.dtWOOpsChild(V.Args.RowIndex).QTY_HR_EST_ORIG!FieldVal,"QTY_CHANGED",False)
			F.Intrinsic.Control.Else
				F.Intrinsic.Control.If(V.Args.Value,<,V.DataTable.dtWOOpsChild(V.Args.RowIndex).QTY_HR_ACT!FieldVal)
					F.Data.DataTable.SetValue("dtWOOpsChild",V.Args.RowIndex,"QTY_HR_EST",V.DataTable.dtWOOpsChild(V.Args.RowIndex).QTY_HR_EST_ORIG!FieldVal,"QTY_CHANGED",False)
					F.Intrinsic.Control.CallSub(DestroyLock,"Job",V.DataTable.dtWOOpsChild(V.Args.RowIndex).JOB!FieldVal,"Suffix",V.DataTable.dtWOOpsChild(V.Args.RowIndex).SUFFIX!FieldVal)
				F.Intrinsic.Control.ElseIf(V.Args.Value,<,0)
					F.Data.DataTable.SetValue("dtWOOpsChild",V.Args.RowIndex,"QTY_HR_EST",V.DataTable.dtWOOpsChild(V.Args.RowIndex).QTY_HR_EST_ORIG!FieldVal,"QTY_CHANGED",False)
					F.Intrinsic.Control.CallSub(DestroyLock,"Job",V.DataTable.dtWOOpsChild(V.Args.RowIndex).JOB!FieldVal,"Suffix",V.DataTable.dtWOOpsChild(V.Args.RowIndex).SUFFIX!FieldVal)
				F.Intrinsic.Control.ElseIf(V.Args.Value,!=,V.DataTable.dtWOOpsChild(V.Args.RowIndex).QTY_HR_EST_ORIG!FieldVal)
					F.Data.DataTable.SetValue("dtWOOpsChild",V.Args.RowIndex,"QTY_CHANGED",True)
				F.Intrinsic.Control.Else
					F.Data.DataTable.SetValue("dtWOOpsChild",V.Args.RowIndex,"QTY_CHANGED",False)
					F.Intrinsic.Control.CallSub(DestroyLock,"Job",V.DataTable.dtWOOpsChild(V.Args.RowIndex).JOB!FieldVal,"Suffix",V.DataTable.dtWOOpsChild(V.Args.RowIndex).SUFFIX!FieldVal)
				F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.EndIf
F.Intrinsic.Control.EndSelect

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage,"ScriptFile",V.Caller.ScriptFile,"CurrentSubroutine",V.Ambient.CurrentSubroutine)
	F.Intrinsic.Control.CallSub(F_WO_Dash_UnLoad)
F.Intrinsic.Control.EndTry
Program.Sub.gsgcOps_CellValueChanged.End

Program.Sub.gsgcOps_RowCellClick.Start
V.Local.sPartInfo.Declare
V.Local.sFilter.Declare
V.Local.sDataTable.Declare
V.Local.sPath.Declare
V.Local.bExists.Declare
F.Intrinsic.Control.Try

F.Intrinsic.Control.If(V.Args.Button.UCase,!=,"LEFT")
	F.Intrinsic.Control.End
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.SelectCase(V.Args.Column.UCase)
	F.Intrinsic.Control.Case("PART_NUM_WC")
		F.Intrinsic.Control.If(V.DataTable.dtWOOpsChild(V.Args.RowIndex).LMO!FieldVal,=,"M",and,V.Args.CellValue.Trim,!=,"")
			F.Intrinsic.Control.BlockEvents
			F.Global.Inventory.GetPartInfo(V.DataTable.dtWOOpsChild(V.Args.RowIndex).PART_WC!FieldVal,V.DataTable.dtWOOpsChild(V.Args.RowIndex).LOC!FieldVal,V.Local.sPartInfo)
			F.Intrinsic.Control.If(V.Local.sPartInfo,!=,"***NOPARTFOUND***")
				'Open Supply and Demand
				Gui.F_Ops_Dash..Enabled(False)
				F.Intrinsic.Control.If(V.Screen.F_WO_Dash!optView.Value)
					F.Intrinsic.String.Build("{0}bin\SupplyAndDemand.exe",V.Caller.LocalGSSTempDir,V.Local.sPath)
					F.Intrinsic.File.Exists(V.Local.sPath,V.Local.bExists)
					F.Intrinsic.Control.If(V.Local.bExists)
						F.Intrinsic.Task.SetEnvironmentVariable("PARTNUMBER",V.DataTable.dtWOOpsChild(V.Args.RowIndex).PART_WC!FieldVal)
						F.Intrinsic.Task.SetEnvironmentVariable("LOCATIONCODE",V.DataTable.dtWOOpsChild(V.Args.RowIndex).LOC!FieldVal)
						F.Intrinsic.Task.LaunchAsync(V.Local.sPath,1,V.Local.sPath)
					F.Intrinsic.Control.Else
						F.Data.DataTable.AddRow("300011","Part",V.DataTable.dtWOOpsChild(V.Args.RowIndex).PART_WC!FieldVal,"Location",V.DataTable.dtWOOpsChild(V.Args.RowIndex).LOC!FieldVal,"Switch","")
						F.Intrinsic.Control.CallSub(300011Sync)
					F.Intrinsic.Control.EndIf
				F.Intrinsic.Control.Else
					F.Data.DataTable.AddRow("300011","Part",V.DataTable.dtWOOpsChild(V.Args.RowIndex).PART_WC!FieldVal,"Location",V.DataTable.dtWOOpsChild(V.Args.RowIndex).LOC!FieldVal,"Switch","M")
					F.Intrinsic.Control.CallSub(300011Sync)
				F.Intrinsic.Control.EndIf
				Gui.F_Ops_Dash..Enabled(True)
				Gui.F_Ops_Dash..SetFocus
			F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.UnBlockEvents
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.Case("DELETE_CMD")
		F.Intrinsic.Control.If(V.DataTable.dtWOOpsChild(V.Args.RowIndex).ADDED!FieldVal)
			F.Intrinsic.String.Build("dtAddOps{0}",V.DataTable.dtWOOpsChild(V.Args.RowIndex).LMO!FieldVal,V.Local.sDataTable)
			F.Intrinsic.String.Build("[JOB] = '{0}' and [SUFFIX] = '{1}' and [SEQ] = '{2}'",V.DataTable.dtWOOpsChild(V.Args.RowIndex).JOB!FieldVal,V.DataTable.dtWOOpsChild(V.Args.RowIndex).SUFFIX!FieldVal,V.DataTable.dtWOOpsChild(V.Args.RowIndex).SEQ!FieldVal,V.Local.sFilter)
			F.Data.DataTable.DeleteRow("dtWOOpsChild",V.Args.RowIndex)
			F.Data.DataTable.AcceptChanges("dtWOOpsChild")
			F.Data.DataTable.Select(V.Local.sDataTable,V.Local.sFilter,V.Local.sFilter)
			F.Data.DataTable.DeleteRow(V.Local.sDataTable,V.Local.sFilter.Long)
			F.Data.DataTable.AcceptChanges(V.Local.sDataTable)
			F.Intrinsic.Control.CallSub(DestroyLock,"Job",V.DataView.dtWOOpsChild!dvWO(0).JOB!FieldVal,"Suffix",V.DataView.dtWOOpsChild!dvWO(0).SUFFIX!FieldVal)
		F.Intrinsic.Control.ElseIf(V.DataTable.dtWOOpsChild(V.Args.RowIndex).SEQ!FieldValLong,<,995000,and,V.DataTable.dtWOOpsChild(V.Args.RowIndex).HAS_DETAIL!FieldValNot,=,True)
			F.Intrinsic.Control.If(V.DataTable.dtWOOpsChild(V.Args.RowIndex).CHILD_WO!FieldVal,=,"")
				F.Intrinsic.Control.CallSub(CreateLock,"Job",V.DataTable.dtWOOpsChild(V.Args.RowIndex).JOB!FieldVal,"Suffix",V.DataTable.dtWOOpsChild(V.Args.RowIndex).SUFFIX!FieldVal)
				F.Intrinsic.Control.If(V.Args.LockPresent.Not)
					F.Intrinsic.Control.BlockEvents
					F.Data.DataTable.SetValue("dtWOOpsChild",V.Args.RowIndex,"DELETED",True)
					F.Intrinsic.Control.UnBlockEvents
				F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.EndIf
F.Intrinsic.Control.EndSelect

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage,"ScriptFile",V.Caller.ScriptFile,"CurrentSubroutine",V.Ambient.CurrentSubroutine)
	F.Intrinsic.Control.CallSub(F_WO_Dash_UnLoad)
F.Intrinsic.Control.EndTry
Program.Sub.gsgcOps_RowCellClick.End

Program.Sub.gsgcOps_ResetChanges.Start
V.Local.sFilter.Declare
V.Local.iCnt.Declare
F.Intrinsic.Control.Try

F.Intrinsic.Control.If(V.DataTable.dtTopLevel.Exists,=,False)
	F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.If(V.DataView.dtWOOpsChild!dvWO.Exists,=,False)
	F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.BlockEvents

F.Intrinsic.Control.For(V.Local.iCnt,0,V.DataTable.dtTopLevel.RowCount--,1)
	F.Intrinsic.Control.If(V.DataTable.dtTopLevel(V.Local.iCnt).DELETED!FieldVal)
		'reset operations to not be deleted
		F.Data.DataView.Create("dtWOOpsChild","dvOperationsToDelete")
		F.Intrinsic.String.Build("[JOB] = '{0}' and [SUFFIX] = '{1}'",V.DataTable.dtTopLevel(V.Local.iCnt).JOB!FieldVal,V.DataTable.dtTopLevel(V.Local.iCnt).SUFFIX!FieldVal,V.Local.sFilter)
		F.Data.DataView.SetFilter("dtWOOpsChild","dvOperationsToDelete",V.Local.sFilter)
		F.Data.DataView.SetValue("dtWOOpsChild","dvOperationsToDelete",-1,"JOB_DELETED",False)
		F.Data.DataView.Close("dtWOOpsChild","dvOperationsToDelete")
	F.Intrinsic.Control.EndIf
	F.Data.DataTable.SetValue("dtTopLevel",V.Local.iCnt,"PRIORITY",V.DataTable.dtTopLevel(V.Local.iCnt).PRI_ORIG!FieldVal,"QTY_ORDER",V.DataTable.dtTopLevel(V.Local.iCnt).QTY_ORDER_ORIG!FieldVal,"PRI_CHANGED",False,"QTY_CHANGED",False,"DELETED",False)
	F.Intrinsic.Control.CallSub(DestroyLock,"Job",V.DataTable.dtTopLevel(V.Local.iCnt).JOB!FieldVal,"Suffix",V.DataTable.dtTopLevel(V.Local.iCnt).SUFFIX!FieldVal)
F.Intrinsic.Control.Next(V.Local.iCnt)

F.Intrinsic.Control.For(V.Local.iCnt,0,V.DataTable.dtTopLevel$dtSubLevel.RowCount--,1)
	F.Intrinsic.Control.If(V.DataTable.dtTopLevel$dtSubLevel(V.Local.iCnt).DELETED!FieldVal)
		'reset operations to not be deleted
		F.Data.DataView.Create("dtWOOpsChild","dvOperationsToDelete")
		F.Intrinsic.String.Build("[JOB] = '{0}' and [SUFFIX] = '{1}'",V.DataTable.dtTopLevel$dtSubLevel(V.Local.iCnt).JOB!FieldVal,V.DataTable.dtTopLevel$dtSubLevel(V.Local.iCnt).SUFFIX!FieldVal,V.Local.sFilter)
		F.Data.DataView.SetFilter("dtWOOpsChild","dvOperationsToDelete",V.Local.sFilter)
		F.Data.DataView.SetValue("dtWOOpsChild","dvOperationsToDelete",-1,"JOB_DELETED",False)
		F.Data.DataView.Close("dtWOOpsChild","dvOperationsToDelete")
	F.Intrinsic.Control.EndIf
	F.Data.DataTable.SetValue("dtTopLevel$dtSubLevel",V.Local.iCnt,"PRIORITY",V.DataTable.dtTopLevel$dtSubLevel(V.Local.iCnt).PRI_ORIG!FieldVal,"QTY_ORDER",V.DataTable.dtTopLevel$dtSubLevel(V.Local.iCnt).QTY_ORDER_ORIG!FieldVal,"PRI_CHANGED",False,"QTY_CHANGED",False,"DELETED",False)
	F.Intrinsic.Control.CallSub(DestroyLock,"Job",V.DataTable.dtTopLevel$dtSubLevel(V.Local.iCnt).JOB!FieldVal,"Suffix",V.DataTable.dtTopLevel$dtSubLevel(V.Local.iCnt).SUFFIX!FieldVal)
F.Intrinsic.Control.Next(V.Local.iCnt)

F.Intrinsic.Control.For(V.Local.iCnt,0,V.DataView.dtWOOpsChild!dvWO.RowCount--,1)
	F.Intrinsic.Control.If(V.DataView.dtWOOpsChild!dvWO(V.Local.iCnt).DELETED!FieldVal)
		F.Data.DataView.Create("dtWOOpsChild","dvSeqCheck")
		F.Intrinsic.String.Build("[JOB] = '{0}' and [SUFFIX] = '{1}' and [SEQ] = '{2}' and [DELETED] = False",V.DataView.dtWOOpsChild!dvWO(V.Local.iCnt).JOB!FieldVal,V.DataView.dtWOOpsChild!dvWO(V.Local.iCnt).SUFFIX!FieldVal,V.DataView.dtWOOpsChild!dvWO(V.Local.iCnt).SEQ!FieldVal,V.Local.sFilter)
		F.Data.DataView.SetFilter("dtWOOpsChild","dvSeqCheck",V.Local.sFilter)
		F.Intrinsic.Control.If(V.DataView.dtWOOpsChild!dvSeqCheck.RowCount,=,0)
			F.Data.DataTable.SetValue("dtWOOpsChild",V.DataView.dtWOOpsChild!dvWO(V.Local.iCnt).DataTableIndex,"DESCR",V.DataView.dtWOOpsChild!dvWO(V.Local.iCnt).DESCR_ORIG!FieldVal,"QTY_HR_EST",V.DataView.dtWOOpsChild!dvWO(V.Local.iCnt).QTY_HR_EST_ORIG!FieldVal,"DESCR_CHANGED",False,"QTY_CHANGED",False,"DELETED",False)
		F.Intrinsic.Control.EndIf
		F.Data.DataView.Close("dtWOOpsChild","dvSeqCheck")
	F.Intrinsic.Control.Else
		F.Data.DataTable.SetValue("dtWOOpsChild",V.DataView.dtWOOpsChild!dvWO(V.Local.iCnt).DataTableIndex,"DESCR",V.DataView.dtWOOpsChild!dvWO(V.Local.iCnt).DESCR_ORIG!FieldVal,"QTY_HR_EST",V.DataView.dtWOOpsChild!dvWO(V.Local.iCnt).QTY_HR_EST_ORIG!FieldVal,"DESCR_CHANGED",False,"QTY_CHANGED",False,"DELETED",False)
	F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.CallSub(DestroyLock,"Job",V.DataView.dtWOOpsChild!dvWO(V.Local.iCnt).JOB!FieldVal,"Suffix",V.DataView.dtWOOpsChild!dvWO(V.Local.iCnt).SUFFIX!FieldVal)
F.Intrinsic.Control.Next(V.Local.iCnt)

F.Intrinsic.Control.UnBlockEvents

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage,"ScriptFile",V.Caller.ScriptFile,"CurrentSubroutine",V.Ambient.CurrentSubroutine)
	F.Intrinsic.Control.CallSub(F_WO_Dash_UnLoad)
F.Intrinsic.Control.EndTry
Program.Sub.gsgcOps_ResetChanges.End

Program.Sub.gsgcOps_ResetChange.Start
V.Local.sRows.Declare
V.Local.sFilter.Declare
V.Local.iRow.Declare
F.Intrinsic.Control.Try

F.Intrinsic.Control.If(V.DataView.dtWOOpsChild!dvWO.Exists,=,False)
	F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.BlockEvents

Gui.F_Ops_Dash.gsgcOps.GetSelectedRowsInFocus(V.Local.sRows)

F.Intrinsic.Control.If(V.Local.sRows,!=,"")
	F.Intrinsic.String.Split(V.Local.sRows,"*!*",V.Local.sRows)
	
	F.Intrinsic.Control.For(V.Local.iRow,0,V.Local.sRows.UBound,1)
		F.Intrinsic.Control.If(V.DataTable.dtWOOpsChild(V.Local.sRows(V.Local.iRow).Long).DELETED!FieldVal)
			F.Data.DataView.Create("dtWOOpsChild","dvSeqCheck")
			F.Intrinsic.String.Build("[JOB] = '{0}' and [SUFFIX] = '{1}' and [SEQ] = '{2}' and [DELETED] = False",V.DataTable.dtWOOpsChild(V.Local.sRows(V.Local.iRow).Long).JOB!FieldVal,V.DataTable.dtWOOpsChild(V.Local.sRows(V.Local.iRow).Long).SUFFIX!FieldVal,V.DataTable.dtWOOpsChild(V.Local.sRows(V.Local.iRow).Long).SEQ!FieldVal,V.Local.sFilter)
			F.Data.DataView.SetFilter("dtWOOpsChild","dvSeqCheck",V.Local.sFilter)
			F.Intrinsic.Control.If(V.DataView.dtWOOpsChild!dvSeqCheck.RowCount,=,0)
				F.Data.DataTable.SetValue("dtWOOpsChild",V.Local.sRows(V.Local.iRow).Long,"DESCR",V.DataTable.dtWOOpsChild(V.Local.sRows(V.Local.iRow).Long).DESCR_ORIG!FieldVal,"QTY_HR_EST",V.DataTable.dtWOOpsChild(V.Local.sRows(V.Local.iRow).Long).QTY_HR_EST_ORIG!FieldVal,"DESCR_CHANGED",False,"QTY_CHANGED",False,"DELETED",False)
			F.Intrinsic.Control.EndIf
			F.Data.DataView.Close("dtWOOpsChild","dvSeqCheck")
		F.Intrinsic.Control.Else
			F.Data.DataTable.SetValue("dtWOOpsChild",V.Local.sRows(V.Local.iRow).Long,"DESCR",V.DataTable.dtWOOpsChild(V.Local.sRows(V.Local.iRow).Long).DESCR_ORIG!FieldVal,"QTY_HR_EST",V.DataTable.dtWOOpsChild(V.Local.sRows(V.Local.iRow).Long).QTY_HR_EST_ORIG!FieldVal,"DESCR_CHANGED",False,"QTY_CHANGED",False,"DELETED",False)
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.Next(V.Local.iRow)
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.CallSub(DestroyLock,"Job",V.DataView.dtWOOpsChild!dvWO(0).JOB!FieldVal,"Suffix",V.DataView.dtWOOpsChild!dvWO(0).SUFFIX!FieldVal)

F.Intrinsic.Control.UnBlockEvents

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage,"ScriptFile",V.Caller.ScriptFile,"CurrentSubroutine",V.Ambient.CurrentSubroutine)
	F.Intrinsic.Control.CallSub(F_WO_Dash_UnLoad)
F.Intrinsic.Control.EndTry
Program.Sub.gsgcOps_ResetChange.End

Program.Sub.cmdUpdate_Click.Start
V.Local.sFilter.Declare
V.Local.sSQL.Declare
V.Local.sSetupFlag.Declare
V.Local.iCnt.Declare
V.Local.iJobCnt.Declare
V.Local.iJobNum.Declare
V.Local.fDollars.Declare
V.Local.dStart.Declare
V.Local.dOrder.Declare
V.Local.fLead.Declare
V.Local.sLead.Declare
V.Local.sLMO.Declare
V.Local.sCompl.Declare
F.Intrinsic.Control.Try

F.Intrinsic.Control.If(V.DataTable.dtTopLevel.Exists,=,False)
	F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.EndIf

'USE UNTIL THE UPDATE FUNCTIONALITY IS READY
'F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.BlockEvents

F.Data.DataView.Create("dtTopLevel","dvTopCheck")
F.Data.DataView.Create("dtTopLevel$dtSubLevel","dvSubCheck")
F.Data.DataView.Create("dtWOOpsChild","dvOpsCheck")
F.Data.DataView.SetFilter("dtTopLevel","dvTopCheck","[PRI_CHANGED] = True or [QTY_CHANGED] = True or [DELETED] = True")
F.Data.DataView.SetFilter("dtTopLevel","dvSubCheck","[PRI_CHANGED] = True or [QTY_CHANGED] = True or [DELETED] = True")
F.Data.DataView.SetFilter("dtWOOpsChild","dvOpsCheck","[DESCR_CHANGED] = True or [QTY_CHANGED] = True or [DELETED] = True or [JOB_DELETED] = True or [ADDED] = True")

F.Intrinsic.Control.If(V.DataView.dtTopLevel!dvTopCheck.RowCount,>,0,or,V.DataView.dtTopLevel!dvSubCheck.RowCount,>,0,V.DataView.dtWOOpsChild!dvOpsCheck.RowCount,>,0)

	Gui.F_WO_Dash..Enabled(False)
	
	'DataTable to record Jobs that will need to be rescheduled
	F.Data.DataTable.Create("dtReschedule",False)
	F.Data.DataTable.AddColumn("dtReschedule","JOB","String")
	F.Data.DataTable.AddColumn("dtReschedule","SUFFIX","String")
	F.Data.DataTable.AddColumn("dtReschedule","DATE_START","Date")
	F.Data.DataTable.AddColumn("dtReschedule","DATE_DUE","Date")
	F.Data.DataTable.AddColumn("dtReschedule","DELETED","Boolean",False)
	F.Data.DataView.Create("dtReschedule","dvJob")
	
	'TODO: Change existing objects
	F.Data.DataView.SetFilter("dtTopLevel","dvTopCheck","([PRI_CHANGED] = True or [QTY_CHANGED] = True) and [DELETED] = False")
	F.Data.DataView.SetFilter("dtTopLevel","dvSubCheck","([PRI_CHANGED] = True or [QTY_CHANGED] = True) and [DELETED] = False")
	F.Data.DataView.SetFilter("dtWOOpsChild","dvOpsCheck","([DESCR_CHANGED] = True or [QTY_CHANGED] = True) and [DELETED] = False and [JOB_DELETED] = False and [ADDED] = False")
	
	F.ODBC.Connection!con.OpenCompanyConnection
	F.Intrinsic.UI.InvokeWaitDialog("UPDATE IN PROGRESS","UPDATE IN PROGRESS")
	F.Intrinsic.Math.Add(V.DataView.dtTopLevel!dvTopCheck.RowCount--,V.DataView.dtTopLevel!dvSubCheck.RowCount--,V.Local.iJobCnt)
	F.Intrinsic.Control.If(V.Local.iJobCnt,<,1)
		V.Local.iJobCnt.Set(1)
	F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.For(V.Local.iCnt,0,V.DataView.dtTopLevel!dvTopCheck.RowCount--,1)
		F.Intrinsic.Control.CallSub(ForceDestroyLock,"Job",V.DataView.dtTopLevel!dvTopCheck(V.Local.iCnt).JOB!FieldVal,"Suffix",V.DataView.dtTopLevel!dvTopCheck(V.Local.iCnt).SUFFIX!FieldVal)
		'Update WOS
		F.Intrinsic.UI.ChangeWaitStatus("Committing changes to Jobs.",V.Local.iCnt,0,V.Local.iJobCnt)
		V.Local.sSQL.Set("update JOB_HEADER set ")
		F.Intrinsic.Control.If(V.DataView.dtTopLevel!dvTopCheck(V.Local.iCnt).PRI_CHANGED!FieldVal)
			F.Intrinsic.String.Build("{0}PRIORITY = '{1}'",V.Local.sSQL,V.DataView.dtTopLevel!dvTopCheck(V.Local.iCnt).PRIORITY!FieldVal,V.Local.sSQL)
		F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.If(V.DataView.dtTopLevel!dvTopCheck(V.Local.iCnt).PRI_CHANGED!FieldVal,=,True,and,V.DataView.dtTopLevel!dvTopCheck(V.Local.iCnt).QTY_CHANGED!FieldVal,=,True)
			F.Intrinsic.String.Build("{0}, ",V.Local.sSQL,V.Local.sSQL)
		F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.If(V.DataView.dtTopLevel!dvTopCheck(V.Local.iCnt).QTY_CHANGED!FieldVal)
			F.Intrinsic.String.Build("{0}QTY_ORDER = {1}",V.Local.sSQL,V.DataView.dtTopLevel!dvTopCheck(V.Local.iCnt).QTY_ORDER!FieldValString,V.Local.sSQL)
		F.Intrinsic.Control.EndIf
		F.Intrinsic.String.Build("{0} where JOB = '{1}' and SUFFIX = '{2}';",V.Local.sSQL,V.DataView.dtTopLevel!dvTopCheck(V.Local.iCnt).JOB!FieldVal,V.DataView.dtTopLevel!dvTopCheck(V.Local.iCnt).SUFFIX!FieldVal,V.Local.sSQL)
		F.ODBC.Connection!con.Execute(V.Local.sSQL)
		F.Data.DataTable.AddRow("dtReschedule","JOB",V.DataView.dtTopLevel!dvTopCheck(V.Local.iCnt).JOB!FieldVal,"SUFFIX",V.DataView.dtTopLevel!dvTopCheck(V.Local.iCnt).SUFFIX!FieldVal,"DATE_START",V.DataView.dtTopLevel!dvTopCheck(V.Local.iCnt).DATE_START!FieldVal,"DATE_DUE",V.DataView.dtTopLevel!dvTopCheck(V.Local.iCnt).DATE_DUE!FieldVal)
	F.Intrinsic.Control.Next(V.Local.iCnt)
	F.Intrinsic.Control.For(V.Local.iCnt,0,V.DataView.dtTopLevel!dvSubCheck.RowCount--,1)
		F.Intrinsic.Control.CallSub(ForceDestroyLock,"Job",V.DataView.dtTopLevel!dvSubCheck(V.Local.iCnt).JOB!FieldVal,"Suffix",V.DataView.dtTopLevel!dvSubCheck(V.Local.iCnt).SUFFIX!FieldVal)
		'Update WOS
		F.Intrinsic.Math.Add(V.DataView.dtTopLevel!dvSubCheck.RowCount--,V.Local.iCnt,V.Local.iJobNum)
		F.Intrinsic.UI.ChangeWaitStatus("Committing changes to Jobs.",V.Local.iJobNum,0,V.Local.iJobCnt)
		V.Local.sSQL.Set("update JOB_HEADER set ")
		F.Intrinsic.Control.If(V.DataView.dtTopLevel$dtSubLevel!dvSubCheck(V.Local.iCnt).PRI_CHANGED!FieldVal)
			F.Intrinsic.String.Build("{0}PRIORITY = '{1}'",V.Local.sSQL,V.DataView.dtTopLevel!dvSubCheck(V.Local.iCnt).PRIORITY!FieldVal,V.Local.sSQL)
		F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.If(V.DataView.dtTopLevel$dtSubLevel!dvSubCheck(V.Local.iCnt).PRI_CHANGED!FieldVal,=,True,and,V.DataView.dtTopLevel$dtSubLevel!dvSubCheck(V.Local.iCnt).QTY_CHANGED!FieldVal,=,True)
			F.Intrinsic.String.Build("{0}, ",V.Local.sSQL,V.Local.sSQL)
		F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.If(V.DataView.dtTopLevel$dtSubLevel!dvSubCheck(V.Local.iCnt).QTY_CHANGED!FieldVal)
			F.Intrinsic.String.Build("{0}QTY_ORDER = {1}",V.Local.sSQL,V.DataView.dtTopLevel$dtSubLevel!dvSubCheck(V.Local.iCnt).QTY_ORDER!FieldValString,V.Local.sSQL)
		F.Intrinsic.Control.EndIf
		F.Intrinsic.String.Build("{0} where JOB = '{1}' and SUFFIX = '{2}';",V.Local.sSQL,V.DataView.dtTopLevel!dvSubCheck(V.Local.iCnt).JOB!FieldVal,V.DataView.dtTopLevel!dvSubCheck(V.Local.iCnt).SUFFIX!FieldVal,V.Local.sSQL)
		F.ODBC.Connection!con.Execute(V.Local.sSQL)
		F.Data.DataTable.AddRow("dtReschedule","JOB",V.DataView.dtTopLevel!dvSubCheck(V.Local.iCnt).JOB!FieldVal,"SUFFIX",V.DataView.dtTopLevel!dvSubCheck(V.Local.iCnt).SUFFIX!FieldVal,"DATE_START",V.DataView.dtTopLevel$dtSubLevel!dvSubCheck(V.Local.iCnt).DATE_START!FieldVal,"DATE_DUE",V.DataView.dtTopLevel$dtSubLevel!dvSubCheck(V.Local.iCnt).DATE_DUE!FieldVal)
	F.Intrinsic.Control.Next(V.Local.iCnt)
	F.Intrinsic.Control.If(V.DataView.dtWOOpsChild!dvOpsCheck.RowCount--,<,1)
		V.Local.iJobCnt.Set(1)
	F.Intrinsic.Control.Else
		V.Local.iJobCnt.Set(V.DataView.dtWOOpsChild!dvOpsCheck.RowCount--)
	F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.For(V.Local.iCnt,0,V.DataView.dtWOOpsChild!dvOpsCheck.RowCount--,1)
		F.Intrinsic.Control.CallSub(ForceDestroyLock,"Job",V.DataView.dtWOOpsChild!dvOpsCheck(V.Local.iCnt).JOB!FieldVal,"Suffix",V.DataView.dtWOOpsChild!dvOpsCheck(V.Local.iCnt).SUFFIX!FieldVal)
		'Update Operations
		F.Intrinsic.UI.ChangeWaitStatus("Committing changes to Operations.",V.Local.iCnt,0,V.Local.iJobCnt)
		V.Local.sSQL.Set("update JOB_OPERATIONS set ")
		F.Intrinsic.Control.If(V.DataView.dtWOOpsChild!dvOpsCheck(V.Local.iCnt).DESCR_CHANGED!FieldVal)
			F.Intrinsic.String.Build("{0}DESCRIPTION = '{1}'",V.Local.sSQL,V.DataView.dtWOOpsChild!dvOpsCheck(V.Local.iCnt).DESCR!FieldVal,V.Local.sSQL)
		F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.If(V.DataView.dtWOOpsChild!dvOpsCheck(V.Local.iCnt).DESCR_CHANGED!FieldVal,=,True,and,V.DataView.dtWOOpsChild!dvOpsCheck(V.Local.iCnt).QTY_CHANGED!FieldVal,=,True)
			F.Intrinsic.String.Build("{0}, ",V.Local.sSQL,V.Local.sSQL)
		F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.If(V.DataView.dtWOOpsChild!dvOpsCheck(V.Local.iCnt).QTY_CHANGED!FieldVal)
			F.Intrinsic.String.Build("{0}HOURS_ESTIMATED = {1}",V.Local.sSQL,V.DataView.dtWOOpsChild!dvOpsCheck(V.Local.iCnt).QTY_HR_EST!FieldValString,V.Local.sSQL)
		F.Intrinsic.Control.EndIf
		F.Intrinsic.String.Build("{0} where JOB = '{1}' and SUFFIX = '{2}' and SEQ = '{3}';",V.Local.sSQL,V.DataView.dtWOOpsChild!dvOpsCheck(V.Local.iCnt).JOB!FieldVal,V.DataView.dtWOOpsChild!dvOpsCheck(V.Local.iCnt).SUFFIX!FieldVal,V.DataView.dtWOOpsChild!dvOpsCheck(V.Local.iCnt).SEQ!FieldVal,V.Local.sSQL)
		F.ODBC.Connection!con.Execute(V.Local.sSQL)
		F.Data.DataTable.AddRow("dtReschedule","JOB",V.DataView.dtWOOpsChild!dvOpsCheck(V.Local.iCnt).JOB!FieldVal,"SUFFIX",V.DataView.dtWOOpsChild!dvOpsCheck(V.Local.iCnt).SUFFIX!FieldVal,"DATE_START",V.DataView.dtWOOpsChild!dvOpsCheck(V.Local.iCnt).DATE_START!FieldVal,"DATE_DUE",V.DataView.dtWOOpsChild!dvOpsCheck(V.Local.iCnt).DATE_DUE!FieldVal)
	F.Intrinsic.Control.Next(V.Local.iCnt)
	
	'TODO: Delete existing objects
	F.Data.DataView.SetFilter("dtTopLevel","dvTopCheck","[DELETED] = True")
	F.Data.DataView.SetFilter("dtTopLevel","dvSubCheck","[DELETED] = True")
	F.Data.DataView.SetFilter("dtWOOpsChild","dvOpsCheck","[DELETED] = True and [JOB_DELETED] = False")
	
	F.Intrinsic.Control.If(V.DataView.dtWOOpsChild!dvOpsCheck.RowCount--,<,1)
		V.Local.iJobCnt.Set(1)
	F.Intrinsic.Control.Else
		V.Local.iJobCnt.Set(V.DataView.dtWOOpsChild!dvOpsCheck.RowCount--)
	F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.For(V.Local.iCnt,0,V.DataView.dtWOOpsChild!dvOpsCheck.RowCount--,1)
		F.Intrinsic.Control.CallSub(ForceDestroyLock,"Job",V.DataView.dtWOOpsChild!dvOpsCheck(V.Local.iCnt).JOB!FieldVal,"Suffix",V.DataView.dtWOOpsChild!dvOpsCheck(V.Local.iCnt).SUFFIX!FieldVal)
		'Delete Operations
		F.Intrinsic.UI.ChangeWaitStatus("Committing Operation deletes.",V.Local.iCnt,0,V.Local.iJobCnt)
		F.Intrinsic.String.Build("delete from JOB_OPERATIONS where JOB = '{0}' and SUFFIX = '{1}' and SEQ = '{2}';",V.DataView.dtWOOpsChild!dvOpsCheck(V.Local.iCnt).JOB!FieldVal,V.DataView.dtWOOpsChild!dvOpsCheck(V.Local.iCnt).SUFFIX!FieldVal,V.DataView.dtWOOpsChild!dvOpsCheck(V.Local.iCnt).SEQ!FieldVal,V.Local.sSQL)
		F.ODBC.Connection!con.Execute(V.Local.sSQL)
		F.Intrinsic.String.Build("delete from WO_SEQ_COMMENTS where WO = '{0}' and WO_SUFFIX = '{1}' and SEQ = '{2}';",V.DataView.dtWOOpsChild!dvOpsCheck(V.Local.iCnt).JOB!FieldVal,V.DataView.dtWOOpsChild!dvOpsCheck(V.Local.iCnt).SUFFIX!FieldVal,V.DataView.dtWOOpsChild!dvOpsCheck(V.Local.iCnt).SEQ!FieldVal,V.Local.sSQL)
		F.ODBC.Connection!con.Execute(V.Local.sSQL)
		F.Data.DataTable.AddRow("dtReschedule","JOB",V.DataView.dtWOOpsChild!dvOpsCheck(V.Local.iCnt).JOB!FieldVal,"SUFFIX",V.DataView.dtWOOpsChild!dvOpsCheck(V.Local.iCnt).SUFFIX!FieldVal,"DATE_START",V.DataView.dtWOOpsChild!dvOpsCheck(V.Local.iCnt).DATE_START!FieldVal,"DATE_DUE",V.DataView.dtWOOpsChild!dvOpsCheck(V.Local.iCnt).DATE_DUE!FieldVal)
	F.Intrinsic.Control.Next(V.Local.iCnt)
	F.Intrinsic.Math.Add(V.DataView.dtTopLevel!dvTopCheck.RowCount--,V.DataView.dtTopLevel!dvSubCheck.RowCount--,V.Local.iJobCnt)
	F.Intrinsic.Control.If(V.Local.iJobCnt,<,1)
		V.Local.iJobCnt.Set(1)
	F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.For(V.Local.iCnt,0,V.DataView.dtTopLevel!dvTopCheck.RowCount--,1)
		F.Intrinsic.Control.CallSub(ForceDestroyLock,"Job",V.DataView.dtTopLevel!dvTopCheck(V.Local.iCnt).JOB!FieldVal,"Suffix",V.DataView.dtTopLevel!dvTopCheck(V.Local.iCnt).SUFFIX!FieldVal)
		'Delete WOS
		F.Intrinsic.UI.ChangeWaitStatus("Committing Job deletes.",V.Local.iCnt,0,V.Local.iJobCnt)
		F.Intrinsic.String.Build("delete from JOB_OPERATIONS where JOB = '{0}' and SUFFIX = '{1}';",V.DataView.dtTopLevel!dvTopCheck(V.Local.iCnt).JOB!FieldVal,V.DataView.dtTopLevel!dvTopCheck(V.Local.iCnt).SUFFIX!FieldVal,V.Local.sSQL)
		F.ODBC.Connection!con.Execute(V.Local.sSQL)
		F.Intrinsic.String.Build("delete from JOB_HEADER where JOB = '{0}' and SUFFIX = '{1}';",V.DataView.dtTopLevel!dvTopCheck(V.Local.iCnt).JOB!FieldVal,V.DataView.dtTopLevel!dvTopCheck(V.Local.iCnt).SUFFIX!FieldVal,V.Local.sSQL)
		F.ODBC.Connection!con.Execute(V.Local.sSQL)
		F.Intrinsic.String.Build("delete from JOB_COMMITMENTS where JOB = '{0}' and SUFFIX = '{1}';",V.DataView.dtTopLevel!dvTopCheck(V.Local.iCnt).JOB!FieldVal,V.DataView.dtTopLevel!dvTopCheck(V.Local.iCnt).SUFFIX!FieldVal,V.Local.sSQL)
		F.ODBC.Connection!con.Execute(V.Local.sSQL)
		F.Intrinsic.String.Build("delete from WO_SEQ_COMMENTS where WO = '{0}' and WO_SUFFIX = '{1}';",V.DataView.dtTopLevel!dvTopCheck(V.Local.iCnt).JOB!FieldVal,V.DataView.dtTopLevel!dvTopCheck(V.Local.iCnt).SUFFIX!FieldVal,V.Local.sSQL)
		F.ODBC.Connection!con.Execute(V.Local.sSQL)
		F.Intrinsic.Control.If(V.DataView.dtTopLevel!dvTopCheck(V.Local.iCnt).SUFFIX!FieldVal,=,"000")
			'Deleted a top parent WO that breaks the ability to view children WOs
			F.Intrinsic.String.Build("update JOB_HEADER set PARENT_WO = '', PARENT_SUFFIX_PARENT = '' where PARENT_WO = '{0}';",V.DataView.dtTopLevel!dvTopCheck(V.Local.iCnt).JOB!FieldVal,V.Local.sSQL)
			F.ODBC.Connection!con.Execute(V.Local.sSQL)
		F.Intrinsic.Control.EndIf
		F.Intrinsic.String.Build("[JOB] = '{0}' and [SUFFIX] = '{1}'",V.DataView.dtTopLevel!dvTopCheck(V.Local.iCnt).JOB!FieldVal,V.DataView.dtTopLevel!dvTopCheck(V.Local.iCnt).SUFFIX!FieldVal,V.Local.sFilter)
		F.Data.DataView.SetFilter("dtReschedule","dvJob",V.Local.sFilter)
		F.Data.DataView.SetValue("dtReschedule","dvJob",-1,"DELETED",True)
	F.Intrinsic.Control.Next(V.Local.iCnt)
	F.Intrinsic.Control.For(V.Local.iCnt,0,V.DataView.dtTopLevel!dvSubCheck.RowCount--,1)
		F.Intrinsic.Control.CallSub(ForceDestroyLock,"Job",V.DataView.dtTopLevel!dvSubCheck(V.Local.iCnt).JOB!FieldVal,"Suffix",V.DataView.dtTopLevel!dvSubCheck(V.Local.iCnt).SUFFIX!FieldVal)
		'Delete WOS
		F.Intrinsic.Math.Add(V.DataView.dtTopLevel!dvTopCheck.RowCount--,V.Local.iCnt,V.Local.iJobNum)
		F.Intrinsic.UI.ChangeWaitStatus("Committing Job deletes.",V.Local.iJobNum,0,V.Local.iJobCnt)
		F.Intrinsic.String.Build("delete from JOB_OPERATIONS where JOB = '{0}' and SUFFIX = '{1}';",V.DataView.dtTopLevel!dvSubCheck(V.Local.iCnt).JOB!FieldVal,V.DataView.dtTopLevel!dvSubCheck(V.Local.iCnt).SUFFIX!FieldVal,V.Local.sSQL)
		F.ODBC.Connection!con.Execute(V.Local.sSQL)
		F.Intrinsic.String.Build("delete from JOB_HEADER where JOB = '{0}' and SUFFIX = '{1}';",V.DataView.dtTopLevel!dvSubCheck(V.Local.iCnt).JOB!FieldVal,V.DataView.dtTopLevel!dvSubCheck(V.Local.iCnt).SUFFIX!FieldVal,V.Local.sSQL)
		F.ODBC.Connection!con.Execute(V.Local.sSQL)
		F.Intrinsic.String.Build("delete from JOB_COMMITMENTS where JOB = '{0}' and SUFFIX = '{1}';",V.DataView.dtTopLevel!dvSubCheck(V.Local.iCnt).JOB!FieldVal,V.DataView.dtTopLevel!dvSubCheck(V.Local.iCnt).SUFFIX!FieldVal,V.Local.sSQL)
		F.Intrinsic.String.Build("delete from WO_SEQ_COMMENTS where WO = '{0}' and WO_SUFFIX = '{1}';",V.DataView.dtTopLevel!dvSubCheck(V.Local.iCnt).JOB!FieldVal,V.DataView.dtTopLevel!dvSubCheck(V.Local.iCnt).SUFFIX!FieldVal,V.Local.sSQL)
		F.ODBC.Connection!con.Execute(V.Local.sSQL)
		F.Intrinsic.String.Build("[JOB] = '{0}' and [SUFFIX] = '{1}'",V.DataView.dtTopLevel!dvSubCheck(V.Local.iCnt).JOB!FieldVal,V.DataView.dtTopLevel!dvSubCheck(V.Local.iCnt).SUFFIX!FieldVal,V.Local.sFilter)
		F.Data.DataView.SetFilter("dtReschedule","dvJob",V.Local.sFilter)
		F.Data.DataView.SetValue("dtReschedule","dvJob",-1,"DELETED",True)
	F.Intrinsic.Control.Next(V.Local.iCnt)
	
	'TODO: Add new Operations
	F.Data.DataView.SetFilter("dtWOOpsChild","dvOpsCheck","[JOB_DELETED] = False and [ADDED] = True")
	F.Data.DataView.Create("dtAddOpsM","dvAdd")
	F.Data.DataView.Create("dtAddOpsL","dvAdd")
	F.Data.DataView.Create("dtAddOpsO","dvAdd")
	F.Data.DataView.Create("dtAddOpsC","dvAdd")
	
	F.Intrinsic.Control.If(V.DataView.dtWOOpsChild!dvOpsCheck.RowCount--,<,1)
		V.Local.iJobCnt.Set(1)
	F.Intrinsic.Control.Else
		V.Local.iJobCnt.Set(V.DataView.dtWOOpsChild!dvOpsCheck.RowCount--)
	F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.For(V.Local.iCnt,0,V.DataView.dtWOOpsChild!dvOpsCheck.RowCount--,1)
		F.Intrinsic.Control.CallSub(ForceDestroyLock,"Job",V.DataView.dtWOOpsChild!dvOpsCheck(V.Local.iCnt).JOB!FieldVal,"Suffix",V.DataView.dtWOOpsChild!dvOpsCheck(V.Local.iCnt).SUFFIX!FieldVal)
		'Add Operations
		F.Intrinsic.UI.ChangeWaitStatus("Committing Operation adds.",V.Local.iCnt,0,V.Local.iJobCnt)
		F.Intrinsic.String.Build("[JOB] = '{0}' and [SUFFIX] = '{1}' and [SEQ] = '{2}'",V.DataView.dtWOOpsChild!dvOpsCheck(V.Local.iCnt).JOB!FieldVal,V.DataView.dtWOOpsChild!dvOpsCheck(V.Local.iCnt).SUFFIX!FieldVal,V.DataView.dtWOOpsChild!dvOpsCheck(V.Local.iCnt).SEQ!FieldVal,V.Local.sFilter)
		F.Intrinsic.Control.SelectCase(V.DataView.dtWOOpsChild!dvOpsCheck(V.Local.iCnt).LMO!FieldVal)
			F.Intrinsic.Control.Case("M")
				'Insert Material Sequence
				F.Data.DataView.SetFilter("dtAddOpsM","dvAdd",V.Local.sFilter)
				F.Data.DataTable.AddRow("UPLJOBST","WorkOrderNumber",V.DataView.dtAddOpsM!dvAdd(0).JOB!FieldVal,"WorkOrderSuffix",V.DataView.dtAddOpsM!dvAdd(0).SUFFIX!FieldVal,"WorkOrderSequence",V.DataView.dtAddOpsM!dvAdd(0).SEQ!FieldVal,"OpCode",V.DataView.dtAddOpsM!dvAdd(0).OPERATION!FieldVal,"LMO","M","Description",V.DataView.dtAddOpsM!dvAdd(0).DESCRIPTION!FieldVal,"UM",V.DataView.dtAddOpsM!dvAdd(0).UM!FieldVal,"PartWCOutside",V.DataView.dtAddOpsM!dvAdd(0).PART!FieldVal,"RouterNumber",V.DataView.dtAddOpsM!dvAdd(0).ROUTER!FieldVal,"RouterSequence",V.DataView.dtAddOpsM!dvAdd(0).ROUTER_SEQ!FieldVal,"SetupTime",V.DataView.dtAddOpsM!dvAdd(0).SETUP!FieldVal,"Unit",V.DataView.dtAddOpsM!dvAdd(0).QTY!FieldVal,"StartDate",V.DataView.dtAddOpsM!dvAdd(0).START!FieldVal,"Rate",V.DataView.dtAddOpsM!dvAdd(0).RATE!FieldVal,"SortCode",V.DataView.dtAddOpsM!dvAdd(0).SORT!FieldVal,"ProjectGroup",V.DataView.dtAddOpsM!dvAdd(0).PROJ_GRP!FieldVal)
			F.Intrinsic.Control.Case("L")
				'Insert Labor Sequence
				F.Data.DataView.SetFilter("dtAddOpsL","dvAdd",V.Local.sFilter)
				F.Intrinsic.Control.If(V.DataView.dtAddOpsL!dvAdd(0).SETUP!FieldVal,>,0,and,V.DataView.dtAddOpsL!dvAdd(0).RUNTIME!FieldVal,=,0)
					V.Local.sSetupFlag.Set("Y")
				F.Intrinsic.Control.Else
					V.Local.sSetupFlag.Set("N")
				F.Intrinsic.Control.EndIf
				F.Intrinsic.Control.If(V.DataView.dtAddOpsL!dvAdd(0).COMPL_CHK!FieldVal)
					V.Local.sCompl.Set("Y")
				F.Intrinsic.Control.Else
					V.Local.sCompl.Set("N")
				F.Intrinsic.Control.EndIf
				F.Intrinsic.Control.If(V.DataView.dtAddOpsL!dvAdd(0).WORKCENTER!FieldVal,=,V.Global.sTaskWC)
					V.Local.sLMO.Set("T")
				F.Intrinsic.Control.Else
					V.Local.sLMO.Set("L")
				F.Intrinsic.Control.EndIf
				F.Data.DataTable.AddRow("UPLJOBST","WorkOrderNumber",V.DataView.dtAddOpsL!dvAdd(0).JOB!FieldVal,"WorkOrderSuffix",V.DataView.dtAddOpsL!dvAdd(0).SUFFIX!FieldVal,"WorkOrderSequence",V.DataView.dtAddOpsL!dvAdd(0).SEQ!FieldVal,"OpCode",V.DataView.dtAddOpsL!dvAdd(0).OPERATION!FieldVal,"SetupFlag",V.Local.sSetupFlag,"LMO",V.Local.sLMO,"Description",V.DataView.dtAddOpsL!dvAdd(0).DESCRIPTION!FieldVal,"UM","HR","PartWCOutside",V.DataView.dtAddOpsL!dvAdd(0).WORKCENTER!FieldVal,"RouterNumber",V.DataView.dtAddOpsL!dvAdd(0).ROUTER!FieldVal,"RouterSequence",V.DataView.dtAddOpsL!dvAdd(0).ROUTER_SEQ!FieldVal,"SetupTime",V.DataView.dtAddOpsL!dvAdd(0).SETUP!FieldVal,"EstimatedHours",V.DataView.dtAddOpsL!dvAdd(0).RUNTIME!FieldVal,"StartDate",V.DataView.dtAddOpsL!dvAdd(0).START!FieldVal,"Rate",V.DataView.dtAddOpsL!dvAdd(0).RATE!FieldVal,"SortCode",V.DataView.dtAddOpsL!dvAdd(0).SORT!FieldVal,"ProjectGroup",V.DataView.dtAddOpsL!dvAdd(0).PROJ_GRP!FieldVal,"SignoffUserOrGroup",V.DataView.dtAddOpsL!dvAdd(0).APPROVAL!FieldVal,"Overlap",V.DataView.dtAddOpsL!dvAdd(0).OVERLAP!FieldVal)
			F.Intrinsic.Control.Case("O")
				'Insert Outside Service Sequence
				F.Data.DataView.SetFilter("dtAddOpsO","dvAdd",V.Local.sFilter)
				F.Intrinsic.Math.Div(V.DataView.dtAddOpsO!dvAdd(0).LEAD!FieldVal,8,V.Local.fLead)
				F.Intrinsic.String.Split(V.Local.fLead.String,".",V.Local.sLead)
				V.Local.sLead.RedimPreserve(0,0)
				F.Intrinsic.Date.DateAddWorkdays(V.DataView.dtAddOpsO!dvAdd(0).START!FieldVal,V.Local.sLead.Long,V.Local.dOrder)
				F.Data.DataTable.AddRow("UPLJOBST","WorkOrderNumber",V.DataView.dtAddOpsO!dvAdd(0).JOB!FieldVal,"WorkOrderSuffix",V.DataView.dtAddOpsO!dvAdd(0).SUFFIX!FieldVal,"WorkOrderSequence",V.DataView.dtAddOpsO!dvAdd(0).SEQ!FieldVal,"OpCode",V.DataView.dtAddOpsO!dvAdd(0).VENDOR!FieldVal,"LMO","O","Description",V.DataView.dtAddOpsO!dvAdd(0).DESCRIPTION!FieldVal,"UM",V.DataView.dtAddOpsO!dvAdd(0).UM!FieldVal,"PartWCOutside",V.DataView.dtAddOpsO!dvAdd(0).OUTSIDE_CODE!FieldVal,"RouterNumber",V.DataView.dtAddOpsO!dvAdd(0).ROUTER!FieldVal,"RouterSequence",V.DataView.dtAddOpsO!dvAdd(0).ROUTER_SEQ!FieldVal,"SetupTime",V.DataView.dtAddOpsO!dvAdd(0).SETUP!FieldVal,"Unit",V.DataView.dtAddOpsO!dvAdd(0).UNITS!FieldVal,"StartDate",V.DataView.dtAddOpsO!dvAdd(0).START!FieldVal,"OrderDate",V.Local.dOrder,"Rate",V.DataView.dtAddOpsO!dvAdd(0).RATE!FieldVal,"SortCode",V.DataView.dtAddOpsO!dvAdd(0).SORT!FieldVal,"ProjectGroup",V.DataView.dtAddOpsO!dvAdd(0).PROJ_GRP!FieldVal)
			F.Intrinsic.Control.Case("C")
				'Insert Comment Sequence
				F.Data.DataView.SetFilter("dtAddOpsC","dvAdd",V.Local.sFilter)
				F.Data.DataTable.AddRow("UPLJOBST","WorkOrderNumber",V.DataView.dtAddOpsC!dvAdd(0).JOB!FieldVal,"WorkOrderSuffix",V.DataView.dtAddOpsC!dvAdd(0).SUFFIX!FieldVal,"WorkOrderSequence",V.DataView.dtAddOpsC!dvAdd(0).SEQ!FieldVal,"OpCode",V.DataView.dtAddOpsC!dvAdd(0).OPERATION!FieldVal,"LMO","C","Description",V.DataView.dtAddOpsC!dvAdd(0).DESCRIPTION!FieldVal,"RouterNumber",V.DataView.dtAddOpsC!dvAdd(0).ROUTER!FieldVal,"RouterSequence",V.DataView.dtAddOpsC!dvAdd(0).ROUTER_SEQ!FieldVal)
		F.Intrinsic.Control.EndSelect
		F.Data.DataTable.AddRow("dtReschedule","JOB",V.DataView.dtWOOpsChild!dvOpsCheck(V.Local.iCnt).JOB!FieldVal,"SUFFIX",V.DataView.dtWOOpsChild!dvOpsCheck(V.Local.iCnt).SUFFIX!FieldVal,"DATE_START",V.DataView.dtWOOpsChild!dvOpsCheck(V.Local.iCnt).DATE_START!FieldVal,"DATE_DUE",V.DataView.dtWOOpsChild!dvOpsCheck(V.Local.iCnt).DATE_DUE!FieldVal)
	F.Intrinsic.Control.Next(V.Local.iCnt)
	F.ODBC.Connection!con.Close
	
	F.Intrinsic.Control.CallSub(UPLJOBST)
	
	'TODO: Reschedule affected Jobs
	F.Data.DataView.SetFilter("dtReschedule","dvJob","[DELETED] = False")
	F.Data.DataView.ToDataTableDistinct("dtReschedule","dvJob","dtRescheduleJobs","JOB*!*SUFFIX*!*DATE_START*!*DATE_DUE",True)
	F.Data.DataTable.Close("dtReschedule")
	F.Intrinsic.Control.CallSub(RescheduleJobs)
	
	F.Data.DataTable.Close("dtTopLevel$dtSubLevel")
	F.Data.DataTable.Close("dtTopLevel")
	F.Data.DataTable.Close("dtWOOpsChild")
	F.Data.DataTable.Close("dtNotes$dtJobList")
	F.Data.DataTable.Close("dtNotes")
	F.Data.DataTable.Close("dtAddOpsM")
	F.Data.DataTable.Close("dtAddOpsL")
	F.Data.DataTable.Close("dtAddOpsO")
	F.Data.DataTable.Close("dtAddOpsC")
	'Destroy all session's locks
	F.Intrinsic.String.Build("delete from X_LOCK_FILE where LOCK_TYPE = 'WO' and COMPANY = '{0}' and USER_ID = '{1}' and PGM like 'octsrs.net.exe' and REF like 'GCG_5896_WorkOrder_Dashboard.g2u';",V.Caller.CompanyCode,V.Caller.User,V.Local.sSQL)
	F.ODBC.Connection!con.OpenCompanyConnection
	F.ODBC.Connection!con.Execute(V.Local.sSQL)
	F.ODBC.Connection!con.Close
	F.Intrinsic.Control.CallSub(cmdRefresh_Click)
	
	Gui.F_WO_Dash..Enabled(True)
	Gui.F_WO_Dash..SetFocus
F.Intrinsic.Control.Else
	F.Intrinsic.UI.Msgbox("No Work Orders or Operations to update.","CANCELLING UPDATE")
	
	F.Data.DataView.Close("dtTopLevel","dvTopCheck")
	F.Data.DataView.Close("dtTopLevel","dvSubCheck")
	F.Data.DataView.Close("dtWOOpsChild","dvOpsCheck")
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.UnBlockEvents

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage,"ScriptFile",V.Caller.ScriptFile,"CurrentSubroutine",V.Ambient.CurrentSubroutine)
	F.Intrinsic.Control.CallSub(F_WO_Dash_UnLoad)
F.Intrinsic.Control.EndTry
Program.Sub.cmdUpdate_Click.End

Program.Sub.cmdAddNew_Click.Start
F.Intrinsic.Control.Try

F.Intrinsic.Control.If(V.DataView.dtWOOpsChild!dvWO(0).JOB_DELETED!FieldVal)
	'job has been deleted so don't let user add sequences for consistency in program
	F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.EndIf

Gui.F_Ops_Dash..Enabled(False)

Gui.F_New_Op..Show
Gui.F_New_Op..SetFocus

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage,"ScriptFile",V.Caller.ScriptFile,"CurrentSubroutine",V.Ambient.CurrentSubroutine)
	F.Intrinsic.Control.CallSub(F_WO_Dash_UnLoad)
F.Intrinsic.Control.EndTry
Program.Sub.cmdAddNew_Click.End

Program.Sub.gsgcWOs_ExportJobs.Start
V.Local.sForm.Declare(String, "F_WO_Dash")
V.Local.sControl.Declare(String, "gsgcWOs")
V.Local.sFileExport.Declare
V.Local.sMsg.Declare
V.Local.sDate.Declare
V.Local.sTime.Declare
V.Local.bExcel.Declare
V.Local.bFileLocked.Declare
F.Intrinsic.Control.Try

F.Intrinsic.Control.If(V.DataTable.dtTopLevel.Exists,=,False)
	F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.EndIf

'Arc Number - 5896
F.Automation.MSExcel.CheckPresence(V.Local.bExcel)
F.Intrinsic.String.DateString(V.Ambient.Date,V.Local.sDate)
F.Intrinsic.String.TimeString(V.Ambient.Time,V.Local.sTime)
F.Intrinsic.Control.If(V.Local.bExcel)
	F.Intrinsic.String.Build("{0}\GCG_5896_{1}_ExportMaster_{2}_{3}.xlsx",V.Caller.LocalGSSTempDir,V.Local.sControl,V.Local.sDate,V.Local.sTime,V.Local.sFileExport)
	F.Intrinsic.File.IsFileLocked(V.Local.sFileExport,V.Local.bFileLocked)
	F.Intrinsic.Control.If(V.Local.bFileLocked)
		F.Intrinsic.String.Build("File is already open. Please close and export again.{0}File : {1}",V.Ambient.NewLine,V.Local.sFileExport,V.Local.sMsg)
		F.Intrinsic.UI.Msgbox(V.Local.sMsg,"File In Use")
	F.Intrinsic.Control.Else
		Gui.[V.Local.sForm].[V.Local.sControl].ExportDetails("xlsx",V.Local.sFileExport,1)
		F.Intrinsic.Task.ShellExec(0,"",V.Local.sFileExport,"","",1)
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.Else
	F.Intrinsic.String.Build("GCG_5896_{1}_ExportMaster_{2}_{3}.csv",V.Caller.LocalGssTempDir,V.Local.sControl,V.Local.sDate,V.Local.sTime,V.Local.sFileExport)
	F.Intrinsic.UI.ShowSaveFileDialog(V.Local.sFileExport,"CSV|*.csv",V.Local.sFileExport)
	F.Intrinsic.Control.If(V.Local.sFileExport.IsCancel)
		F.Intrinsic.Control.ExitSub
	F.Intrinsic.Control.EndIf
'	F.Intrinsic.String.Build("{0}\GCG_5896_{1}_Export_{2}_{3}.csv",V.Caller.LocalGssTempDir,V.Local.sControl,V.Local.sDate,V.Local.sTime,V.Local.sFileExport)
	F.Intrinsic.File.IsFileLocked(V.Local.sFileExport,V.Local.bFileLocked)
	F.Intrinsic.Control.If(V.Local.bFileLocked)
		F.Intrinsic.String.Build("File is already open. Please close and export again.{0}File: {1}",V.Ambient.NewLine,V.Local.sFileExport,V.Local.sMsg)
		F.Intrinsic.UI.Msgbox(V.Local.sMsg,"File In Use")
	F.Intrinsic.Control.Else
		Gui.[V.Local.sForm].[V.Local.sControl].ExportDetails("csv",,V.Local.sFileExport,2)
	F.Intrinsic.Control.EndIf
'	F.Intrinsic.Task.ShellExec(0,"",V.Local.sFileExport,"","",1)
F.Intrinsic.Control.EndIf

'Now do the Child View
'Gui.F_WO_Dash.gsgcWOs.MainView("gvSubLevel")
'F.Intrinsic.Control.If(V.Local.bExcel)
'	F.Intrinsic.String.Build("{0}\GCG_5896_{1}_ExportChild_{2}_{3}.xlsx",V.Caller.LocalGSSTempDir,V.Local.sControl,V.Local.sDate,V.Local.sTime,V.Local.sFileExport)
'	F.Intrinsic.File.IsFileLocked(V.Local.sFileExport,V.Local.bFileLocked)
'	F.Intrinsic.Control.If(V.Local.bFileLocked)
'		F.Intrinsic.String.Build("File is already open. Please close and export again.{0}File : {1}",V.Ambient.NewLine,V.Local.sFileExport,V.Local.sMsg)
'		F.Intrinsic.UI.Msgbox(V.Local.sMsg,"File In Use")
'	F.Intrinsic.Control.Else
'		Gui.[V.Local.sForm].[V.Local.sControl].Export(V.Local.sFileExport,"xlsx")
'		F.Intrinsic.Task.ShellExec(0,"",V.Local.sFileExport,"","",1)
'	F.Intrinsic.Control.EndIf
'F.Intrinsic.Control.Else
'	F.Intrinsic.String.Build("GCG_5896_{1}_ExportChild_{2}_{3}.csv",V.Caller.LocalGssTempDir,V.Local.sControl,V.Local.sDate,V.Local.sTime,V.Local.sFileExport)
'	F.Intrinsic.UI.ShowSaveFileDialog(V.Local.sFileExport,"CSV|*.csv",V.Local.sFileExport)
'	F.Intrinsic.Control.If(V.Local.sFileExport.IsCancel)
'		F.Intrinsic.Control.ExitSub
'	F.Intrinsic.Control.EndIf
''	F.Intrinsic.String.Build("{0}\GCG_5896_{1}_Export_{2}_{3}.csv",V.Caller.LocalGssTempDir,V.Local.sControl,V.Local.sDate,V.Local.sTime,V.Local.sFileExport)
'	F.Intrinsic.File.IsFileLocked(V.Local.sFileExport,V.Local.bFileLocked)
'	F.Intrinsic.Control.If(V.Local.bFileLocked)
'		F.Intrinsic.String.Build("File is already open. Please close and export again.{0}File: {1}",V.Ambient.NewLine,V.Local.sFileExport,V.Local.sMsg)
'		F.Intrinsic.UI.Msgbox(V.Local.sMsg,"File In Use")
'	F.Intrinsic.Control.Else
'		Gui.[V.Local.sForm].[V.Local.sControl].Export(V.Local.sFileExport,"csv")
'	F.Intrinsic.Control.EndIf
''	F.Intrinsic.Task.ShellExec(0,"",V.Local.sFileExport,"","",1)
'F.Intrinsic.Control.EndIf

'Gui.F_WO_Dash.gsgcWOs.MainView("gvTopLevel")

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage,"ScriptFile",V.Caller.ScriptFile,"CurrentSubroutine",V.Ambient.CurrentSubroutine)
	F.Intrinsic.Control.CallSub(F_WO_Dash_UnLoad)
F.Intrinsic.Control.EndTry
Program.Sub.gsgcWOs_ExportJobs.End

Program.Sub.gsgcOps_ExportOps.Start
V.Local.sForm.Declare(String, "F_Ops_Dash")
V.Local.sControl.Declare(String, "gsgcOps")
V.Local.sFileExport.Declare
V.Local.sMsg.Declare
V.Local.sDate.Declare
V.Local.sTime.Declare
V.Local.bExcel.Declare
V.Local.bFileLocked.Declare
F.Intrinsic.Control.Try

'Arc Number - 5896
F.Automation.MSExcel.CheckPresence(V.Local.bExcel)
F.Intrinsic.String.DateString(V.Ambient.Date,V.Local.sDate)
F.Intrinsic.String.TimeString(V.Ambient.Time,V.Local.sTime)
F.Intrinsic.Control.If(V.Local.bExcel)
	F.Intrinsic.String.Build("{0}\GCG_5896_{1}_Export_{2}_{3}.xlsx",V.Caller.LocalGSSTempDir,V.Local.sControl,V.Local.sDate,V.Local.sTime,V.Local.sFileExport)
	F.Intrinsic.File.IsFileLocked(V.Local.sFileExport,V.Local.bFileLocked)
	F.Intrinsic.Control.If(V.Local.bFileLocked)
		F.Intrinsic.String.Build("File is already open. Please close and export again.{0}File : {1}",V.Ambient.NewLine,V.Local.sFileExport,V.Local.sMsg)
		F.Intrinsic.UI.Msgbox(V.Local.sMsg,"File In Use")
	F.Intrinsic.Control.Else
		Gui.[V.Local.sForm].[V.Local.sControl].Export(V.Local.sFileExport,"xlsx")
		F.Intrinsic.Task.ShellExec(0,"",V.Local.sFileExport,"","",1)
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.Else
	F.Intrinsic.String.Build("{0}\GCG_5896_{1}_Export_{2}_{3}.csv",V.Caller.LocalGssTempDir,V.Local.sControl,V.Local.sDate,V.Local.sTime,V.Local.sFileExport)
	F.Intrinsic.File.IsFileLocked(V.Local.sFileExport,V.Local.bFileLocked)
	F.Intrinsic.Control.If(V.Local.bFileLocked)
		F.Intrinsic.String.Build("File is already open. Please close and export again.{0}File: {1}",V.Ambient.NewLine,V.Local.sFileExport,V.Local.sMsg)
		F.Intrinsic.UI.Msgbox(V.Local.sMsg,"File In Use")
	F.Intrinsic.Control.Else
		Gui.[V.Local.sForm].[V.Local.sControl].Export(V.Local.sFileExport,"csv")
	F.Intrinsic.Control.EndIf
	F.Intrinsic.Task.ShellExec(0,"",V.Local.sFileExport,"","",1)
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage,"ScriptFile",V.Caller.ScriptFile,"CurrentSubroutine",V.Ambient.CurrentSubroutine)
	F.Intrinsic.Control.CallSub(F_WO_Dash_UnLoad)
F.Intrinsic.Control.EndTry
Program.Sub.gsgcOps_ExportOps.End

Program.Sub.F_New_Op_UnLoad.Start
F.Intrinsic.Control.Try

Gui.F_New_Op..Visible(False)

Gui.F_Ops_Dash..Enabled(True)
Gui.F_Ops_Dash..SetFocus

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage,"ScriptFile",V.Caller.ScriptFile,"CurrentSubroutine",V.Ambient.CurrentSubroutine)
	F.Intrinsic.Control.CallSub(F_WO_Dash_UnLoad)
F.Intrinsic.Control.EndTry
Program.Sub.F_New_Op_UnLoad.End

Program.Sub.txtSeq_LostFocus.Start
V.Local.sSeq.Declare
F.Intrinsic.Control.Try

F.Intrinsic.Control.If(V.Screen.F_New_Op!txtSeq.Text,>=,"995000")
	Gui.F_New_Op.txtSeq.Text("000000")
F.Intrinsic.Control.EndIf

F.Intrinsic.String.LPad(V.Screen.F_New_Op!txtSeq.Text.Trim,"0",6,V.Local.sSeq)
Gui.F_New_Op.txtSeq.Text(V.Local.sSeq)

F.Intrinsic.Control.If(V.Screen.F_New_Op!ddlOpType.Text,=,"Router Seq",and,V.DataTable.dtRouterP.Exists,=,True)
	F.Intrinsic.Control.CallSub(UpdateRouterPreview)
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage,"ScriptFile",V.Caller.ScriptFile,"CurrentSubroutine",V.Ambient.CurrentSubroutine)
	F.Intrinsic.Control.CallSub(F_WO_Dash_UnLoad)
F.Intrinsic.Control.EndTry
Program.Sub.txtSeq_LostFocus.End

Program.Sub.cmdPartBRW_Click.Start
V.Local.sRet.Declare
V.Local.sPartRet.Declare
V.Local.sRate.Declare
V.Local.iLead.Declare
F.Intrinsic.Control.Try

F.Intrinsic.Control.BlockEvents

F.Intrinsic.UI.Browser(105,"",V.Local.sRet)

F.Intrinsic.Control.If(V.Local.sRet.IsNotCancel)
	F.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)
	'Index 0 is Part, Index 1 is Location
	
	F.Global.Inventory.GetPartInfo(V.Local.sRet(0),V.Local.sRet(1),V.Local.sPartRet)
	F.Intrinsic.String.Split(V.Local.sPartRet,"*!*",V.Local.sPartRet)
	'Index 1 is Descr, Index 2 is UM, Index 4 is Cost (Rate), Index 6 is Sort Code, Index 7 is Lead Time
	F.Intrinsic.Math.Mult(V.Local.sPartRet(7).Long,8,V.Local.iLead)
	F.Intrinsic.String.Format(V.Local.sPartRet(4).Float,"#.0000",V.Local.sRate)
	
	Gui.F_New_Op.txtPart.Text(V.Local.sRet(0).Trim)
	Gui.F_New_Op.txtDescr.Text(V.Local.sPartRet(1).Trim)
	Gui.F_New_Op.txtMUM.Text(V.Local.sPartRet(2).Trim)
	Gui.F_New_Op.txtSort.Text(V.Local.sPartRet(6).Trim)
	F.Intrinsic.Control.If(V.Local.sRate.Float,>,0)
		Gui.F_New_Op.txtRate.Text(V.Local.sRate)
	F.Intrinsic.Control.Else
		Gui.F_New_Op.txtRate.Text("")
	F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.If(V.Local.iLead,>,0)
		Gui.F_New_Op.txtMLead.Text(V.Local.iLead.String)
	F.Intrinsic.Control.Else
		Gui.F_New_Op.txtMLead.Text("")
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.UnBlockEvents

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage,"ScriptFile",V.Caller.ScriptFile,"CurrentSubroutine",V.Ambient.CurrentSubroutine)
	F.Intrinsic.Control.CallSub(F_WO_Dash_UnLoad)
F.Intrinsic.Control.EndTry
Program.Sub.cmdPartBRW_Click.End

Program.Sub.txtPart_LostFocus.Start
V.Local.sRet.Declare
V.Local.sRate.Declare
V.Local.iLead.Declare
F.Intrinsic.Control.Try

F.Intrinsic.Control.BlockEvents

F.Global.Inventory.GetPartInfo(V.Screen.F_New_Op!txtPart.Text,"",V.Local.sRet)

F.Intrinsic.Control.If(V.Local.sRet,!=,"***NOPARTFOUND***")
	F.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)
	'Index 1 is Descr, Index 2 is UM, Index 4 is Cost (Rate), Index 6 is Sort Code, Index 7 is Lead Time
	F.Intrinsic.Math.Mult(V.Local.sRet(7).Long,8,V.Local.iLead)
	F.Intrinsic.String.Format(V.Local.sRet(4).Float,"#.0000",V.Local.sRate)
	
	Gui.F_New_Op.txtDescr.Text(V.Local.sRet(1).Trim)
	Gui.F_New_Op.txtMUM.Text(V.Local.sRet(2).Trim)
	Gui.F_New_Op.txtSort.Text(V.Local.sRet(6).Trim)
	F.Intrinsic.Control.If(V.Local.sRate.Float,>,0)
		Gui.F_New_Op.txtRate.Text(V.Local.sRate)
	F.Intrinsic.Control.Else
		Gui.F_New_Op.txtRate.Text("")
	F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.If(V.Local.iLead,>,0)
		Gui.F_New_Op.txtMLead.Text(V.Local.iLead.String)
	F.Intrinsic.Control.Else
		Gui.F_New_Op.txtMLead.Text("")
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.UnBlockEvents

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage,"ScriptFile",V.Caller.ScriptFile,"CurrentSubroutine",V.Ambient.CurrentSubroutine)
	F.Intrinsic.Control.CallSub(F_WO_Dash_UnLoad)
F.Intrinsic.Control.EndTry
Program.Sub.txtPart_LostFocus.End

Program.Sub.txtMinDol_LostFocus.Start
V.Local.fMin.Declare
F.Intrinsic.Control.Try

V.Local.fMin.Set(V.Screen.F_New_Op!txtMinDol.Text)
F.Intrinsic.Control.If(V.Local.fMin,<=,0)
	Gui.F_New_Op.txtMinDol.Text("")
F.Intrinsic.Control.ElseIf(V.Local.fMin,>=,100000000)
	Gui.F_New_Op.txtMinDol.Text("99999999.99")
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage,"ScriptFile",V.Caller.ScriptFile,"CurrentSubroutine",V.Ambient.CurrentSubroutine)
	F.Intrinsic.Control.CallSub(F_WO_Dash_UnLoad)
F.Intrinsic.Control.EndTry
Program.Sub.txtMinDol_LostFocus.End

Program.Sub.txt10milF_LostFocus.Start
V.Local.fVal.Declare
F.Intrinsic.Control.Try

V.Local.fVal.Set(V.Screen.[V.Args.Screen]![V.Args.ControlName].Text)
F.Intrinsic.Control.If(V.Local.fVal,<=,0)
	Gui.[V.Args.Screen].[V.Args.ControlName].Text("")
F.Intrinsic.Control.ElseIf(V.Local.fVal,>=,10000000)
	Gui.[V.Args.Screen].[V.Args.ControlName].Text("9999999.9999")
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage,"ScriptFile",V.Caller.ScriptFile,"CurrentSubroutine",V.Ambient.CurrentSubroutine)
	F.Intrinsic.Control.CallSub(F_WO_Dash_UnLoad)
F.Intrinsic.Control.EndTry
Program.Sub.txt10milF_LostFocus.End

Program.Sub.cmdProjGrpBRW_Click.Start
V.Local.sRet.Declare
F.Intrinsic.Control.Try

F.ODBC.Connection!con.OpenCompanyConnection
F.Intrinsic.UI.Browser("Project Groups","con","select F_GROUP, DESCR from V_PROJECT_GROUP order by F_GROUP;","Group*!*Description","25*!*50",V.Local.sRet)
F.ODBC.Connection!con.Close

F.Intrinsic.Control.If(V.Local.sRet.IsNotCancel)
	F.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)
	
	Gui.F_New_Op.txtProjGrp.Text(V.Local.sRet(0).Trim)
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage,"ScriptFile",V.Caller.ScriptFile,"CurrentSubroutine",V.Ambient.CurrentSubroutine)
	F.Intrinsic.Control.CallSub(F_WO_Dash_UnLoad)
F.Intrinsic.Control.EndTry
Program.Sub.cmdProjGrpBRW_Click.End

Program.Sub.ddlOpType_Click.Start
F.Intrinsic.Control.Try

Gui.F_New_Op..ClearGroup(1)
Gui.F_New_Op.chkMTooling.Value(0)
Gui.F_New_Op.chkMNoPO.Value(0)
Gui.F_New_Op.chkCompletion.Value(0)

F.Intrinsic.Control.If(V.DataTable.dtRouterP.Exists)
	F.Data.DataTable.Close("dtRouterP")
	Gui.F_New_Op.gsgcRouterSeq.MainView("gvBlank")
F.Intrinsic.Control.EndIf
F.Intrinsic.Control.CallSub(NewOpHideAll)
F.Intrinsic.Control.SelectCase(V.Screen.F_New_Op!ddlOpType.Text)
	F.Intrinsic.Control.Case("Material")
		Gui.F_New_Op.lblPart.Visible(True)
		Gui.F_New_Op.txtPart.Visible(True)
		Gui.F_New_Op.cmdPartBRW.Visible(True)
		Gui.F_New_Op.lblOper.Visible(True)
		Gui.F_New_Op.txtOper.Visible(True)
		Gui.F_New_Op.cmdOperBRW.Visible(True)
		Gui.F_New_Op.lblDescr.Visible(True)
		Gui.F_New_Op.txtDescr.Visible(True)
'		Gui.F_New_Op.cmdDescrBRW.Visible(True)
		Gui.F_New_Op.lblMUM.Visible(True)
		Gui.F_New_Op.txtMUM.Visible(True)
		Gui.F_New_Op.cmdMUMBRW.Visible(True)
		Gui.F_New_Op.lblMLead.Visible(True)
		Gui.F_New_Op.txtMLead.Visible(True)
		Gui.F_New_Op.lblMinDol.Visible(True)
		Gui.F_New_Op.txtMinDol.Visible(True)
		Gui.F_New_Op.lblMSetup.Visible(True)
		Gui.F_New_Op.txtSetup.Visible(True)
		Gui.F_New_Op.lblFreq.Visible(True)
		Gui.F_New_Op.txtFreq.Visible(True)
		Gui.F_New_Op.lblMQty2M.Visible(True)
		Gui.F_New_Op.txtMQty2M.Visible(True)
		Gui.F_New_Op.lblRate.Visible(True)
		Gui.F_New_Op.txtRate.Visible(True)
		Gui.F_New_Op.lblStart.Visible(True)
		Gui.F_New_Op.dtpStart.Visible(True)
		Gui.F_New_Op.lblProjGrp.Visible(True)
		Gui.F_New_Op.txtProjGrp.Visible(True)
		Gui.F_New_Op.cmdProjGrpBRW.Visible(True)
		Gui.F_New_Op.lblSort.Visible(True)
		Gui.F_New_Op.txtSort.Visible(True)
		Gui.F_New_Op.chkMTooling.Visible(True)
		Gui.F_New_Op.chkMNoPO.Visible(True)
		Gui.F_New_Op..Size(10440,3555)
	F.Intrinsic.Control.Case("Labor")
		Gui.F_New_Op.lblLWC.Visible(True)
		Gui.F_New_Op.txtLWC.Visible(True)
		Gui.F_New_Op.cmdLWCBRW.Visible(True)
		Gui.F_New_Op.lblOper.Visible(True)
		Gui.F_New_Op.txtOper.Visible(True)
		Gui.F_New_Op.cmdOperBRW.Visible(True)
		Gui.F_New_Op.lblDescr.Visible(True)
		Gui.F_New_Op.txtDescr.Visible(True)
'		Gui.F_New_Op.cmdDescrBRW.Visible(True)
		Gui.F_New_Op.lblLOver.Visible(True)
		Gui.F_New_Op.txtLOver.Visible(True)
		Gui.F_New_Op.lblLWCFact.Visible(True)
		Gui.F_New_Op.txtLWCFact.Visible(True)
		Gui.F_New_Op.lblLRuntime.Visible(True)
		Gui.F_New_Op.txtLRuntime.Visible(True)
		Gui.F_New_Op.lblLCrew.Visible(True)
		Gui.F_New_Op.txtLCrew.Visible(True)
		Gui.F_New_Op.lblLSetup.Visible(True)
		Gui.F_New_Op.txtSetup.Visible(True)
		Gui.F_New_Op.lblFreq.Visible(True)
		Gui.F_New_Op.txtFreq.Visible(True)
		Gui.F_New_Op.lblLType.Visible(True)
		Gui.F_New_Op.txtLType.Visible(True)
		Gui.F_New_Op.lblRate.Visible(True)
		Gui.F_New_Op.txtRate.Visible(True)
		Gui.F_New_Op.lblStart.Visible(True)
		Gui.F_New_Op.dtpStart.Visible(True)
		Gui.F_New_Op.lblProjGrp.Visible(True)
		Gui.F_New_Op.txtProjGrp.Visible(True)
		Gui.F_New_Op.cmdProjGrpBRW.Visible(True)
		Gui.F_New_Op.lblSort.Visible(True)
		Gui.F_New_Op.txtSort.Visible(True)
		Gui.F_New_Op..Size(10440,3555)
	F.Intrinsic.Control.Case("Outside")
		Gui.F_New_Op.lblOuts.Visible(True)
		Gui.F_New_Op.txtPart.Visible(True)
		Gui.F_New_Op.cmdOutsBRW.Visible(True)
		Gui.F_New_Op.lblOVend.Visible(True)
		Gui.F_New_Op.txtOVend.Visible(True)
		Gui.F_New_Op.cmdOVendBRW.Visible(True)
		Gui.F_New_Op.lblDescr.Visible(True)
		Gui.F_New_Op.txtDescr.Visible(True)
'		Gui.F_New_Op.cmdDescrBRW.Visible(True)
		Gui.F_New_Op.lblOUM.Visible(True)
		Gui.F_New_Op.txtOUM.Visible(True)
		Gui.F_New_Op.cmdOUMBRW.Visible(True)
		Gui.F_New_Op.lblOLead.Visible(True)
		Gui.F_New_Op.txtOLead.Visible(True)
		Gui.F_New_Op.lblMinDol.Visible(True)
		Gui.F_New_Op.txtMinDol.Visible(True)
		Gui.F_New_Op.lblOSetup.Visible(True)
		Gui.F_New_Op.txtSetup.Visible(True)
		Gui.F_New_Op.lblFreq.Visible(True)
		Gui.F_New_Op.txtFreq.Visible(True)
		Gui.F_New_Op.lblOUnits.Visible(True)
		Gui.F_New_Op.txtOUnits.Visible(True)
		Gui.F_New_Op.lblRate.Visible(True)
		Gui.F_New_Op.txtRate.Visible(True)
		Gui.F_New_Op.lblStart.Visible(True)
		Gui.F_New_Op.dtpStart.Visible(True)
		Gui.F_New_Op.lblProjGrp.Visible(True)
		Gui.F_New_Op.txtProjGrp.Visible(True)
		Gui.F_New_Op.cmdProjGrpBRW.Visible(True)
		Gui.F_New_Op.lblSort.Visible(True)
		Gui.F_New_Op.txtSort.Visible(True)
		Gui.F_New_Op..Size(10440,3555)
	F.Intrinsic.Control.Case("Comment")
		Gui.F_New_Op.lblOper.Visible(True)
		Gui.F_New_Op.txtOper.Visible(True)
		Gui.F_New_Op.cmdOperBRW.Visible(True)
		Gui.F_New_Op.lblComments.Visible(True)
		Gui.F_New_Op.txtDescr.Visible(True)
'		Gui.F_New_Op.cmdDescrBRW.Visible(True)
	F.Intrinsic.Control.Case("Task")
		F.Intrinsic.Control.If(V.Global.sTaskWC,=,"")
			F.Intrinsic.UI.Msgbox("Task Workcenter is not setup in System Support > Administration > Company Options (Advanced) > Manufacturing.")
		F.Intrinsic.Control.Else
			Gui.F_New_Op.lblTask.Visible(True)
			Gui.F_New_Op.txtOper.Visible(True)
			Gui.F_New_Op.cmdOperBRW.Visible(True)
			Gui.F_New_Op.lblTSignoff.Visible(True)
			Gui.F_New_Op.txtTSignoff.Visible(True)
			Gui.F_New_Op.cmdTSignoffBRW.Visible(True)
			Gui.F_New_Op.txtDescr.Visible(True)
			Gui.F_New_Op.lblDescr.Visible(True)
			Gui.F_New_Op.lblLOver.Visible(True)
			Gui.F_New_Op.txtLOver.Visible(True)
			Gui.F_New_Op.txtProjGrp.Visible(True)
			Gui.F_New_Op.lblProjGrp.Visible(True)
			Gui.F_New_Op.cmdProjGrpBRW.Visible(True)
			Gui.F_New_Op.dtpStart.Visible(True)
			Gui.F_New_Op.lblStart.Visible(True)
			Gui.F_New_Op.lblSort.Visible(True)
			Gui.F_New_Op.txtSort.Visible(True)
			Gui.F_New_Op.txtDuration.Visible(True)
			Gui.F_New_Op.lblDuration.Visible(True)
			Gui.F_New_Op.chkCompletion.Visible(True)
			Gui.F_New_Op..Size(10440,3555)
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.Case("Router Seq")
		Gui.F_New_Op.lblRouter.Visible(True)
		Gui.F_New_Op.txtPart.Visible(True)
		Gui.F_New_Op.txtPart.Locked(True)
		Gui.F_New_Op.cmdRouterBRW.Visible(True)
		Gui.F_New_Op.lblFrom.Visible(True)
		Gui.F_New_Op.txtRouterBeg.Visible(True)
		Gui.F_New_Op.cmdRouterBegBRW.Visible(True)
		Gui.F_New_Op.lblThru.Visible(True)
		Gui.F_New_Op.txtRouterEnd.Visible(True)
		Gui.F_New_Op.cmdRouterEndBRW.Visible(True)
		Gui.F_New_Op.gsgcRouterSeq.Visible(True)
		Gui.F_New_Op..Size(10440,7095)
F.Intrinsic.Control.EndSelect

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage,"ScriptFile",V.Caller.ScriptFile,"CurrentSubroutine",V.Ambient.CurrentSubroutine)
	F.Intrinsic.Control.CallSub(F_WO_Dash_UnLoad)
F.Intrinsic.Control.EndTry
Program.Sub.ddlOpType_Click.End

Program.Sub.txtLCrew_LostFocus.Start
V.Local.fCrewSize.Declare
F.Intrinsic.Control.Try

V.Local.fCrewSize.Set(V.Screen.F_New_Op!txtLCrew.Text)
F.Intrinsic.Control.If(V.Local.fCrewSize,<=,0)
	Gui.F_New_Op.txtLCrew.Text("")
F.Intrinsic.Control.ElseIf(V.Local.fCrewSize,>=,10000)
	Gui.F_New_Op.txtLCrew.Text("9999.9999")
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage,"ScriptFile",V.Caller.ScriptFile,"CurrentSubroutine",V.Ambient.CurrentSubroutine)
	F.Intrinsic.Control.CallSub(F_WO_Dash_UnLoad)
F.Intrinsic.Control.EndTry
Program.Sub.txtLCrew_LostFocus.End

Program.Sub.SetNewOpDefaultValues.Start
F.Intrinsic.Control.Try

Gui.F_New_Op.txtPart.DefaultValue("")
Gui.F_New_Op.txtLWC.DefaultValue("")
Gui.F_New_Op.txtOper.DefaultValue("")
Gui.F_New_Op.txtOVend.DefaultValue("")
Gui.F_New_Op.txtDescr.DefaultValue("")
Gui.F_New_Op.txtMUM.DefaultValue("")
Gui.F_New_Op.txtMLead.DefaultValue("")
Gui.F_New_Op.txtOUM.DefaultValue("")
Gui.F_New_Op.txtOLead.DefaultValue("")
Gui.F_New_Op.txtMinDol.DefaultValue("")
Gui.F_New_Op.txtLOver.DefaultValue("")
Gui.F_New_Op.txtLRuntime.DefaultValue("")
Gui.F_New_Op.txtLCrew.DefaultValue("")
Gui.F_New_Op.txtSetup.DefaultValue("")
Gui.F_New_Op.txtFreq.DefaultValue("")
Gui.F_New_Op.txtMQty2M.DefaultValue("")
Gui.F_New_Op.txtRate.DefaultValue("")
Gui.F_New_Op.txtOUnits.DefaultValue("")
Gui.F_New_Op.dtpStart.DefaultValue(V.Ambient.Date)
Gui.F_New_Op.txtProjGrp.DefaultValue("")
Gui.F_New_Op.txtSort.DefaultValue("")
Gui.F_New_Op.txtTSignoff.DefaultValue("")
Gui.F_New_Op.txtDuration.DefaultValue("")

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage,"ScriptFile",V.Caller.ScriptFile,"CurrentSubroutine",V.Ambient.CurrentSubroutine)
	F.Intrinsic.Control.CallSub(F_WO_Dash_UnLoad)
F.Intrinsic.Control.EndTry
Program.Sub.SetNewOpDefaultValues.End

Program.Sub.txtLWCFact_LostFocus.Start
F.Intrinsic.Control.Try

F.Intrinsic.Control.If(V.Screen.F_New_Op!txtLWCFact.Text,=,"0",or,V.Screen.F_New_Op!txtLWCFact.Text.Trim,=,"")
	Gui.F_New_Op.txtLWCFact.Text("1")
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage,"ScriptFile",V.Caller.ScriptFile,"CurrentSubroutine",V.Ambient.CurrentSubroutine)
	F.Intrinsic.Control.CallSub(F_WO_Dash_UnLoad)
F.Intrinsic.Control.EndTry
Program.Sub.txtLWCFact_LostFocus.End

Program.Sub.txtLWC_LostFocus.Start
V.Local.sSQL.Declare
F.Intrinsic.Control.Try

F.Intrinsic.String.Build("select MACHINE, WC_NAME, STANDARD_COST, CREWSIZE, PROJ_GROUP from V_WORKCENTERS where MACHINE = '{0}';",V.Screen.F_New_Op!txtLWC.Text.Trim,V.Local.sSQL)
F.ODBC.Connection!con.OpenCompanyConnection
F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL,V.Local.sSQL)
F.ODBC.Connection!con.Close

F.Intrinsic.Control.If(V.Ambient.ExecuteAndReturnEOF.Not)
	F.Intrinsic.String.Split(V.Local.sSQL,"*!*",V.Local.sSQL)
	
	Gui.F_New_Op.txtLWC.Text(V.Local.sSQL(0))
	Gui.F_New_Op.txtDescr.Text(V.Local.sSQL(1))
	Gui.F_New_Op.txtRate.Text(V.Local.sSQL(2))
	Gui.F_New_Op.txtLCrew.Text(V.Local.sSQL(3))
	Gui.F_New_Op.txtProjGrp.Text(V.Local.sSQL(4))
F.Intrinsic.Control.Else
	'could be a WG
	F.Intrinsic.String.Build("select PROTOTYPE_WC, rtrim(DESCR) from V_WORKGROUP_HEAD where WORK_GROUP = '{0}';",V.Screen.F_New_Op!txtLWC.Text.Trim,V.Local.sSQL)
	F.ODBC.Connection!con.OpenCompanyConnection
	F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL,V.Local.sSQL)
	
	F.Intrinsic.Control.If(V.Ambient.ExecuteAndReturnEOF.Not)
		F.Intrinsic.String.Split(V.Local.sSQL,"*!*",V.Local.sSQL)
		
		Gui.F_New_Op.txtLWC.Text(V.Screen.F_New_Op!txtLWC.Text.Trim)
		Gui.F_New_Op.txtDescr.Text(V.Local.sSQL(1))
		F.Intrinsic.Control.If(V.Local.sSQL(0),!=,"")
			'Check WG's Prototype WC information if it exists
			F.Intrinsic.String.Build("select MACHINE, WC_NAME, STANDARD_COST, CREWSIZE, PROJ_GROUP from V_WORKCENTERS where MACHINE = '{0}';",V.Local.sSQL,V.Local.sSQL)
			F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL,V.Local.sSQL)
			
			F.Intrinsic.Control.If(V.Ambient.ExecuteAndReturnEOF.Not)
				F.Intrinsic.String.Split(V.Local.sSQL,"*!*",V.Local.sSQL)
				
				Gui.F_New_Op.txtRate.Text(V.Local.sSQL(2))
				Gui.F_New_Op.txtLCrew.Text(V.Local.sSQL(3))
				Gui.F_New_Op.txtProjGrp.Text(V.Local.sSQL(4))
			F.Intrinsic.Control.Else
				Gui.F_New_Op.txtRate.Text("")
				Gui.F_New_Op.txtLCrew.Text("")
				Gui.F_New_Op.txtProjGrp.Text("")
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.Else
			Gui.F_New_Op.txtRate.Text("")
			Gui.F_New_Op.txtLCrew.Text("")
			Gui.F_New_Op.txtProjGrp.Text("")
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.EndIf
	F.ODBC.Connection!con.Close
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage,"ScriptFile",V.Caller.ScriptFile,"CurrentSubroutine",V.Ambient.CurrentSubroutine)
	F.Intrinsic.Control.CallSub(F_WO_Dash_UnLoad)
F.Intrinsic.Control.EndTry
Program.Sub.txtLWC_LostFocus.End

Program.Sub.cmdLWCBRW_Click.Start
V.Local.sRet.Declare
V.Local.sSQL.Declare
F.Intrinsic.Control.Try

F.ODBC.Connection!con.OpenCompanyConnection
F.Intrinsic.UI.Browser("Select Workcenter/Workgroup","con","select rtrim(MACHINE) as WCWG, rtrim(WC_NAME) as DESCR, cast(0 as bit), '' as PROTO from V_WORKCENTERS union select rtrim(WORK_GROUP) as WCWG, rtrim(DESCR) as DESCR, cast(1 as bit), rtrim(PROTOTYPE_WC) from V_WORKGROUP_HEAD where PROTOTYPE_WC <> '' order by WCWG;","Workcenter/Workgroup*!*Description*!*Workgroup?*!*Prototype WC","40*!*60*!*20*!*25",V.Local.sRet)
F.ODBC.Connection!con.Close

F.Intrinsic.Control.If(V.Local.sRet.IsNotCancel)
	F.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)
	
	F.Intrinsic.Control.If(V.Local.sRet(3),!=,"")
		F.Intrinsic.String.Build("select STANDARD_COST, CREWSIZE, PROJ_GROUP from V_WORKCENTERS where MACHINE = '{0}';",V.Local.sRet(3),V.Local.sSQL)
	F.Intrinsic.Control.Else
		F.Intrinsic.String.Build("select STANDARD_COST, CREWSIZE, PROJ_GROUP from V_WORKCENTERS where MACHINE = '{0}';",V.Local.sRet(0),V.Local.sSQL)
	F.Intrinsic.Control.EndIf
	F.ODBC.Connection!con.OpenCompanyConnection
	F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL,V.Local.sSQL)
	F.ODBC.Connection!con.Close
	F.Intrinsic.String.Split(V.Local.sSQL,"*!*",V.Local.sSQL)
	
	Gui.F_New_Op.txtLWC.Text(V.Local.sRet(0))
	Gui.F_New_Op.txtDescr.Text(V.Local.sRet(1))
	Gui.F_New_Op.txtRate.Text(V.Local.sSQL(0))
	Gui.F_New_Op.txtLCrew.Text(V.Local.sSQL(1))
	Gui.F_New_Op.txtProjGrp.Text(V.Local.sSQL(2))
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage,"ScriptFile",V.Caller.ScriptFile,"CurrentSubroutine",V.Ambient.CurrentSubroutine)
	F.Intrinsic.Control.CallSub(F_WO_Dash_UnLoad)
F.Intrinsic.Control.EndTry
Program.Sub.cmdLWCBRW_Click.End

Program.Sub.cmdOperBRW_Click.Start
V.Local.sSQL.Declare
V.Local.sRet.Declare
F.Intrinsic.Control.Try

F.Intrinsic.Control.SelectCase(V.Screen.F_New_Op!ddlOpType.Text)
	F.Intrinsic.Control.Case("Material")
		F.ODBC.Connection!con.OpenCompanyConnection
		F.Intrinsic.UI.Browser("Material Operation Codes","con","select MACHINE, OPERATION, DESCRIPTION, UNIT_MEASURE, STANDARD_SETUP, FREQUENCY, STANDARD_RUNTIME, RATE, STD_LEAD_TIME, PROJ_GROUP from V_OP_CODES where LMO = 'M' and (MACHINE <> '' or OPERATION <> '' or DESCRIPTION <> '') order by OPERATION;","Operation ID*!*Op Code*!*Description*!*UM*!*Setup Qty*!*Freq*!*Qty*!*Rate*!*Lead*!*Proj Grp","40*!*30*!*50*!*10*!*30*!*20*!*20*!*20*!*20*!*40",V.Local.sRet)
		F.ODBC.Connection!con.Close
		
		F.Intrinsic.Control.If(V.Local.sRet.IsNotCancel)
			F.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)
			
			Gui.F_New_Op.txtPart.Text(V.Local.sRet(0).Trim)
			Gui.F_New_Op.txtOper.Text(V.Local.sRet(1).Trim)
			Gui.F_New_Op.txtDescr.Text(V.Local.sRet(2).Trim)
			Gui.F_New_Op.txtMUM.Text(V.Local.sRet(3).Trim)
			Gui.F_New_Op.txtSetup.Text(V.Local.sRet(4).Trim)
			Gui.F_New_Op.txtFreq.Text(V.Local.sRet(5).Trim)
			Gui.F_New_Op.txtMQty2M.Text(V.Local.sRet(6).Trim)
			Gui.F_New_Op.txtRate.Text(V.Local.sRet(7).Trim)
			Gui.F_New_Op.txtMLead.Text(V.Local.sRet(8).Trim)
			Gui.F_New_Op.txtProjGrp.Text(V.Local.sRet(9).Trim)
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.Case("Labor")
		F.ODBC.Connection!con.OpenCompanyConnection
		F.Intrinsic.UI.Browser("Labor Operation Codes","con","select MACHINE, OPERATION, DESCRIPTION, UNIT_MEASURE, STANDARD_SETUP, FREQUENCY, STANDARD_RUNTIME, RATE, OVERLAP, WC_FACTOR, CREW_SIZE, PROJ_GROUP from V_OP_CODES where LMO = 'L' and (MACHINE <> '' or OPERATION <> '' or DESCRIPTION <> '') order by OPERATION;","Operation ID*!*Op Code*!*Description*!*UM*!*Setup Qty*!*Freq*!*Runtime*!*Rate*!*Overlap*!*WC Factor*!*Crew Size*!*Proj Grp","40*!*30*!*50*!*10*!*30*!*20*!*20*!*20*!*20*!*30*!*30*!*40",V.Local.sRet)
		F.ODBC.Connection!con.Close
		
		F.Intrinsic.Control.If(V.Local.sRet.IsNotCancel)
			F.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)
			
			Gui.F_New_Op.txtLWC.Text(V.Local.sRet(0).Trim)
			Gui.F_New_Op.txtOper.Text(V.Local.sRet(1).Trim)
			Gui.F_New_Op.txtDescr.Text(V.Local.sRet(2).Trim)
			Gui.F_New_Op.txtSetup.Text(V.Local.sRet(4).Trim)
			Gui.F_New_Op.txtFreq.Text(V.Local.sRet(5).Trim)
			Gui.F_New_Op.txtLRuntime.Text(V.Local.sRet(6).Trim)
			Gui.F_New_Op.txtRate.Text(V.Local.sRet(7).Trim)
			Gui.F_New_Op.txtLOver.Text(V.Local.sRet(8).Trim)
			Gui.F_New_Op.txtLWCFact.Text(V.Local.sRet(9).Trim)
			Gui.F_New_Op.txtLCrew.Text(V.Local.sRet(10).Trim)
			Gui.F_New_Op.txtProjGrp.Text(V.Local.sRet(11).Trim)
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.Case("Comment")
		F.ODBC.Connection!con.OpenCompanyConnection
		F.Intrinsic.UI.Browser("Comment Operation Codes","con","select OPERATION, DESCRIPTION from V_OP_CODES where LMO = 'C' order by OPERATION;","Op Code*!*Description","30*!*50",V.Local.sRet)
		F.ODBC.Connection!con.Close
		
		F.Intrinsic.Control.If(V.Local.sRet.IsNotCancel)
			F.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)
			
			Gui.F_New_Op.txtOper.Text(V.Local.sRet(0))
			Gui.F_New_Op.txtDescr.Text(V.Local.sRet(1))
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.Case("Task")
		F.Intrinsic.String.Build("select OPERATION, DESCRIPTION, STANDARD_SETUP, OVERLAP, PROJ_GROUP from V_OP_CODES where LMO = 'L' and MACHINE = '{0}' and (MACHINE <> '' or OPERATION <> '' or DESCRIPTION <> '') order by OPERATION;",V.Global.sTaskWC,V.Local.sSQL)
		F.ODBC.Connection!con.OpenCompanyConnection
		F.Intrinsic.UI.Browser("Labor Operation Codes","con",V.Local.sSQL,"Task ID*!*Description*!*Duration (Hrs)*!*Overlap*!*Proj Grp","30*!*50*!*30*!*20*!*40",V.Local.sRet)
		F.ODBC.Connection!con.Close
		
		F.Intrinsic.Control.If(V.Local.sRet.IsNotCancel)
			F.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)
			
			Gui.F_New_Op.txtOper.Text(V.Local.sRet(0))
			Gui.F_New_Op.txtDescr.Text(V.Local.sRet(1))
			Gui.F_New_Op.txtDuration.Text(V.Local.sRet(2))
			Gui.F_New_Op.txtLOver.Text(V.Local.sRet(3))
			Gui.F_New_Op.txtProjGrp.Text(V.Local.sRet(4))
		F.Intrinsic.Control.EndIf
F.Intrinsic.Control.EndSelect

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage,"ScriptFile",V.Caller.ScriptFile,"CurrentSubroutine",V.Ambient.CurrentSubroutine)
	F.Intrinsic.Control.CallSub(F_WO_Dash_UnLoad)
F.Intrinsic.Control.EndTry
Program.Sub.cmdOperBRW_Click.End

Program.Sub.NewOpHideAll.Start
F.Intrinsic.Control.Try

Gui.F_New_Op.lblPart.Visible(False)
Gui.F_New_Op.lblOuts.Visible(False)
Gui.F_New_Op.lblRouter.Visible(False)
Gui.F_New_Op.txtPart.Visible(False)
Gui.F_New_Op.txtPart.Locked(False)
Gui.F_New_Op.cmdPartBRW.Visible(False)
Gui.F_New_Op.cmdOutsBRW.Visible(False)
Gui.F_New_Op.cmdRouterBRW.Visible(False)
Gui.F_New_Op.lblLWC.Visible(False)
Gui.F_New_Op.txtLWC.Visible(False)
Gui.F_New_Op.cmdLWCBRW.Visible(False)
Gui.F_New_Op.lblOper.Visible(False)
Gui.F_New_Op.txtOper.Visible(False)
Gui.F_New_Op.cmdOperBRW.Visible(False)
Gui.F_New_Op.lblOVend.Visible(False)
Gui.F_New_Op.txtOVend.Visible(False)
Gui.F_New_Op.cmdOVendBRW.Visible(False)
Gui.F_New_Op.lblDescr.Visible(False)
Gui.F_New_Op.lblComments.Visible(False)
Gui.F_New_Op.txtDescr.Visible(False)
'Gui.F_New_Op.cmdDescrBRW.Visible(False)
Gui.F_New_Op.lblMUM.Visible(False)
Gui.F_New_Op.txtMUM.Visible(False)
Gui.F_New_Op.cmdMUMBRW.Visible(False)
Gui.F_New_Op.lblMLead.Visible(False)
Gui.F_New_Op.txtMLead.Visible(False)
Gui.F_New_Op.lblOUM.Visible(False)
Gui.F_New_Op.txtOUM.Visible(False)
Gui.F_New_Op.cmdOUMBRW.Visible(False)
Gui.F_New_Op.lblOLead.Visible(False)
Gui.F_New_Op.txtOLead.Visible(False)
Gui.F_New_Op.lblMinDol.Visible(False)
Gui.F_New_Op.txtMinDol.Visible(False)
Gui.F_New_Op.lblLOver.Visible(False)
Gui.F_New_Op.txtLOver.Visible(False)
Gui.F_New_Op.lblLWCFact.Visible(False)
Gui.F_New_Op.txtLWCFact.Visible(False)
Gui.F_New_Op.lblLRuntime.Visible(False)
Gui.F_New_Op.txtLRuntime.Visible(False)
Gui.F_New_Op.lblLCrew.Visible(False)
Gui.F_New_Op.txtLCrew.Visible(False)
Gui.F_New_Op.lblMSetup.Visible(False)
Gui.F_New_Op.lblLSetup.Visible(False)
Gui.F_New_Op.lblOSetup.Visible(False)
Gui.F_New_Op.txtSetup.Visible(False)
Gui.F_New_Op.lblFreq.Visible(False)
Gui.F_New_Op.txtFreq.Visible(False)
Gui.F_New_Op.lblMQty2M.Visible(False)
Gui.F_New_Op.txtMQty2M.Visible(False)
Gui.F_New_Op.lblLType.Visible(False)
Gui.F_New_Op.txtLType.Visible(False)
Gui.F_New_Op.lblOUnits.Visible(False)
Gui.F_New_Op.txtOUnits.Visible(False)
Gui.F_New_Op.lblRate.Visible(False)
Gui.F_New_Op.txtRate.Visible(False)
Gui.F_New_Op.lblStart.Visible(False)
Gui.F_New_Op.dtpStart.Visible(False)
Gui.F_New_Op.lblProjGrp.Visible(False)
Gui.F_New_Op.txtProjGrp.Visible(False)
Gui.F_New_Op.cmdProjGrpBRW.Visible(False)
Gui.F_New_Op.lblSort.Visible(False)
Gui.F_New_Op.txtSort.Visible(False)
Gui.F_New_Op.chkMTooling.Visible(False)
Gui.F_New_Op.chkMNoPO.Visible(False)
Gui.F_New_Op.lblFrom.Visible(False)
Gui.F_New_Op.txtRouterBeg.Visible(False)
Gui.F_New_Op.cmdRouterBegBRW.Visible(False)
Gui.F_New_Op.lblThru.Visible(False)
Gui.F_New_Op.txtRouterEnd.Visible(False)
Gui.F_New_Op.cmdRouterEndBRW.Visible(False)
Gui.F_New_Op.gsgcRouterSeq.Visible(False)
Gui.F_New_Op.lblTask.Visible(False)
Gui.F_New_Op.lblTSignoff.Visible(False)
Gui.F_New_Op.txtTSignoff.Visible(False)
Gui.F_New_Op.cmdTSignoffBRW.Visible(False)
Gui.F_New_Op.lblDuration.Visible(False)
Gui.F_New_Op.txtDuration.Visible(False)
Gui.F_New_Op.chkCompletion.Visible(False)
Gui.F_New_Op..Size(10440,2100)

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage,"ScriptFile",V.Caller.ScriptFile,"CurrentSubroutine",V.Ambient.CurrentSubroutine)
	F.Intrinsic.Control.CallSub(F_WO_Dash_UnLoad)
F.Intrinsic.Control.EndTry
Program.Sub.NewOpHideAll.End

Program.Sub.cmdOutsBRW_Click.Start
V.Local.sRet.Declare
F.Intrinsic.Control.Try

F.ODBC.Connection!con.OpenCompanyConnection
F.Intrinsic.UI.Browser("Outside Operation Codes","con","select MACHINE, OPERATION, DESCRIPTION, UNIT_MEASURE, STANDARD_SETUP, FREQUENCY, STANDARD_RUNTIME, RATE, STD_LEAD_TIME, PROJ_GROUP from V_OP_CODES where LMO = 'O' and (MACHINE <> '' or OPERATION <> '' or DESCRIPTION <> '') order by OPERATION;","Operation ID*!*Vendor*!*Description*!*UM*!*Setup Units*!*Freq*!*Units*!*Rate*!*Lead*!*Proj Grp","40*!*30*!*50*!*10*!*30*!*20*!*20*!*20*!*20*!*40",V.Local.sRet)
F.ODBC.Connection!con.Close

F.Intrinsic.Control.If(V.Local.sRet.IsNotCancel)
	F.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)
	
	Gui.F_New_Op.txtPart.Text(V.Local.sRet(0))
	Gui.F_New_Op.txtOVend.Text(V.Local.sRet(1))
	Gui.F_New_Op.txtDescr.Text(V.Local.sRet(2))
	Gui.F_New_Op.txtOUM.Text(V.Local.sRet(3))
	Gui.F_New_Op.txtSetup.Text(V.Local.sRet(4))
	Gui.F_New_Op.txtFreq.Text(V.Local.sRet(5))
	Gui.F_New_Op.txtOUnits.Text(V.Local.sRet(6))
	Gui.F_New_Op.txtRate.Text(V.Local.sRet(7))
	Gui.F_New_Op.txtOLead.Text(V.Local.sRet(8))
	Gui.F_New_Op.txtProjGrp.Text(V.Local.sRet(9))
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage,"ScriptFile",V.Caller.ScriptFile,"CurrentSubroutine",V.Ambient.CurrentSubroutine)
	F.Intrinsic.Control.CallSub(F_WO_Dash_UnLoad)
F.Intrinsic.Control.EndTry
Program.Sub.cmdOutsBRW_Click.End

Program.Sub.txtOUnits_LostFocus.Start
V.Local.fUnits.Declare
F.Intrinsic.Control.Try

V.Local.fUnits.Set(V.Screen.F_New_Op!txtOUnits.Text)
F.Intrinsic.Control.If(V.Local.fUnits,<=,0)
	Gui.F_New_Op.txtOUnits.Text("")
F.Intrinsic.Control.ElseIf(V.Local.fUnits,>=,100000000)
	Gui.F_New_Op.txtOUnits.Text("99999999.9999")
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage,"ScriptFile",V.Caller.ScriptFile,"CurrentSubroutine",V.Ambient.CurrentSubroutine)
	F.Intrinsic.Control.CallSub(F_WO_Dash_UnLoad)
F.Intrinsic.Control.EndTry
Program.Sub.txtOUnits_LostFocus.End

Program.Sub.cmdAddOp_Click.Start
V.Local.sFilter.Declare
V.Local.sPart.Declare
V.Local.sPartNum.Declare
V.Local.sRev.Declare
V.Local.sSQL.Declare
V.Local.sSeq.Declare
V.Local.iSeq.Declare
V.Local.iCnt.Declare
V.Local.iLeadDays.Declare
V.Local.bSeq.Declare
V.Local.dLead.Declare
F.Intrinsic.Control.Try

F.Intrinsic.Control.If(V.Screen.F_New_Op!txtSeq.Text.Trim,=,"000000",and,V.Screen.F_New_Op!ddlOpType.Text.Trim,!=,"Router Seq")
	V.Local.bSeq.Set(False)
F.Intrinsic.Control.Else
	V.Local.bSeq.Set(True)
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.If(V.Screen.F_New_Op!ddlOpType.Text.Trim,!=,"",and,V.Local.bSeq,=,True,V.Screen.F_New_Op!txtSeq.Text.Trim,<,"995000")
	'Check if Sequence already exists on the WO and hasn't been deleted
	F.Data.DataView.Create("dtWOOpsChild","dvSeqCheck")
	F.Intrinsic.String.Build("[JOB] = '{0}' and [SUFFIX] = '{1}' and [SEQ] = '{2}' and [DELETED] = False",V.DataView.dtWOOpsChild!dvWO(0).JOB!FieldVal,V.DataView.dtWOOpsChild!dvWO(0).SUFFIX!FieldVal,V.Screen.F_New_Op!txtSeq.Text.Trim,V.Local.sFilter)
	F.Data.DataView.SetFilter("dtWOOpsChild","dvSeqCheck",V.Local.sFilter)
	F.Intrinsic.Control.If(V.DataView.dtWOOpsChild!dvSeqCheck.RowCount,>,0)
		F.Intrinsic.UI.Msgbox("This Sequence # is already in use.")
		F.Data.DataView.Close("dtWOOpsChild","dvSeqCheck")
		F.Intrinsic.Control.ExitSub
	F.Intrinsic.Control.EndIf
	F.Data.DataView.Close("dtWOOpsChild","dvSeqCheck")
	'Create lock
	F.Intrinsic.Control.CallSub(CreateLock,"Job",V.DataView.dtWOOpsChild!dvWO(0).JOB!FieldVal,"Suffix",V.DataView.dtWOOpsChild!dvWO(0).SUFFIX!FieldVal)
	F.Intrinsic.Control.If(V.Args.LockPresent)
		F.Intrinsic.Control.ExitSub
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.SelectCase(V.Screen.F_New_Op!ddlOpType.Text)
		F.Intrinsic.Control.Case("Material")
			'run checks on fields
			F.Intrinsic.Control.If(V.Screen.F_New_Op!txtPart.Text.Trim,=,"")
				F.Intrinsic.UI.Msgbox("Part cannot be blank.")
				F.Intrinsic.Control.ExitSub
			F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.If(V.Screen.F_New_Op!txtDescr.Text.Trim,=,"")
				F.Intrinsic.UI.Msgbox("Description cannot be blank.")
				F.Intrinsic.Control.ExitSub
			F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.If(V.Screen.F_New_Op!txtMUM.Text.Trim,=,"")
				F.Intrinsic.UI.Msgbox("UM cannot be blank.")
				F.Intrinsic.Control.ExitSub
			F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.If(V.Screen.F_New_Op!txtMQty2M.Text.Trim,=,"",or,V.Screen.F_New_Op!txtMQty2M.Text.Trim,=,".0000")
				F.Intrinsic.UI.Msgbox("Qty cannot be blank or zero.")
				F.Intrinsic.Control.ExitSub
			F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.If(V.Screen.F_New_Op!txtRate.Text.Trim,=,"",or,V.Screen.F_New_Op!txtRate.Text.Trim,=,".0000")
				F.Intrinsic.UI.Msgbox("Rate cannot be blank or zero.")
				F.Intrinsic.Control.ExitSub
			F.Intrinsic.Control.EndIf
			'add material sequence to ops DT
			F.Intrinsic.String.RPad(V.Screen.F_New_Op!txtPart.Text.Trim," ",20,V.Local.sPart)
			V.Local.sPartNum.Set(V.Local.sPart.Left17)
			V.Local.sRev.Set(V.Local.sPart.Right3)
			'Calcualte due date using lead time
			F.Intrinsic.Math.Div(V.Screen.F_New_Op!txtMLead.Text.Long,8,V.Local.iLeadDays)
			F.Intrinsic.Date.DateAddWorkdays(V.Screen.F_New_Op!dtpStart.Value,V.Local.iLeadDays,V.Local.dLead)
			F.Data.DataTable.AddRow("dtWOOpsChild","JOB",V.DataView.dtWOOpsChild!dvWO(0).JOB!FieldVal,"SUFFIX",V.DataView.dtWOOpsChild!dvWO(0).SUFFIX!FieldVal,"SEQ",V.Screen.F_New_Op!txtSeq.Text.Trim,"LMO","M","PART_WC",V.Local.sPart,"PART_NUM_WC",V.Local.sPartNum.Trim,"REV",V.Local.sRev.Trim,"DESCR",V.Screen.F_New_Op!txtDescr.Text.Trim,"DESCR_ORIG",V.Screen.F_New_Op!txtDescr.Text.Trim,"UM",V.Screen.F_New_Op!txtMUM.Text.Trim,"QTY_HR_EST",V.Screen.F_New_Op!txtMQty2M.Text.Trim,"QTY_HR_EST_ORIG",V.Screen.F_New_Op!txtMQty2M.Text.Trim,"CHILD_CLOSED",V.Ambient.MinDate,"HAS_DETAIL",False,"DESCR_CHANGED",False,"QTY_CHANGED",False,"DELETED",False,"ADDED",True,"DATE_START",V.Screen.F_New_Op!dtpStart.Value,"DATE_DUE",V.Local.dLead)
			F.Data.DataTable.AddRow("dtAddOpsM","JOB",V.DataView.dtWOOpsChild!dvWO(0).JOB!FieldVal,"SUFFIX",V.DataView.dtWOOpsChild!dvWO(0).SUFFIX!FieldVal,"SEQ",V.Screen.F_New_Op!txtSeq.Text.Trim,"PART",V.Local.sPart,"OPERATION",V.Screen.F_New_Op!txtOper.Text.Trim,"DESCRIPTION",V.Screen.F_New_Op!txtDescr.Text.Trim,"UM",V.Screen.F_New_Op!txtMUM.Text.Trim,"LEAD",V.Screen.F_New_Op!txtMLead.Text.Long,"MIN_DOL",V.Screen.F_New_Op!txtMinDol.Text.Float,"SETUP",V.Screen.F_New_Op!txtSetup.Text.Float,"FREQ",V.Screen.F_New_Op!txtFreq.Text.Long,"QTY",V.Screen.F_New_Op!txtMQty2M.Text.Float,"RATE",V.Screen.F_New_Op!txtRate.Text.Float,"START",V.Screen.F_New_Op!dtpStart.Value,"PROJ_GRP",V.Screen.F_New_Op!txtProjGrp.Text.Trim,"SORT",V.Screen.F_New_Op!txtSort.Text.Trim,"TOOLING",V.Screen.F_New_Op!chkMTooling.CheckedAsBoolean,"HOLD",V.Screen.F_New_Op!chkMNoPO.CheckedAsBoolean,"ROUTER","","ROUTER_SEQ","000000")
		F.Intrinsic.Control.Case("Labor")
			'run checks on fields
			F.Intrinsic.Control.If(V.Screen.F_New_Op!txtLWC.Text.Trim,=,"")
				F.Intrinsic.UI.Msgbox("WC/WG cannot be blank.")
				F.Intrinsic.Control.ExitSub
			F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.If(V.Screen.F_New_Op!txtDescr.Text.Trim,=,"")
				F.Intrinsic.UI.Msgbox("Description cannot be blank.")
				F.Intrinsic.Control.ExitSub
			F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.If(V.Screen.F_New_Op!txtLRuntime.Text.Trim,=,"")
				F.Intrinsic.UI.Msgbox("Runtime cannot be blank.")
				F.Intrinsic.Control.ExitSub
			F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.If(V.Screen.F_New_Op!txtLRuntime.Text.Trim,=,"",or,V.Screen.F_New_Op!txtLRuntime.Text.Trim,=,".0000")
				F.Intrinsic.UI.Msgbox("Runtime cannot be blank or zero.")
				F.Intrinsic.Control.ExitSub
			F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.If(V.Screen.F_New_Op!txtRate.Text.Trim,=,"",or,V.Screen.F_New_Op!txtRate.Text.Trim,=,".0000")
				F.Intrinsic.UI.Msgbox("Rate cannot be blank or zero.")
				F.Intrinsic.Control.ExitSub
			F.Intrinsic.Control.EndIf
			'add labor sequence to ops DT
			'Calcualte due date using lead time
			F.Intrinsic.Math.Div(V.Screen.F_New_Op!txtMLead.Text.Long,8,V.Local.iLeadDays)
			F.Intrinsic.Date.DateAddWorkdays(V.Screen.F_New_Op!dtpStart.Value,V.Local.iLeadDays,V.Local.dLead)
			F.Data.DataTable.AddRow("dtWOOpsChild","JOB",V.DataView.dtWOOpsChild!dvWO(0).JOB!FieldVal,"SUFFIX",V.DataView.dtWOOpsChild!dvWO(0).SUFFIX!FieldVal,"SEQ",V.Screen.F_New_Op!txtSeq.Text.Trim,"LMO","L","PART_WC",V.Screen.F_New_Op!txtLWC.Text.Trim,"PART_NUM_WC",V.Screen.F_New_Op!txtLWC.Text.Trim,"DESCR",V.Screen.F_New_Op!txtDescr.Text.Trim,"DESCR_ORIG",V.Screen.F_New_Op!txtDescr.Text.Trim,"UM","HR","QTY_HR_EST",V.Screen.F_New_Op!txtLRuntime.Text.Trim,"QTY_HR_EST_ORIG",V.Screen.F_New_Op!txtLRuntime.Text.Trim,"CHILD_CLOSED",V.Ambient.MinDate,"HAS_DETAIL",False,"DESCR_CHANGED",False,"QTY_CHANGED",False,"DELETED",False,"ADDED",True,"DATE_START",V.Screen.F_New_Op!dtpStart.Value,"DATE_DUE",V.Local.dLead)
			F.Data.DataTable.AddRow("dtAddOpsL","JOB",V.DataView.dtWOOpsChild!dvWO(0).JOB!FieldVal,"SUFFIX",V.DataView.dtWOOpsChild!dvWO(0).SUFFIX!FieldVal,"SEQ",V.Screen.F_New_Op!txtSeq.Text.Trim,"WORKCENTER",V.Screen.F_New_Op!txtLWC.Text.Trim,"OPERATION",V.Screen.F_New_Op!txtOper.Text.Trim,"DESCRIPTION",V.Screen.F_New_Op!txtDescr.Text.Trim,"OVERLAP",V.Screen.F_New_Op!txtLOver.Text.Long,"WC_FACT",V.Screen.F_New_Op!txtLWCFact.Text.Long,"RUNTIME",V.Screen.F_New_Op!txtLRuntime.Text.Float,"CREW_SIZE",V.Screen.F_New_Op!txtLCrew.Text.Float,"SETUP",V.Screen.F_New_Op!txtSetup.Text.Float,"FREQ",V.Screen.F_New_Op!txtFreq.Text.Long,"TYPE",V.Screen.F_New_Op!txtLType.Text.Trim,"RATE",V.Screen.F_New_Op!txtRate.Text.Float,"START",V.Screen.F_New_Op!dtpStart.Value,"PROJ_GRP",V.Screen.F_New_Op!txtProjGrp.Text.Trim,"SORT",V.Screen.F_New_Op!txtSort.Text.Trim,"APPROVAL","","COMPL_CHK",False,"ROUTER","","ROUTER_SEQ","000000")
		F.Intrinsic.Control.Case("Outside")
			'run checks on fields
			F.Intrinsic.Control.If(V.Screen.F_New_Op!txtPart.Text.Trim,=,"")
				F.Intrinsic.UI.Msgbox("Outside Code cannot be blank.")
				F.Intrinsic.Control.ExitSub
			F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.If(V.Screen.F_New_Op!txtOVend.Text.Trim,=,"")
				F.Intrinsic.UI.Msgbox("Vendor cannot be blank.")
				F.Intrinsic.Control.ExitSub
			F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.If(V.Screen.F_New_Op!txtDescr.Text.Trim,=,"")
				F.Intrinsic.UI.Msgbox("Description cannot be blank.")
				F.Intrinsic.Control.ExitSub
			F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.If(V.Screen.F_New_Op!txtOUM.Text.Trim,=,"")
				F.Intrinsic.UI.Msgbox("UM cannot be blank.")
				F.Intrinsic.Control.ExitSub
			F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.If(V.Screen.F_New_Op!txtOUnits.Text.Trim,=,"",or,V.Screen.F_New_Op!txtOUnits.Text.Trim,=,".0000")
				F.Intrinsic.UI.Msgbox("Units cannot be blank or zero.")
				F.Intrinsic.Control.ExitSub
			F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.If(V.Screen.F_New_Op!txtRate.Text.Trim,=,"",or,V.Screen.F_New_Op!txtRate.Text.Trim,=,".0000")
				F.Intrinsic.UI.Msgbox("Rate cannot be blank or zero.")
				F.Intrinsic.Control.ExitSub
			F.Intrinsic.Control.EndIf
			F.Data.DataTable.AddRow("dtWOOpsChild","JOB",V.DataView.dtWOOpsChild!dvWO(0).JOB!FieldVal,"SUFFIX",V.DataView.dtWOOpsChild!dvWO(0).SUFFIX!FieldVal,"SEQ",V.Screen.F_New_Op!txtSeq.Text.Trim,"LMO","O","PART_WC",V.Screen.F_New_Op!txtPart.Text.Trim,"PART_NUM_WC",V.Screen.F_New_Op!txtPart.Text.Trim,"DESCR",V.Screen.F_New_Op!txtDescr.Text.Trim,"DESCR_ORIG",V.Screen.F_New_Op!txtDescr.Text.Trim,"UM",V.Screen.F_New_Op!txtOUM.Text.Trim,"QTY_HR_EST",V.Screen.F_New_Op!txtOUnits.Text.Trim,"QTY_HR_EST_ORIG",V.Screen.F_New_Op!txtOUnits.Text.Trim,"CHILD_CLOSED",V.Ambient.MinDate,"HAS_DETAIL",False,"DESCR_CHANGED",False,"QTY_CHANGED",False,"DELETED",False,"ADDED",True,"DATE_START",V.Screen.F_New_Op!dtpStart.Value,"DATE_DUE",V.Screen.F_New_Op!dtpStart.Value)
			F.Data.DataTable.AddRow("dtAddOpsO","JOB",V.DataView.dtWOOpsChild!dvWO(0).JOB!FieldVal,"SUFFIX",V.DataView.dtWOOpsChild!dvWO(0).SUFFIX!FieldVal,"SEQ",V.Screen.F_New_Op!txtSeq.Text.Trim,"OUTSIDE_CODE",V.Screen.F_New_Op!txtPart.Text.Trim,"VENDOR",V.Screen.F_New_Op!txtOVend.Text.Trim,"DESCRIPTION",V.Screen.F_New_Op!txtDescr.Text.Trim,"UM",V.Screen.F_New_Op!txtOUM.Text.Trim,"LEAD",V.Screen.F_New_Op!txtOLead.Text.Long,"MIN_DOL",V.Screen.F_New_Op!txtMinDol.Text.Float,"SETUP",V.Screen.F_New_Op!txtSetup.Text.Float,"FREQ",V.Screen.F_New_Op!txtFreq.Text.Float,"UNITS",V.Screen.F_New_Op!txtOUnits.Text.Float,"RATE",V.Screen.F_New_Op!txtRate.Text.Float,"START",V.Screen.F_New_Op!dtpStart.Value,"PROJ_GRP",V.Screen.F_New_Op!txtProjGrp.Text.Trim,"SORT",V.Screen.F_New_Op!txtSort.Text.Trim,"ROUTER","","ROUTER_SEQ","000000")
		F.Intrinsic.Control.Case("Comment")
			'run check on field
			F.Intrinsic.Control.If(V.Screen.F_New_Op!txtDescr.Text.Trim,=,"")
				F.Intrinsic.UI.Msgbox("Comments cannot be blank.")
				F.Intrinsic.Control.ExitSub
			F.Intrinsic.Control.EndIf
			'add comment sequence to ops DT
			F.Data.DataTable.AddRow("dtWOOpsChild","JOB",V.DataView.dtWOOpsChild!dvWO(0).JOB!FieldVal,"SUFFIX",V.DataView.dtWOOpsChild!dvWO(0).SUFFIX!FieldVal,"SEQ",V.Screen.F_New_Op!txtSeq.Text.Trim,"LMO","C","DESCR",V.Screen.F_New_Op!txtDescr.Text.Trim,"DESCR_ORIG",V.Screen.F_New_Op!txtDescr.Text.Trim,"CHILD_CLOSED",V.Ambient.MinDate,"HAS_DETAIL",False,"DESCR_CHANGED",False,"QTY_CHANGED",False,"DELETED",False,"ADDED",True,"DATE_START",V.Screen.F_New_Op!dtpStart.Value,"DATE_DUE",V.Screen.F_New_Op!dtpStart.Value)
			F.Data.DataTable.AddRow("dtAddOpsC","JOB",V.DataView.dtWOOpsChild!dvWO(0).JOB!FieldVal,"SUFFIX",V.DataView.dtWOOpsChild!dvWO(0).SUFFIX!FieldVal,"SEQ",V.Screen.F_New_Op!txtSeq.Text.Trim,"OPERATION",V.Screen.F_New_Op!txtOper.Text.Trim,"DESCRIPTION",V.Screen.F_New_Op!txtDescr.Text.Trim,"ROUTER","","ROUTER_SEQ","000000")
		F.Intrinsic.Control.Case("Task")
			'run check on fields
			F.Intrinsic.Control.If(V.Screen.F_New_Op!txtOper.Text.Trim,=,"")
				F.Intrinsic.UI.Msgbox("Task cannot be blank.")
				F.Intrinsic.Control.ExitSub
			F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.If(V.Screen.F_New_Op!txtTSignoff.Text.Trim,=,"")
				F.Intrinsic.UI.Msgbox("Signoff Group/User cannot be blank.")
				F.Intrinsic.Control.ExitSub
			F.Intrinsic.Control.EndIf
			'add task sequence to ops DT
			'Calcualte due date using lead time
			F.Intrinsic.Math.Div(V.Screen.F_New_Op!txtMLead.Text.Long,8,V.Local.iLeadDays)
			F.Intrinsic.Date.DateAddWorkdays(V.Screen.F_New_Op!dtpStart.Value,V.Local.iLeadDays,V.Local.dLead)
			F.Data.DataTable.AddRow("dtWOOpsChild","JOB",V.DataView.dtWOOpsChild!dvWO(0).JOB!FieldVal,"SUFFIX",V.DataView.dtWOOpsChild!dvWO(0).SUFFIX!FieldVal,"SEQ",V.Screen.F_New_Op!txtSeq.Text.Trim,"LMO","L","PART_WC",V.Global.sTaskWC,"PART_NUM_WC",V.Global.sTaskWC,"DESCR",V.Screen.F_New_Op!txtDescr.Text.Trim,"DESCR_ORIG",V.Screen.F_New_Op!txtDescr.Text.Trim,"UM","HR","QTY_HR_EST",V.Screen.F_New_Op!txtDuration.Text.Float,"QTY_HR_EST_ORIG",V.Screen.F_New_Op!txtDuration.Text.Float,"CHILD_CLOSED",V.Ambient.MinDate,"HAS_DETAIL",False,"DESCR_CHANGED",False,"QTY_CHANGED",False,"DELETED",False,"ADDED",True,"DATE_START",V.Screen.F_New_Op!dtpStart.Value,"DATE_DUE",V.Local.dLead)
			F.Data.DataTable.AddRow("dtAddOpsL","JOB",V.DataView.dtWOOpsChild!dvWO(0).JOB!FieldVal,"SUFFIX",V.DataView.dtWOOpsChild!dvWO(0).SUFFIX!FieldVal,"SEQ",V.Screen.F_New_Op!txtSeq.Text.Trim,"WORKCENTER",V.Global.sTaskWC,"OPERATION",V.Screen.F_New_Op!txtOper.Text.Trim,"DESCRIPTION",V.Screen.F_New_Op!txtDescr.Text.Trim,"OVERLAP",V.Screen.F_New_Op!txtLOver.Text.Long,"WC_FACT",0,"RUNTIME",V.Screen.F_New_Op!txtDuration.Text.Float,"CREW_SIZE",0,"SETUP",V.Screen.F_New_Op!txtDuration.Text.Float,"FREQ",V.Screen.F_New_Op!txtFreq.Text.Long,"TYPE","","RATE",0,"START",V.Screen.F_New_Op!dtpStart.Value,"PROJ_GRP",V.Screen.F_New_Op!txtProjGrp.Text.Trim,"SORT",V.Screen.F_New_Op!txtSort.Text.Trim,"APPROVAL",V.Screen.F_New_Op!txtTSignoff.Text.Trim,"COMPL_CHK",V.Screen.F_New_Op!chkCompletion.CheckedAsBoolean,"ROUTER","","ROUTER_SEQ","000000")
		F.Intrinsic.Control.Case("Router Seq")
			'run check on fields
			F.Intrinsic.Control.If(V.Screen.F_New_Op!txtPart.Text.Trim,=,"")
				F.Intrinsic.UI.Msgbox("Router cannot be blank.")
				F.Intrinsic.Control.ExitSub
			F.Intrinsic.Control.EndIf
			'Check router table that exists
			F.Intrinsic.String.Build("[ORIG_SEQ] >= '{0}' and [ORIG_SEQ] <= '{1}' and [LINE_ROUTER] >= '995000'",V.Screen.F_New_Op!txtRouterBeg.Text,V.Screen.F_New_Op!txtRouterEnd.Text,V.Local.sFilter)
			F.Data.DataView.Create("dtRouterP","dvSeqCheck")
			F.Data.DataView.SetFilter("dtRouterP","dvSeqCheck",V.Local.sFilter)
			F.Intrinsic.Control.If(V.DataView.dtRouterP!dvSeqCheck.RowCount,>,0)
				F.Intrinsic.UI.Msgbox("Inserted Router Sequences cannot be greater than 994999.")
				F.Data.DataView.Close("dtRouterP","dvSeqCheck")
				F.Intrinsic.Control.ExitSub
			F.Intrinsic.Control.EndIf
			F.Data.DataView.Close("dtRouterP","dvSeqCheck")
			'Deactivate screen cause this may take awhile
			Gui.F_New_Op..Enabled(False)
			F.Intrinsic.String.Build("select '{3}' as JOB, '{4}' as SUFFIX, LINE_ROUTER as SEQ, LMO, rtrim(PART_WC_OUTSIDE) as PART_WC, rtrim(PART_WC_OUTSIDE) as PART_NUM_WC, rtrim(PART_WC_OUTSIDE) as PART, rtrim(PART_WC_OUTSIDE) as WORKCENTER, rtrim(PART_WC_OUTSIDE) as OUTSIDE_CODE, rtrim(DESC_RT_LINE) as DESCR, rtrim(DESC_RT_LINE) as DESCR_ORIG, rtrim(DESC_RT_LINE) as DESCRIPTION, OPERATION, OPERATION as VENDOR, SET_UP as SETUP, RUN_TIME as QTY_HR_EST, RUN_TIME as QTY_HR_EST_ORIG, RUN_TIME as QTY, RUN_TIME as RUNTIME, RUN_TIME as UNITS, RATE, FREQUENCY as FREQ, UM_INVENTORY as UM, OVERLAP, WC_FACTOR as WC_FACT, AMT_MINIMUM as MIN_DOL, CREW_SIZE, LEAD_TIME as LEAD, PROJ_GROUP as PROJ_GRP, SORT_CODE as SORT, ROUTER, LINE_ROUTER as ROUTER_SEQ from V_ROUTER_LINE where ROUTER = '{0}' and LINE_ROUTER between '{1}' and '{2}' order by LINE_ROUTER;",V.Screen.F_New_Op!txtPart.Text.Trim,V.Screen.F_New_Op!txtRouterBeg.Text,V.Screen.F_New_Op!txtRouterEnd.Text,V.DataView.dtWOOpsChild!dvWO(0).JOB!FieldVal,V.DataView.dtWOOpsChild!dvWO(0).SUFFIX!FieldVal,V.Local.sSQL)
			F.ODBC.Connection!con.OpenCompanyConnection
			F.Data.DataTable.CreateFromSQL("dtRouterLines","con",V.Local.sSQL,False)
			F.ODBC.Connection!con.Close
			F.Intrinsic.Control.If(V.DataTable.dtRouterLines.RowCount,=,0)
				F.Intrinsic.UI.Msgbox("No Router Sequences found.")
				F.Data.DataTable.Close("dtRouterLines")
				Gui.F_New_Op..Enabled(True)
				Gui.F_New_Op..SetFocus
				F.Intrinsic.Control.ExitSub
			F.Intrinsic.Control.EndIf
			F.Data.DataTable.AddColumn("dtRouterLines","CHILD_CLOSED","Date",V.Ambient.MinDate)
			F.Data.DataTable.AddColumn("dtRouterLines","HAS_DETAIL","Boolean",False)
			F.Data.DataTable.AddColumn("dtRouterLines","DESCR_CHANGED","Boolean",False)
			F.Data.DataTable.AddColumn("dtRouterLines","QTY_CHANGED","Boolean",False)
			F.Data.DataTable.AddColumn("dtRouterLines","DELETED","Boolean",False)
			F.Data.DataTable.AddColumn("dtRouterLines","ADDED","Boolean",True)
			F.Data.DataTable.AddColumn("dtRouterLines","DATE_START","Date",V.Screen.F_New_Op!dtpStart.Value)
			F.Data.DataTable.AddColumn("dtRouterLines","DATE_DUE","Date",V.Screen.F_New_Op!dtpStart.Value)
			F.Intrinsic.Control.For(V.Local.iCnt,0,V.DataTable.dtRouterLines.RowCount--,1)
				V.Local.sSeq.Set(V.DataView.dtRouterP!dvSeqRange(V.Local.iCnt).LINE_ROUTER!FieldVal)
				'Calcualte due date using lead time
				F.Intrinsic.Math.Div(V.DataTable.dtRouterLines(V.Local.iCnt).LEAD!FieldVal,8,V.Local.iLeadDays)
				F.Intrinsic.Date.DateAddWorkdays(V.DataTable.dtRouterLines(V.Local.iCnt).DATE_START!FieldVal,V.Local.iLeadDays,V.Local.dLead)
				'Set the new Seq #
				F.Data.DataTable.SetValue("dtRouterLines",V.Local.iCnt,"SEQ",V.Local.sSeq,"DATE_DUE",V.Local.dLead)
			F.Intrinsic.Control.Next(V.Local.iCnt)
			F.Data.DataTable.Close("dtRouterP")
			Gui.F_New_Op.txtPart.Text("")
			Gui.F_New_Op.gsgcRouterSeq.MainView("gvBlank")
			
			'Merge Router Lines to Main Operations table
			F.Data.DataTable.Merge("dtRouterLines","dtWOOpsChild",True,2)
			'Merge Router Lines to New Operations Tables
			F.Data.DataView.Create("dtRouterLines","dvLMO")
			'Material
			F.Data.DataView.SetFilter("dtRouterLines","dvLMO","[LMO] = 'M'")
			F.Intrinsic.Control.If(V.DataView.dtRouterLines!dvLMO.RowCount,>,0)
				F.Data.DataView.ToDataTable("dtRouterLines","dvLMO","dtRouterLinesM",False)
				F.Data.DataTable.Merge("dtRouterLinesM","dtAddOpsM",True,2)
				F.Data.DataTable.Close("dtRouterLinesM")
			F.Intrinsic.Control.EndIf
			'Labor
			F.Data.DataView.SetFilter("dtRouterLines","dvLMO","[LMO] = 'L'")
			F.Intrinsic.Control.If(V.DataView.dtRouterLines!dvLMO.RowCount,>,0)
				F.Data.DataView.ToDataTable("dtRouterLines","dvLMO","dtRouterLinesL",False)
				F.Data.DataTable.Merge("dtRouterLinesL","dtAddOpsL",True,2)
				F.Data.DataTable.Close("dtRouterLinesL")
			F.Intrinsic.Control.EndIf
			'Outside
			F.Data.DataView.SetFilter("dtRouterLines","dvLMO","[LMO] = 'O'")
			F.Intrinsic.Control.If(V.DataView.dtRouterLines!dvLMO.RowCount,>,0)
				F.Data.DataView.ToDataTable("dtRouterLines","dvLMO","dtRouterLinesO",False)
				F.Data.DataTable.Merge("dtRouterLinesO","dtAddOpsO",True,2)
				F.Data.DataTable.Close("dtRouterLinesO")
			F.Intrinsic.Control.EndIf
			'Comment
			F.Data.DataView.SetFilter("dtRouterLines","dvLMO","[LMO] = 'C'")
			F.Intrinsic.Control.If(V.DataView.dtRouterLines!dvLMO.RowCount,>,0)
				F.Data.DataView.ToDataTable("dtRouterLines","dvLMO","dtRouterLinesC",False)
				F.Data.DataTable.Merge("dtRouterLinesC","dtAddOpsC",True,2)
				F.Data.DataTable.Close("dtRouterLinesC")
			F.Intrinsic.Control.EndIf
			
			F.Data.DataTable.Close("dtRouterLines")
			Gui.F_New_Op..Enabled(True)
	F.Intrinsic.Control.EndSelect
	
	F.Intrinsic.Control.CallSub(F_New_Op_UnLoad)
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage,"ScriptFile",V.Caller.ScriptFile,"CurrentSubroutine",V.Ambient.CurrentSubroutine)
	F.Intrinsic.Control.CallSub(F_WO_Dash_UnLoad)
F.Intrinsic.Control.EndTry
Program.Sub.cmdAddOp_Click.End

Program.Sub.cmdUMBRW_Click.Start
V.Local.sRet.Declare
V.Local.sControl.Declare
F.Intrinsic.Control.Try

F.ODBC.Connection!con.OpenCompanyConnection
F.Intrinsic.UI.Browser("Unit of Measure Codes","con","select CODE, DESCR from V_UM_CODES order by CODE;","UM*!*Description","15*!*50",V.Local.sRet)
F.ODBC.Connection!con.Close

F.Intrinsic.Control.If(V.Local.sRet.IsNotCancel)
	F.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)
	
	F.Intrinsic.String.Mid(V.Args.ControlName,4,1,V.Local.sControl)
	F.Intrinsic.String.Build("txt{0}UM",V.Local.sControl,V.Local.sControl)
	Gui.F_New_Op.[V.Local.sControl].Text(V.Local.sRet(0))
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage,"ScriptFile",V.Caller.ScriptFile,"CurrentSubroutine",V.Ambient.CurrentSubroutine)
	F.Intrinsic.Control.CallSub(F_WO_Dash_UnLoad)
F.Intrinsic.Control.EndTry
Program.Sub.cmdUMBRW_Click.End

Program.Sub.cmdOVendBRW_Click.Start
V.Local.sRet.Declare
F.Intrinsic.Control.Try

F.ODBC.Connection!con.OpenCompanyConnection
F.Intrinsic.UI.Browser(300,"",V.Local.sRet)
F.ODBC.Connection!con.Close

F.Intrinsic.Control.If(V.Local.sRet.IsNotCancel)
	F.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)
	
	Gui.F_New_Op.txtOVend.Text(V.Local.sRet(0))
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage,"ScriptFile",V.Caller.ScriptFile,"CurrentSubroutine",V.Ambient.CurrentSubroutine)
	F.Intrinsic.Control.CallSub(F_WO_Dash_UnLoad)
F.Intrinsic.Control.EndTry
Program.Sub.cmdOVendBRW_Click.End

Program.Sub.cmdRouterBRW_Click.Start
V.Local.sRet.Declare
F.Intrinsic.Control.Try

F.ODBC.Connection!con.OpenCompanyConnection
F.Intrinsic.UI.Browser(2705,"",V.Local.sRet)
F.ODBC.Connection!con.Close

F.Intrinsic.Control.If(V.Local.sRet.IsNotCancel)
	F.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)
	
	Gui.F_New_Op.txtPart.Text(V.Local.sRet(0))
	
	F.Intrinsic.Control.CallSub(GetRouterPreview)
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage,"ScriptFile",V.Caller.ScriptFile,"CurrentSubroutine",V.Ambient.CurrentSubroutine)
	F.Intrinsic.Control.CallSub(F_WO_Dash_UnLoad)
F.Intrinsic.Control.EndTry
Program.Sub.cmdRouterBRW_Click.End

Program.Sub.cmdRouterSeqBRW_Click.Start
V.Local.sSQL.Declare
V.Local.sRet.Declare
F.Intrinsic.Control.Try

F.Intrinsic.Control.If(V.Screen.F_New_Op!txtPart.Text.Trim,=,"")
	F.Intrinsic.UI.Msgbox("Need a Router # to continue.")
	F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.EndIf

F.Intrinsic.String.Build("select LINE_ROUTER, LMO, PART_WC_OUTSIDE, SET_UP, RUN_TIME, UM_INVENTORY, RATE, DESC_RT_LINE from V_ROUTER_LINE where ROUTER = '{0}' order by LINE_ROUTER;",V.Screen.F_New_Op!txtPart.Text.Trim,V.Local.sSQL)
F.ODBC.Connection!con.OpenCompanyConnection
F.Intrinsic.UI.Browser("Router Sequences","con",V.Local.sSQL,"Seq*!*LMO*!*Part/WC*!*Setup*!*Runtime*!*UM*!*Rate*!*Description","35*!*15*!*75*!*35*!*35*!*15*!*35*!*90",V.Local.sRet)
F.ODBC.Connection!con.Close

F.Intrinsic.Control.If(V.Local.sRet.IsNotCancel)
	F.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)
	
	F.Intrinsic.Control.If(V.Args.ControlName.UCase,=,"CMDROUTERBEGBRW")
		F.Intrinsic.Control.If(V.Local.sRet(0).Long,<=,V.Screen.F_New_Op!txtRouterEnd.Text.Long)
			Gui.F_New_Op.txtRouterBeg.Text(V.Local.sRet(0))
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.Else
		F.Intrinsic.Control.If(V.Local.sRet(0).Long,>=,V.Screen.F_New_Op!txtRouterBeg.Text.Long)
			Gui.F_New_Op.txtRouterEnd.Text(V.Local.sRet(0))
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.CallSub(UpdateRouterPreview)
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage,"ScriptFile",V.Caller.ScriptFile,"CurrentSubroutine",V.Ambient.CurrentSubroutine)
	F.Intrinsic.Control.CallSub(F_WO_Dash_UnLoad)
F.Intrinsic.Control.EndTry
Program.Sub.cmdRouterSeqBRW_Click.End

Program.Sub.txtRouterSeq_LostFocus.Start
V.Local.sSeq.Declare
F.Intrinsic.Control.Try

F.Intrinsic.String.LPad(V.Screen.F_New_Op![V.Args.ControlName].Text,"0",6,V.Local.sSeq)
Gui.F_New_Op.[V.Args.ControlName].Text(V.Local.sSeq)

F.Intrinsic.Control.CallSub(UpdateRouterPreview)

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage,"ScriptFile",V.Caller.ScriptFile,"CurrentSubroutine",V.Ambient.CurrentSubroutine)
	F.Intrinsic.Control.CallSub(F_WO_Dash_UnLoad)
F.Intrinsic.Control.EndTry
Program.Sub.txtRouterSeq_LostFocus.End

Program.Sub.LadderUpdates.Start
'V.Args.Job, V.Args.Suffix, V.Args.Ratio, V.Args.TopLevel
V.Local.sDataView.Declare
V.Local.sFilter.Declare
V.Local.sRow.Declare
V.Local.iRow.Declare
V.Local.iOp.Declare
V.Local.iJob.Declare
V.Local.fRuntime.Declare
F.Intrinsic.Control.Try

'Get DataTableName
F.Intrinsic.Control.If(V.Args.TopLevel)
	V.Local.sDataView.Set("dvLadder")
F.Intrinsic.Control.Else
	V.Local.sDataView.Set("dvLadderChild")
	F.Intrinsic.String.Build("[JOB] = '{0}' and [SUFFIX] = '{1}'",V.Args.Job,V.Args.Suffix,V.Local.sFilter)
	F.Data.DataTable.Select("dtTopLevel$dtSubLevel",V.Local.sFilter,V.Local.sRow)
	V.Local.iRow.Set(V.Local.sRow.Long)
F.Intrinsic.Control.EndIf

'Try to create Lock on WO
F.Intrinsic.Control.If(V.Args.TopLevel.Not)
	F.Intrinsic.Control.CallSub(CreateLock,"Job",V.Args.Job,"Suffix",V.Args.Suffix)
F.Intrinsic.Control.Else
	'This is a top level work order, so we already have a lock on it. Run this sub to return V.Args.LockPresent = False
	F.Intrinsic.Control.CallSub(TopLevelLadderUpdateNoLock)
F.Intrinsic.Control.EndIf

'Calculate the current Job's new Header Qty
F.Intrinsic.String.Build("[JOB] = '{0}' and [SUFFIX] = '{1}'",V.Args.Job,V.Args.Suffix,V.Local.sFilter)
F.Data.DataView.SetFilter("dtTopLevel",V.Local.sDataView,V.Local.sFilter)
F.Intrinsic.Control.If(V.Args.TopLevel)
	F.Intrinsic.Math.Div(V.DataView.dtTopLevel!dvLadder(0).QTY_ORDER_ORIG!FieldVal,V.Args.Ratio,V.Local.fRuntime)
	F.Data.DataView.SetValue("dtTopLevel","dvLadder",0,"QTY_ORDER",V.Local.fRuntime)
	F.Intrinsic.Control.If(V.DataView.dtTopLevel!dvLadder(0).QTY_ORDER!FieldVal,!=,V.DataView.dtTopLevel!dvLadder(0).QTY_ORDER_ORIG!FieldVal)
		F.Data.DataView.SetValue("dtTopLevel","dvLadder",0,"QTY_CHANGED",True)
	F.Intrinsic.Control.Else
		F.Data.DataView.SetValue("dtTopLevel","dvLadder",0,"QTY_CHANGED",False)
		F.Intrinsic.Control.CallSub(DestroyLock,"Job",V.DataView.dtTopLevel!dvLadder(0).JOB!FieldVal,"Suffix",V.DataView.dtTopLevel!dvLadder(0).SUFFIX!FieldVal)
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.Else
	F.Intrinsic.Math.Div(V.DataTable.dtTopLevel$dtSubLevel(V.Local.iRow).QTY_ORDER_ORIG!FieldVal,V.Args.Ratio,V.Local.fRuntime)
	F.Intrinsic.Control.If(V.Args.LockPresent.Not)
		F.Data.DataTable.SetValue("dtTopLevel$dtSubLevel",V.Local.iRow,"QTY_ORDER",V.Local.fRuntime)
		F.Intrinsic.Control.If(V.DataTable.dtTopLevel$dtSubLevel(V.Local.iRow).QTY_ORDER!FieldVal,!=,V.DataTable.dtTopLevel$dtSubLevel(V.Local.iRow).QTY_ORDER_ORIG!FieldVal)
			F.Data.DataTable.SetValue("dtTopLevel$dtSubLevel",V.Local.iRow,"QTY_CHANGED",True)
		F.Intrinsic.Control.Else
			F.Data.DataTable.SetValue("dtTopLevel$dtSubLevel",V.Local.iRow,"QTY_CHANGED",False)
			F.Intrinsic.Control.CallSub(DestroyLock,"Job",V.DataTable.dtTopLevel$dtSubLevel(V.Local.iRow).JOB!FieldVal,"Suffix",V.DataTable.dtTopLevel$dtSubLevel(V.Local.iRow).SUFFIX!FieldVal)
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.EndIf

'Update Job's operations
F.Data.DataView.SetFilter("dtWOOpsChild","dvLadder",V.Local.sFilter)
F.Intrinsic.Control.For(V.Local.iOp,0,V.DataView.dtWOOpsChild!dvLadder.RowCount--,1)
	F.Intrinsic.Control.If(V.DataView.dtWOOpsChild!dvLadder(V.Local.iOp).LMO!FieldVal,!=,"C",and,V.DataView.dtWOOpsChild!dvLadder(V.Local.iOp).SEQ!FieldValLong,<,995000)
		F.Intrinsic.Math.Div(V.DataView.dtWOOpsChild!dvLadder(V.Local.iOp).QTY_HR_EST_ORIG!FieldVal,V.Args.Ratio,V.Local.fRuntime)
		F.Intrinsic.Control.If(V.Args.LockPresent.Not)
			F.Data.DataView.SetValue("dtWOOpsChild","dvLadder",V.Local.iOp,"QTY_HR_EST",V.Local.fRuntime)
			F.Intrinsic.Control.If(V.DataView.dtWOOpsChild!dvLadder(V.Local.iOp).QTY_HR_EST!FieldVal,!=,V.DataView.dtWOOpsChild!dvLadder(V.Local.iOp).QTY_HR_EST_ORIG!FieldVal)
				F.Data.DataView.SetValue("dtWOOpsChild","dvLadder",V.Local.iOp,"QTY_CHANGED",True)
			F.Intrinsic.Control.Else
				F.Data.DataView.SetValue("dtWOOpsChild","dvLadder",V.Local.iOp,"QTY_CHANGED",False)
				F.Intrinsic.Control.CallSub(DestroyLock,"Job",V.DataView.dtWOOpsChild!dvLadder(V.Local.iOp).JOB!FieldVal,"Suffix",V.DataView.dtWOOpsChild!dvLadder(V.Local.iOp).SUFFIX!FieldVal)
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.Next(V.Local.iOp)

'Loop through list of child WOs
F.Intrinsic.String.Build("[PARENT_JOB] = '{0}' and [PARENT_SUFFIX] = '{1}'",V.Args.Job,V.Args.Suffix,V.Local.sFilter)
F.Data.DataView.SetFilter("dtTopLevel","dvLadderChild",V.Local.sFilter)
F.Intrinsic.Control.For(V.Local.iJob,0,V.DataView.dtTopLevel!dvLadderChild.RowCount--,1)
	F.Intrinsic.Control.CallSub(LadderUpdates,"Job",V.DataView.dtTopLevel!dvLadderChild(V.Local.iJob).JOB!FieldVal,"Suffix",V.DataView.dtTopLevel!dvLadderChild(V.Local.iJob).SUFFIX!FieldVal,"Ratio",V.Args.Ratio,"TopLevel",False)
	F.Data.DataView.SetFilter("dtTopLevel","dvLadderChild",V.Local.sFilter)
F.Intrinsic.Control.Next(V.Local.iJob)

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage,"ScriptFile",V.Caller.ScriptFile,"CurrentSubroutine",V.Ambient.CurrentSubroutine)
	F.Intrinsic.Control.CallSub(F_WO_Dash_UnLoad)
F.Intrinsic.Control.EndTry
Program.Sub.LadderUpdates.End

Program.Sub.GetRouterPreview.Start
V.Local.sSQL.Declare
V.Local.iCnt.Declare
V.Local.iNextCnt.Declare
V.Local.sSeq.Declare
V.Local.iSeq.Declare
V.Local.sFilter.Declare
V.Local.bExists.Declare
F.Intrinsic.Control.Try

F.Intrinsic.Control.If(V.DataTable.dtRouterP.Exists)
	F.Data.DataTable.Close("dtRouterP")
F.Intrinsic.Control.EndIf

F.Intrinsic.String.Build("select ROUTER, LINE_ROUTER as ORIG_SEQ, LINE_ROUTER, '' as LINE_ROUTER_ORIG, LMO, PART_WC_OUTSIDE, SET_UP, RUN_TIME, RATE, DESC_RT_LINE, UM_INVENTORY from V_ROUTER_LINE where ROUTER = '{0}' order by LINE_ROUTER;",V.Screen.F_New_Op!txtPart.Text,V.Local.sSQL)
F.ODBC.Connection!con.OpenCompanyConnection
F.Data.DataTable.CreateFromSQL("dtRouterP","con",V.Local.sSQL,True)
F.ODBC.Connection!con.Close

V.Local.sSeq.Set(V.Screen.F_New_Op!txtSeq.Text)
V.Local.bExists.Set(True)
F.Data.DataView.Create("dtWOOpsChild","dvSeqCheck")
F.Intrinsic.Control.DoUntil(V.Local.bExists.Not)
	F.Intrinsic.String.Build("[JOB] = '{0}' and [SUFFIX] = '{1}' and [SEQ] = '{2}'",V.DataView.dtWOOpsChild!dvWO(0).JOB!FieldVal,V.DataView.dtWOOpsChild!dvWO(0).SUFFIX!FieldVal,V.Local.sSeq,V.Local.sFilter)
	F.Data.DataView.SetFilter("dtWOOpsChild","dvSeqCheck",V.Local.sFilter)
	F.Intrinsic.Control.If(V.DataView.dtWOOpsChild!dvSeqCheck.RowCount,=,0,and,V.Local.sSeq,!=,"000000",V.Local.sSeq.Long,<,995000)
		V.Local.bExists.Set(False)
	F.Intrinsic.Control.ElseIf(V.Local.sSeq.Long,>=,995000)
		V.Local.bExists.Set(False)
		V.Local.sSeq.Set("999999")
	F.Intrinsic.Control.Else
		F.Intrinsic.Math.Add(V.Local.sSeq,V.Global.iRouterInc,V.Local.sSeq)
		F.Intrinsic.String.LPad(V.Local.sSeq,"0",6,V.Local.sSeq)
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.Loop
F.Intrinsic.Control.For(V.Local.iCnt,0,V.DataTable.dtRouterP.RowCount--,1)
	F.Data.DataTable.SetValue("dtRouterP",V.Local.iCnt,"LINE_ROUTER",V.Local.sSeq,"LINE_ROUTER_ORIG",V.Local.sSeq)
	F.Intrinsic.Math.Add(V.Local.iCnt,1,V.Local.iNextCnt)
	F.Intrinsic.Control.If(V.Local.iNextCnt,<=,V.DataTable.dtRouterP.RowCount--)
		F.Intrinsic.Math.Sub(V.DataTable.dtRouterP(V.Local.iNextCnt).ORIG_SEQ!FieldValLong,V.DataTable.dtRouterP(V.Local.iCnt).ORIG_SEQ!FieldValLong,V.Local.iSeq)
		V.Local.bExists.Set(True)
		F.Intrinsic.Control.DoUntil(V.Local.bExists.Not)
			F.Intrinsic.Control.If(V.Local.sSeq,!=,"999999")
				F.Intrinsic.Math.Add(V.Local.sSeq,V.Local.iSeq,V.Local.sSeq)
				F.Intrinsic.String.LPad(V.Local.sSeq,"0",6,V.Local.sSeq)
			F.Intrinsic.Control.EndIf
			F.Intrinsic.String.Build("[JOB] = '{0}' and [SUFFIX] = '{1}' and [SEQ] = '{2}'",V.DataView.dtWOOpsChild!dvWO(0).JOB!FieldVal,V.DataView.dtWOOpsChild!dvWO(0).SUFFIX!FieldVal,V.Local.sSeq,V.Local.sFilter)
			F.Data.DataView.SetFilter("dtWOOpsChild","dvSeqCheck",V.Local.sFilter)
			F.Intrinsic.Control.If(V.DataView.dtWOOpsChild!dvSeqCheck.RowCount,=,0,and,V.Local.sSeq,!=,"000000",V.Local.sSeq.Long,<,995000)
				V.Local.bExists.Set(False)
			F.Intrinsic.Control.ElseIf(V.Local.sSeq.Long,>=,995000)
				V.Local.bExists.Set(False)
				V.Local.sSeq.Set("999999")
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.Loop
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.Next(V.Local.iCnt)
F.Data.DataView.Close("dtWOOpsChild","dvSeqCheck")

F.Data.DataView.Create("dtRouterP","dvSeqRange")

Gui.F_New_Op.gsgcRouterSeq.AddGridviewFromDataview("gvRouterP","dtRouterP","dvSeqRange")

Gui.F_New_Op.gsgcRouterSeq.SetGridviewProperty("gvRouterP","AllowSort",False)
Gui.F_New_Op.gsgcRouterSeq.SetGridviewProperty("gvRouterP","AllowFilter",False)
Gui.F_New_Op.gsgcRouterSeq.SetGridviewProperty("gvRouterP","ShowDetailTabs",False)
Gui.F_New_Op.gsgcRouterSeq.SetGridviewProperty("gvRouterP","AllowColumnMoving",False)
Gui.F_New_Op.gsgcRouterSeq.SetGridviewProperty("gvRouterP","EnterKeyNavigation","Vertical")
Gui.F_New_Op.gsgcRouterSeq.SetGridviewProperty("gvRouterP","OptionsViewColumnAutoWidth",False)

Gui.F_New_Op.gsgcRouterSeq.SetColumnProperty("gvRouterP","ROUTER","Visible",False)
Gui.F_New_Op.gsgcRouterSeq.SetColumnProperty("gvRouterP","ROUTER","AllowShowHide",False)
Gui.F_New_Op.gsgcRouterSeq.SetColumnProperty("gvRouterP","LINE_ROUTER_ORIG","Visible",False)
Gui.F_New_Op.gsgcRouterSeq.SetColumnProperty("gvRouterP","LINE_ROUTER_ORIG","AllowShowHide",False)

Gui.F_New_Op.gsgcRouterSeq.SetColumnProperty("gvRouterP","ORIG_SEQ","Caption","Router Seq")
Gui.F_New_Op.gsgcRouterSeq.SetColumnProperty("gvRouterP","LINE_ROUTER","Caption","Inserted Seq")
Gui.F_New_Op.gsgcRouterSeq.SetColumnProperty("gvRouterP","LMO","Caption","LMO")
Gui.F_New_Op.gsgcRouterSeq.SetColumnProperty("gvRouterP","PART_WC_OUTSIDE","Caption","Part/WC/Outs.")
Gui.F_New_Op.gsgcRouterSeq.SetColumnProperty("gvRouterP","SET_UP","Caption","Setup")
Gui.F_New_Op.gsgcRouterSeq.SetColumnProperty("gvRouterP","RUN_TIME","Caption","Run Time")
Gui.F_New_Op.gsgcRouterSeq.SetColumnProperty("gvRouterP","RATE","Caption","Rate")
Gui.F_New_Op.gsgcRouterSeq.SetColumnProperty("gvRouterP","DESC_RT_LINE","Caption","Description")
Gui.F_New_Op.gsgcRouterSeq.SetColumnProperty("gvRouterP","UM_INVENTORY","Caption","UM")

Gui.F_New_Op.gsgcRouterSeq.SetColumnProperty("gvRouterP","ORIG_SEQ","AllowEdit",False)
Gui.F_New_Op.gsgcRouterSeq.SetColumnProperty("gvRouterP","LINE_ROUTER","ReadOnly",False)
Gui.F_New_Op.gsgcRouterSeq.SetColumnProperty("gvRouterP","LMO","AllowEdit",False)
Gui.F_New_Op.gsgcRouterSeq.SetColumnProperty("gvRouterP","PART_WC_OUTSIDE","AllowEdit",False)
Gui.F_New_Op.gsgcRouterSeq.SetColumnProperty("gvRouterP","SET_UP","AllowEdit",False)
Gui.F_New_Op.gsgcRouterSeq.SetColumnProperty("gvRouterP","RUN_TIME","AllowEdit",False)
Gui.F_New_Op.gsgcRouterSeq.SetColumnProperty("gvRouterP","RATE","AllowEdit",False)
Gui.F_New_Op.gsgcRouterSeq.SetColumnProperty("gvRouterP","DESC_RT_LINE","AllowEdit",False)
Gui.F_New_Op.gsgcRouterSeq.SetColumnProperty("gvRouterP","UM_INVENTORY","AllowEdit",False)

Gui.F_New_Op.gsgcRouterSeq.SetColumnProperty("gvRouterP","LINE_ROUTER","HeaderFontItalic",True)
Gui.F_New_Op.gsgcRouterSeq.SetColumnProperty("gvRouterP","LINE_ROUTER","CellBackColor","LightYellow")
Gui.F_New_Op.gsgcRouterSeq.SetColumnProperty("gvRouterP","LINE_ROUTER","EditMaskType","numeric")
Gui.F_New_Op.gsgcRouterSeq.SetColumnProperty("gvRouterP","LINE_ROUTER","EditMask","000000")
Gui.F_New_Op.gsgcRouterSeq.SetColumnProperty("gvRouterP","LINE_ROUTER","EditMaskAsDisplayFormat",True)

Gui.F_New_Op.gsgcRouterSeq.AddStyleFormatCondition("gvRouterP","LINE_ROUTER","SeqOutOfRange","GreaterOrEqual",995000)
Gui.F_New_Op.gsgcRouterSeq.SetStyleFormatConditionProperty("gvRouterP","LINE_ROUTER","SeqOutOfRange","BackColor","Pink")
Gui.F_New_Op.gsgcRouterSeq.SetStyleFormatConditionProperty("gvRouterP","LINE_ROUTER","SeqOutOfRange","ApplyToRow",True)

Gui.F_New_Op.gsgcRouterSeq.SetColumnProperty("gvRouterP","LINE_ROUTER","Width",80)

Gui.F_New_Op.gsgcRouterSeq.BestFitColumns("gvRouterP")

Gui.F_New_Op.gsgcRouterSeq.MainView("gvRouterP")

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage,"ScriptFile",V.Caller.ScriptFile,"CurrentSubroutine",V.Ambient.CurrentSubroutine)
	F.Intrinsic.Control.CallSub(F_WO_Dash_UnLoad)
F.Intrinsic.Control.EndTry
Program.Sub.GetRouterPreview.End

Program.Sub.UpdateRouterPreview.Start
V.Local.sFilter.Declare
V.Local.sSeq.Declare
V.Local.bExists.Declare
V.Local.iSeq.Declare
V.Local.iCnt.Declare
V.Local.iNextCnt.Declare
F.Intrinsic.Control.Try

F.Intrinsic.String.Build("[ORIG_SEQ] >= '{0}' and [ORIG_SEQ] <= '{1}'",V.Screen.F_New_Op!txtRouterBeg.Text,V.Screen.F_New_Op!txtRouterEnd.Text,V.Local.sFilter)
F.Data.DataView.SetFilter("dtRouterP","dvSeqRange",V.Local.sFilter)

V.Local.sSeq.Set(V.Screen.F_New_Op!txtSeq.Text)
V.Local.bExists.Set(True)
F.Data.DataView.Create("dtWOOpsChild","dvSeqCheck")
F.Intrinsic.Control.DoUntil(V.Local.bExists.Not)
	F.Intrinsic.String.Build("[JOB] = '{0}' and [SUFFIX] = '{1}' and [SEQ] = '{2}'",V.DataView.dtWOOpsChild!dvWO(0).JOB!FieldVal,V.DataView.dtWOOpsChild!dvWO(0).SUFFIX!FieldVal,V.Local.sSeq,V.Local.sFilter)
	F.Data.DataView.SetFilter("dtWOOpsChild","dvSeqCheck",V.Local.sFilter)
	F.Intrinsic.Control.If(V.DataView.dtWOOpsChild!dvSeqCheck.RowCount,=,0,and,V.Local.sSeq,!=,"000000",V.Local.sSeq.Long,<,995000)
		V.Local.bExists.Set(False)
	F.Intrinsic.Control.ElseIf(V.Local.sSeq.Long,>=,995000)
		V.Local.bExists.Set(False)
		V.Local.sSeq.Set("999999")
	F.Intrinsic.Control.Else
		F.Intrinsic.Math.Add(V.Local.sSeq,V.Global.iRouterInc,V.Local.sSeq)
		F.Intrinsic.String.LPad(V.Local.sSeq,"0",6,V.Local.sSeq)
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.Loop
F.Intrinsic.Control.For(V.Local.iCnt,0,V.DataView.dtRouterP!dvSeqRange.RowCount--,1)
	F.Data.DataView.SetValue("dtRouterP","dvSeqRange",V.Local.iCnt,"LINE_ROUTER",V.Local.sSeq,"LINE_ROUTER_ORIG",V.Local.sSeq)
	F.Intrinsic.Math.Add(V.Local.iCnt,1,V.Local.iNextCnt)
	F.Intrinsic.Control.If(V.Local.iNextCnt,<=,V.DataView.dtRouterP!dvSeqRange.RowCount--)
		F.Intrinsic.Math.Sub(V.DataView.dtRouterP!dvSeqRange(V.Local.iNextCnt).ORIG_SEQ!FieldValLong,V.DataView.dtRouterP!dvSeqRange(V.Local.iCnt).ORIG_SEQ!FieldValLong,V.Local.iSeq)
		V.Local.bExists.Set(True)
		F.Intrinsic.Control.DoUntil(V.Local.bExists.Not)
			F.Intrinsic.Control.If(V.Local.sSeq,!=,"999999")
				F.Intrinsic.Math.Add(V.Local.sSeq,V.Local.iSeq,V.Local.sSeq)
				F.Intrinsic.String.LPad(V.Local.sSeq,"0",6,V.Local.sSeq)
			F.Intrinsic.Control.EndIf
			F.Intrinsic.String.Build("[JOB] = '{0}' and [SUFFIX] = '{1}' and [SEQ] = '{2}'",V.DataView.dtWOOpsChild!dvWO(0).JOB!FieldVal,V.DataView.dtWOOpsChild!dvWO(0).SUFFIX!FieldVal,V.Local.sSeq,V.Local.sFilter)
			F.Data.DataView.SetFilter("dtWOOpsChild","dvSeqCheck",V.Local.sFilter)
			F.Intrinsic.Control.If(V.DataView.dtWOOpsChild!dvSeqCheck.RowCount,=,0,and,V.Local.sSeq,!=,"000000",V.Local.sSeq.Long,<,995000)
				V.Local.bExists.Set(False)
			F.Intrinsic.Control.ElseIf(V.Local.sSeq.Long,>=,995000)
				V.Local.bExists.Set(False)
				V.Local.sSeq.Set("999999")
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.Loop
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.Next(V.Local.iCnt)
F.Data.DataView.Close("dtWOOpsChild","dvSeqCheck")

Gui.F_New_Op.gsgcRouterSeq.SetFocus

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage,"ScriptFile",V.Caller.ScriptFile,"CurrentSubroutine",V.Ambient.CurrentSubroutine)
	F.Intrinsic.Control.CallSub(F_WO_Dash_UnLoad)
F.Intrinsic.Control.EndTry
Program.Sub.UpdateRouterPreview.End

Program.Sub.gsgcRouterSeq_CellValueChanged.Start
V.Local.sFilter.Declare
F.Intrinsic.Control.Try

F.Intrinsic.Control.SelectCase(V.Args.Column.UCase)
	F.Intrinsic.Control.Case("LINE_ROUTER")
		F.Intrinsic.Control.If(V.Args.Value,=,"000000",or,V.Args.Value.Long,>=,995000)
			F.Data.DataTable.SetValue("dtRouterP",V.Args.RowIndex,"LINE_ROUTER",V.DataTable.dtRouterP(V.Args.RowIndex).LINE_ROUTER_ORIG!FieldVal)
			F.Intrinsic.UI.Msgbox("Sequence cannot be 000000 or greater than 994999.")
		F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.If(V.DataTable.dtRouterP(V.Args.RowIndex).LINE_ROUTER!FieldVal,!=,V.DataTable.dtRouterP(V.Args.RowIndex).LINE_ROUTER_ORIG!FieldVal)
			F.Intrinsic.String.Build("[ORIG_SEQ] >= '{0}' and [ORIG_SEQ] <= '{1}' and [LINE_ROUTER] = '{2}'",V.Screen.F_New_Op!txtRouterBeg.Text,V.Screen.F_New_Op!txtRouterEnd.Text,V.Args.Value,V.Local.sFilter)
			F.Data.DataView.Create("dtRouterP","dvSeqCheck")
			F.Data.DataView.SetFilter("dtRouterP","dvSeqCheck",V.Local.sFilter)
			F.Intrinsic.Control.If(V.DataView.dtRouterP!dvSeqCheck.RowCount,=,1)
				F.Intrinsic.Control.If(V.DataView.dtRouterP!dvSeqCheck(0).DataTableIndex,!=,V.Args.RowIndex)
					'Seq already exists on Router (and isn't the line currently being edited)
					F.Intrinsic.String.Build("Sequence {0} already exists on router.",V.Args.Value,V.Local.sFilter)
					F.Intrinsic.UI.Msgbox(V.Local.sFilter)
					F.Data.DataTable.SetValue("dtRouterP",V.Args.RowIndex,"LINE_ROUTER",V.DataTable.dtRouterP(V.Args.RowIndex).LINE_ROUTER_ORIG!FieldVal)
				F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.ElseIf(V.DataView.dtRouterP!dvSeqCheck.RowCount,>,1)
				F.Data.DataTable.SetValue("dtRouterP",V.Args.RowIndex,"LINE_ROUTER",V.DataTable.dtRouterP(V.Args.RowIndex).LINE_ROUTER_ORIG!FieldVal)
			F.Intrinsic.Control.EndIf
			F.Data.DataView.Close("dtRouterP","dvSeqCheck")
			F.Intrinsic.Control.If(V.DataTable.dtRouterP(V.Args.RowIndex).LINE_ROUTER!FieldVal,!=,V.DataTable.dtRouterP(V.Args.RowIndex).LINE_ROUTER_ORIG!FieldVal)
				'Check operations to see if that sequence already exists
				F.Intrinsic.String.Build("[JOB] = '{0}' and [SUFFIX] = '{1}' and [SEQ] = '{2}'",V.DataView.dtWOOpsChild!dvWO(0).JOB!FieldVal,V.DataView.dtWOOpsChild!dvWO(0).SUFFIX!FieldVal,V.Args.Value,V.Local.sFilter)
				F.Data.DataView.Create("dtWOOpsChild","dvSeqCheck")
				F.Data.DataView.SetFilter("dtWOOpsChild","dvSeqCheck",V.Local.sFilter)
				F.Intrinsic.Control.If(V.DataView.dtWOOpsChild!dvSeqCheck.RowCount,>,0)
					'Sequence already exists on operations, reset
					F.Data.DataTable.SetValue("dtRouterP",V.Args.RowIndex,"LINE_ROUTER",V.DataTable.dtRouterP(V.Args.RowIndex).LINE_ROUTER_ORIG!FieldVal)
					F.Intrinsic.String.Build("Sequence {0} already exists on operations list for WO {1}-{2}.",V.Args.Value,V.DataView.dtWOOpsChild!dvWO(0).JOB!FieldVal,V.DataView.dtWOOpsChild!dvWO(0).SUFFIX!FieldVal,V.Local.sFilter)
					F.Intrinsic.UI.Msgbox(V.Local.sFilter)
				F.Intrinsic.Control.EndIf
				F.Data.DataView.Close("dtWOOpsChild","dvSeqCheck")
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.EndIf
F.Intrinsic.Control.EndSelect

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage,"ScriptFile",V.Caller.ScriptFile,"CurrentSubroutine",V.Ambient.CurrentSubroutine)
	F.Intrinsic.Control.CallSub(F_WO_Dash_UnLoad)
F.Intrinsic.Control.EndTry
Program.Sub.gsgcRouterSeq_CellValueChanged.End

Program.Sub.cmdTSignoffBRW_Click.Start
V.Local.sGroups.Declare
V.Local.sRet.Declare
F.Intrinsic.Control.Try
'Okay this one is a bit weird. Approval users/groups come from the company database and the common database

F.ODBC.Connection!con.OpenCompanyConnection
F.Data.DataTable.CreateFromSQL("dtAppGrp","con","select distinct rtrim(ENG_GROUP) as GRP_USR, 'Group' as APP_TYPE from ENG_GROUP order by GRP_USR;",False)
F.ODBC.Connection!con.Close
F.ODBC.Connection!ccon.OpenCommonConnection
F.Data.DataTable.CreateFromSQL("dtAppUsr","ccon","select rtrim(GS_USER) as GRP_USR, 'User' as APP_TYPE from USER_INFORMATION where COMPANY_SPECIFIC = 0 order by GRP_USR",False)
F.ODBC.Connection!ccon.Close

F.Data.DataTable.Merge("dtAppUsr","dtAppGrp",True,2)
F.Data.DataTable.Close("dtAppUsr")

F.Data.DataView.Create("dtAppGrp","dvString")
F.Data.DataView.SetSort("dtAppGrp","dvString","GRP_USR asc")

F.Data.DataView.ToString("dtAppGrp","dvString","GRP_USR*!*APP_TYPE","*!*","#$#",V.Local.sGroups)
F.Data.DataTable.Close("dtAppGrp")

F.Intrinsic.UI.BrowserFromString("Select Approval Group/User",V.Local.sGroups,"*!*","#$#","Group/User*!*Approval Type","25*!*25",V.Local.sRet)

F.Intrinsic.Control.If(V.Local.sRet.IsNotCancel)
	F.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)
	
	Gui.F_New_Op.txtTSignoff.Text(V.Local.sRet(0))
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage,"ScriptFile",V.Caller.ScriptFile,"CurrentSubroutine",V.Ambient.CurrentSubroutine)
	F.Intrinsic.Control.CallSub(F_WO_Dash_UnLoad)
F.Intrinsic.Control.EndTry
Program.Sub.cmdTSignoffBRW_Click.End

Program.Sub.txtDuration_LostFocus.Start
F.Intrinsic.Control.Try

F.Intrinsic.Control.If(V.Screen.F_New_Op!txtDuration.Text.Float,>,999999.99)
	Gui.F_New_Op.txtDuration.Text("999999.99")
F.Intrinsic.Control.ElseIf(V.Screen.F_New_Op!txtDuration.Text.Float,<=,0)
	Gui.F_New_Op.txtDuration.Text("")
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage,"ScriptFile",V.Caller.ScriptFile,"CurrentSubroutine",V.Ambient.CurrentSubroutine)
	F.Intrinsic.Control.CallSub(F_WO_Dash_UnLoad)
F.Intrinsic.Control.EndTry
Program.Sub.txtDuration_LostFocus.End

Program.Sub.RescheduleJobs.Start
V.Local.sFilter.Declare
V.Local.sParams.Declare
V.Local.iCnt.Declare
V.Local.iRet.Declare
V.Local.dStart.Declare
V.Local.dDue.Declare
F.Intrinsic.Control.Try

F.Intrinsic.Control.If(V.DataTable.dtRescheduleJobs.Exists,=,False)
	F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.UnBlockEvents
Gui.F_Sched_Type..Show
Gui.F_Sched_Type..WaitForDismiss
F.Intrinsic.Control.BlockEvents

F.Intrinsic.Control.For(V.Local.iCnt,0,V.DataTable.dtRescheduleJobs.RowCount--,1)
	F.Intrinsic.String.Build("[JOB] = '{0}' and [SUFFIX] = '{1}' and [LMO] <> 'C'",V.DataTable.dtRescheduleJobs(V.Local.iCnt).JOB!FieldVal,V.DataTable.dtRescheduleJobs(V.Local.iCnt).SUFFIX!FieldVal,V.Local.sFilter)
	F.Data.DataView.SetFilter("dtWOOpsChild","dvWO",V.Local.sFilter)
	V.Local.dStart.Set(V.DataTable.dtRescheduleJobs(V.Local.iCnt).DATE_START!FieldVal)
	V.Local.dDue.Set(V.DataTable.dtRescheduleJobs(V.Local.iCnt).DATE_DUE!FieldVal)
	F.Intrinsic.String.ConcatCallWrapperArgs(V.Local.dStart.FormatYYMMDD,V.Local.dDue.FormatYYMMDD,V.DataTable.dtRescheduleJobs(V.Local.iCnt).JOB!FieldVal,V.DataTable.dtRescheduleJobs(V.Local.iCnt).SUFFIX!FieldVal,V.DataView.dtWOOpsChild!dvWO(0).SEQ!FieldVal,V.Global.sSchedType,V.Local.sParams)
	F.Global.General.CallWrapperSync(500030,V.Local.sParams)
	
	'This throws a GS Error when it runs
'	F.Global.Callwrapper.New("RescheduleJob","Manufacturing.ScheduleExistingWorkOrder")
'	F.Global.Callwrapper.SetProperty("RescheduleJob","WorkOrder",V.DataTable.dtRescheduleJobs(V.Local.iCnt).JOB!FieldVal)
'	F.Global.Callwrapper.SetProperty("RescheduleJob","WorkOrderSuffix",V.DataTable.dtRescheduleJobs(V.Local.iCnt).SUFFIX!FieldVal)
'	F.Global.Callwrapper.SetProperty("RescheduleJob","WorkOrderSequence","000000")
'	F.Global.Callwrapper.SetProperty("RescheduleJob","StartDate",V.DataTable.dtRescheduleJobs(V.Local.iCnt).DATE_START!FieldVal)
'	F.Global.Callwrapper.SetProperty("RescheduleJob","DueDate",V.DataTable.dtRescheduleJobs(V.Local.iCnt).DATE_DUE!FieldVal)
'	F.Global.Callwrapper.SetProperty("RescheduleJob","HideWindow",True)
'	F.Global.Callwrapper.Run("RescheduleJob")
F.Intrinsic.Control.Next(V.Local.iCnt)

F.Data.DataTable.Close("dtRescheduleJobs")

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage,"ScriptFile",V.Caller.ScriptFile,"CurrentSubroutine",V.Ambient.CurrentSubroutine)
	F.Intrinsic.Control.CallSub(F_WO_Dash_UnLoad)
F.Intrinsic.Control.EndTry
Program.Sub.RescheduleJobs.End

Program.Sub.cmdSched_Click.Start
F.Intrinsic.Control.Try

F.Intrinsic.Control.SelectCase(V.Args.ControlName.UCase)
	F.Intrinsic.Control.Case("CMDBACK")
		'Backward
		V.Global.sSchedType.Set("B")
'		V.Global.sSchedType.Set("Backward")
	F.Intrinsic.Control.Case("CMDFORW")
		'Forward
		V.Global.sSchedType.Set("F")
'		V.Global.sSchedType.Set("Forward")
	F.Intrinsic.Control.Case("CMDHYBR")
		'Hybrid
		V.Global.sSchedType.Set("H")
'		V.Global.sSchedType.Set("FromCurrentSequence")
F.Intrinsic.Control.EndSelect

Gui.F_Sched_Type..Visible(False)

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage,"ScriptFile",V.Caller.ScriptFile,"CurrentSubroutine",V.Ambient.CurrentSubroutine)
	F.Intrinsic.Control.CallSub(F_WO_Dash_UnLoad)
F.Intrinsic.Control.EndTry
Program.Sub.cmdSched_Click.End

Program.Sub.CreateLock.Start
'V.Args.Job, V.Args.Suffix
V.Local.sWO.Declare
V.Local.sSQL.Declare
V.Local.sMsg.Declare
V.Local.iRet.Declare
F.Intrinsic.Control.Try

F.Intrinsic.String.Build("{0}-{1}",V.Args.Job,V.Args.Suffix,V.Local.sWO)

'Doesn't work on old systems, reworking
F.Global.General.CreateSoftLock("WO",V.Local.sWO,V.Local.iRet)

F.Intrinsic.Control.If(V.Local.iRet,=,1)
	'Lock created successfully
	F.Intrinsic.Variable.AddRV("LockPresent",False)
F.Intrinsic.Control.Else
	'Lock could not be created because there is already a lock on this WO
	F.Intrinsic.String.Build("select rtrim(USER_ID), F_DATE, LOCK_TIME, rtrim(PGM), rtrim(REF), PID from X_LOCK_FILE where LOCK_TYPE = 'WO' and REC_KEY = '{0}' and COMPANY = '{1}';",V.Local.sWO,V.Caller.CompanyCode,V.Local.sSQL)
	F.ODBC.Connection!con.OpenCompanyConnection
	F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL,V.Local.sSQL)
	F.ODBC.Connection!con.Close
	F.Intrinsic.String.Split(V.Local.sSQL,"*!*",V.Local.sSQL)
	
	F.Intrinsic.Control.If(V.Local.sSQL(0),!=,V.Caller.User.Trim,or,V.Local.sSQL(3).UCase,!=,"OCTSRS.NET.EXE",V.Local.sSQL(4).UCase,!=,"GCG_5896_WORKORDER_DASHBOARD.G2U")
		'Not the user's current instance
		F.Intrinsic.String.Build("Could not make changes to WO {2} because user {3} has the WO locked.{0}Reverting change.{0}{0}Date:{1}{1}{4}{0}Time:{1}{1}{5}{0}Program:{1}{1}{6}{0}Reference:{1}{7}",V.Ambient.NewLine,V.Ambient.Tab,V.Local.sWO,V.Local.sSQL(0),V.Local.sSQL(1),V.Local.sSQL(2),V.Local.sSQL(3),V.Local.sSQL(4),V.Local.sMsg)
		F.Intrinsic.UI.Msgbox(V.Local.sMsg)
		
		F.Intrinsic.Variable.AddRV("LockPresent",True)
	F.Intrinsic.Control.Else
		F.Intrinsic.Variable.AddRV("LockPresent",False)
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage,"ScriptFile",V.Caller.ScriptFile,"CurrentSubroutine",V.Ambient.CurrentSubroutine)
	F.Intrinsic.Control.CallSub(F_WO_Dash_UnLoad)
F.Intrinsic.Control.EndTry
Program.Sub.CreateLock.End

Program.Sub.DestroyLock.Start
'V.Args.Job, V.Args.Suffix
V.Local.sFilter.Declare
V.Local.sWO.Declare
V.Local.sSQL.Declare
V.Local.iRet.Declare
F.Intrinsic.Control.Try

'First, we need to check that the Job and Suffix do not have any changes on the header or in the operations
F.Data.DataView.Create("dtTopLevel","dvDestroyCheck")
F.Intrinsic.String.Build("[JOB] = '{0}' and [SUFFIX] = '{1}' and [DELTA] = True",V.Args.Job,V.Args.Suffix,V.Local.sFilter)
F.Data.DataView.SetFilter("dtTopLevel","dvDestroyCheck",V.Local.sFilter)
F.Intrinsic.Control.If(V.DataView.dtTopLevel!dvDestroyCheck.RowCount,=,0)
	F.Data.DataView.Create("dtTopLevel$dtSubLevel","dvDestroyCheckChild")
	F.Data.DataView.SetFilter("dtTopLevel","dvDestroyCheckChild",V.Local.sFilter)
	F.Intrinsic.Control.If(V.DataView.dtTopLevel!dvDestroyCheckChild.RowCount,=,0)
		F.Data.DataView.Create("dtWOOpsChild","dvDestroyCheck")
		F.Intrinsic.String.Build("[JOB] = '{0}' and [SUFFIX] = '{1}' and [DELTA] = True",V.Args.Job,V.Args.Suffix,V.Local.sFilter)
		F.Data.DataView.SetFilter("dtWOOpsChild","dvDestroyCheck",V.Local.sFilter)
		F.Intrinsic.Control.If(V.DataView.dtWOOpsChild!dvDestroyCheck.RowCount,=,0)
			F.Intrinsic.String.Build("{0}-{1}",V.Args.Job,V.Args.Suffix,V.Local.sWO)
			
			F.Global.General.ReadSoftLock("WO",V.Local.sWO,V.Local.iRet)
			
			F.Intrinsic.Control.If(V.Local.iRet,=,1)
				'Lock exists for WO
				F.Intrinsic.String.Build("select USER_ID, F_DATE, LOCK_TIME, PGM, REF, PID from X_LOCK_FILE where LOCK_TYPE = 'WO' and REC_KEY = '{0}' and COMPANY = '{1}';",V.Local.sWO,V.Caller.CompanyCode,V.Local.sSQL)
				F.ODBC.Connection!con.OpenCompanyConnection
				F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL,V.Local.sSQL)
				F.ODBC.Connection!con.Close
				F.Intrinsic.Control.If(V.Ambient.ExecuteAndReturnEOF)
					F.Data.DataView.Close("dtWOOpsChild","dvDestroyCheck")
					F.Data.DataView.Close("dtTopLevel","dvDestroyCheckChild")
					F.Data.DataView.Close("dtTopLevel","dvDestroyCheck")
					F.Intrinsic.Control.ExitSub
				F.Intrinsic.Control.EndIf
				F.Intrinsic.String.Split(V.Local.sSQL,"*!*",V.Local.sSQL)
				
				F.Intrinsic.Control.If(V.Local.sSQL(0),=,V.Caller.User,and,V.Local.sSQL(3).UCase,=,"OCTSRS.NET.EXE",V.Local.sSQL(4).UCase,=,"GCG_5896_WORKORDER_DASHBOARD.G2U")
					'User's current instance
					F.Global.General.DestroySoftLock("WO",V.Local.sWO,V.Local.iRet)
				F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.EndIf
		F.Data.DataView.Close("dtWOOpsChild","dvDestroyCheck")
	F.Intrinsic.Control.EndIf
	F.Data.DataView.Close("dtTopLevel","dvDestroyCheckChild")
F.Intrinsic.Control.EndIf
F.Data.DataView.Close("dtTopLevel","dvDestroyCheck")

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage,"ScriptFile",V.Caller.ScriptFile,"CurrentSubroutine",V.Ambient.CurrentSubroutine)
	F.Intrinsic.Control.CallSub(F_WO_Dash_UnLoad)
F.Intrinsic.Control.EndTry
Program.Sub.DestroyLock.End

Program.Sub.ForceDestroyLock.Start
'V.Args.Job, V.Args.Suffix
V.Local.sWO.Declare
V.Local.sSQL.Declare
V.Local.iRet.Declare
F.Intrinsic.Control.Try

'First, we need to check that the Job and Suffix do not have any changes on the header or in the operations
F.Intrinsic.String.Build("{0}-{1}",V.Args.Job,V.Args.Suffix,V.Local.sWO)

F.Global.General.ReadSoftLock("WO",V.Local.sWO,V.Local.iRet)

F.Intrinsic.Control.If(V.Local.iRet,=,1)
	'Lock exists for WO
	F.Intrinsic.String.Build("select USER_ID, F_DATE, LOCK_TIME, PGM, REF, PID from X_LOCK_FILE where LOCK_TYPE = 'WO' and REC_KEY = '{0}' and COMPANY = '{1}';",V.Local.sWO,V.Caller.CompanyCode,V.Local.sSQL)
	F.ODBC.Connection!conx.OpenCompanyConnection
	F.ODBC.Connection!conx.ExecuteAndReturn(V.Local.sSQL,V.Local.sSQL)
	F.ODBC.Connection!conx.Close
	F.Intrinsic.Control.If(V.Ambient.ExecuteAndReturnEOF)
		F.Data.DataView.Close("dtWOOpsChild","dvDestroyCheck")
		F.Data.DataView.Close("dtTopLevel","dvDestroyCheckChild")
		F.Data.DataView.Close("dtTopLevel","dvDestroyCheck")
		F.Intrinsic.Control.ExitSub
	F.Intrinsic.Control.EndIf
	F.Intrinsic.String.Split(V.Local.sSQL,"*!*",V.Local.sSQL)
	
	F.Intrinsic.Control.If(V.Local.sSQL(0),=,V.Caller.User,and,V.Local.sSQL(3).UCase,=,"OCTSRS.NET.EXE",V.Local.sSQL(4).UCase,=,"GCG_5896_WORKORDER_DASHBOARD.G2U")
		'User's current instance
		F.Global.General.DestroySoftLock("WO",V.Local.sWO,V.Local.iRet)
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage,"ScriptFile",V.Caller.ScriptFile,"CurrentSubroutine",V.Ambient.CurrentSubroutine)
	F.Intrinsic.Control.CallSub(F_WO_Dash_UnLoad)
F.Intrinsic.Control.EndTry
Program.Sub.ForceDestroyLock.End

Program.Sub.TopLevelLadderUpdateNoLock.Start
F.Intrinsic.Control.Try

F.Intrinsic.Variable.AddRV("LockPresent",False)

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage,"ScriptFile",V.Caller.ScriptFile,"CurrentSubroutine",V.Ambient.CurrentSubroutine)
	F.Intrinsic.Control.CallSub(F_WO_Dash_UnLoad)
F.Intrinsic.Control.EndTry
Program.Sub.TopLevelLadderUpdateNoLock.End

Program.Sub.LoadScreenSettings.Start
V.Local.sProject.Declare
V.Local.iOpenView.Declare
F.Intrinsic.Control.Try

F.Global.Registry.ReadValue(V.Caller.User,V.Caller.CompanyCode,"WO Edit Dashboard Screen",5896,500,5,"***NO PROJECT***",V.Local.sProject)
F.Global.Registry.ReadValue(V.Caller.User,V.Caller.CompanyCode,"WO Edit Dashboard Screen",5896,500,1,0,V.Local.iOpenView)
F.Intrinsic.Control.If(V.Local.sProject,!=,"***NO PROJECT***")
	Gui.F_WO_Dash.txtProject.Text(V.Local.sProject)
F.Intrinsic.Control.EndIf
F.Intrinsic.Control.If(V.Local.iOpenView,=,1,and,V.Global.bPerms,=,True)
	Gui.F_WO_Dash.optOpen.Value(1)
F.Intrinsic.Control.ElseIf(V.Local.iOpenView,=,2)
	Gui.F_WO_Dash.optView.Value(1)
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage,"ScriptFile",V.Caller.ScriptFile,"CurrentSubroutine",V.Ambient.CurrentSubroutine)
	F.Intrinsic.Control.CallSub(F_WO_Dash_UnLoad)
F.Intrinsic.Control.EndTry
Program.Sub.LoadScreenSettings.End

Program.Sub.SaveScreenSettings.Start
F.Intrinsic.Control.Try

F.Intrinsic.Control.If(V.Screen.F_WO_Dash!optOpen.Value)
	F.Global.Registry.AddValue(V.Caller.User,V.Caller.CompanyCode,"WO Edit Dashboard Screen",5896,500,False,V.Screen.F_WO_Dash!txtProject.Text.Trim,False,1,0,1/1/1900,12:00:00 AM,"")
F.Intrinsic.Control.Else
	F.Global.Registry.AddValue(V.Caller.User,V.Caller.CompanyCode,"WO Edit Dashboard Screen",5896,500,False,V.Screen.F_WO_Dash!txtProject.Text.Trim,False,2,0,1/1/1900,12:00:00 AM,"")
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage,"ScriptFile",V.Caller.ScriptFile,"CurrentSubroutine",V.Ambient.CurrentSubroutine)
	F.Intrinsic.Control.CallSub(F_WO_Dash_UnLoad)
F.Intrinsic.Control.EndTry
Program.Sub.SaveScreenSettings.End

Program.Sub.F_Notes_UnLoad.Start
F.Intrinsic.Control.Try

Gui.F_Notes..Visible(False)
Gui.F_WO_Dash..SetFocus

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage,"ScriptFile",V.Caller.ScriptFile,"CurrentSubroutine",V.Ambient.CurrentSubroutine)
	F.Intrinsic.Control.CallSub(F_WO_Dash_UnLoad)
F.Intrinsic.Control.EndTry
Program.Sub.F_Notes_UnLoad.End

Program.Sub.cmdNotes_Click.Start
F.Intrinsic.Control.Try

Gui.F_Notes..Show

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage,"ScriptFile",V.Caller.ScriptFile,"CurrentSubroutine",V.Ambient.CurrentSubroutine)
	F.Intrinsic.Control.CallSub(F_WO_Dash_UnLoad)
F.Intrinsic.Control.EndTry
Program.Sub.cmdNotes_Click.End

Program.Sub.Comments.Start
${$5$}$2.0.0.0$}$2
${$6$}$bbaker$}$20231221135227891$}$pM7xsHplA2E9VCTenDTJ47gi1rF/t66W3J05vTeZf+2YOtJKtMEeRzoSaXKGqWiOE94aYm/3tRQ=
Program.Sub.Comments.End